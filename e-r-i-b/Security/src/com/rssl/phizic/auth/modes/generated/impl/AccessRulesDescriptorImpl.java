//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2014.12.10 at 01:19:03 PM MSK 
//


package com.rssl.phizic.auth.modes.generated.impl;

public class AccessRulesDescriptorImpl implements com.rssl.phizic.auth.modes.generated.AccessRulesDescriptor, com.sun.xml.bind.JAXBObject, com.rssl.phizic.auth.modes.generated.impl.runtime.UnmarshallableObject, com.rssl.phizic.auth.modes.generated.impl.runtime.XMLSerializable, com.rssl.phizic.auth.modes.generated.impl.runtime.ValidatableObject
{

    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _GuestRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _SecureRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _SmsBankingRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _EmployeeRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _MobileLimitedRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _AnonymousRule;
    protected com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor _SimpleRule;
    public final static java.lang.Class version = (com.rssl.phizic.auth.modes.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.rssl.phizic.auth.modes.generated.AccessRulesDescriptor.class);
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getGuestRule() {
        return _GuestRule;
    }

    public void setGuestRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _GuestRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getSecureRule() {
        return _SecureRule;
    }

    public void setSecureRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _SecureRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getSmsBankingRule() {
        return _SmsBankingRule;
    }

    public void setSmsBankingRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _SmsBankingRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getEmployeeRule() {
        return _EmployeeRule;
    }

    public void setEmployeeRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _EmployeeRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getMobileLimitedRule() {
        return _MobileLimitedRule;
    }

    public void setMobileLimitedRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _MobileLimitedRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getAnonymousRule() {
        return _AnonymousRule;
    }

    public void setAnonymousRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _AnonymousRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor getSimpleRule() {
        return _SimpleRule;
    }

    public void setSimpleRule(com.rssl.phizic.auth.modes.generated.AccessRuleDescriptor value) {
        _SimpleRule = value;
    }

    public com.rssl.phizic.auth.modes.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rssl.phizic.auth.modes.generated.impl.runtime.UnmarshallingContext context) {
        return new com.rssl.phizic.auth.modes.generated.impl.AccessRulesDescriptorImpl.Unmarshaller(context);
    }

    public void serializeBody(com.rssl.phizic.auth.modes.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_EmployeeRule == null) {
            if (_SimpleRule!= null) {
                context.startElement("", "simple-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SimpleRule), "SimpleRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SimpleRule), "SimpleRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SimpleRule), "SimpleRule");
                context.endElement();
            }
            if (_SecureRule!= null) {
                context.startElement("", "secure-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SecureRule), "SecureRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SecureRule), "SecureRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SecureRule), "SecureRule");
                context.endElement();
            }
            if (_AnonymousRule!= null) {
                context.startElement("", "anonymous-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _AnonymousRule), "AnonymousRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _AnonymousRule), "AnonymousRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _AnonymousRule), "AnonymousRule");
                context.endElement();
            }
            if (_SmsBankingRule!= null) {
                context.startElement("", "smsBanking-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _SmsBankingRule), "SmsBankingRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _SmsBankingRule), "SmsBankingRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _SmsBankingRule), "SmsBankingRule");
                context.endElement();
            }
            if (_MobileLimitedRule!= null) {
                context.startElement("", "mobileLimited-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _MobileLimitedRule), "MobileLimitedRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _MobileLimitedRule), "MobileLimitedRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _MobileLimitedRule), "MobileLimitedRule");
                context.endElement();
            }
            if (_GuestRule!= null) {
                context.startElement("", "guest-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _GuestRule), "GuestRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _GuestRule), "GuestRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _GuestRule), "GuestRule");
                context.endElement();
            }
        } else {
            if (((((((_GuestRule == null)&&(_EmployeeRule!= null))&&(_MobileLimitedRule == null))&&(_SmsBankingRule == null))&&(_AnonymousRule == null))&&(_SimpleRule == null))&&(_SecureRule == null)) {
                context.startElement("", "employee-rule");
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _EmployeeRule), "EmployeeRule");
                context.endNamespaceDecls();
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _EmployeeRule), "EmployeeRule");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _EmployeeRule), "EmployeeRule");
                context.endElement();
            }
        }
    }

    public void serializeAttributes(com.rssl.phizic.auth.modes.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.rssl.phizic.auth.modes.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.rssl.phizic.auth.modes.generated.AccessRulesDescriptor.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0006ppsq\u0000~\u0000\u0000ppsr\u0000\'com."
+"sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000"
+"\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Elem"
+"entExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentMode"
+"lq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000"
+"~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u000exq\u0000~\u0000\u0003q\u0000~\u0000\u0012psr\u00002com.sun.msv.gr"
+"ammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0011\u0001"
+"q\u0000~\u0000\u001csr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom."
+"sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.gramma"
+"r.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u001dq\u0000~\u0000\"sr\u0000"
+"#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet"
+"\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000$xq\u0000~\u0000\u001ft\u00009com.rssl.ph"
+"izic.auth.modes.generated.AccessRuleDescriptort\u0000+http://java"
+".sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012psr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com."
+"sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUr"
+"iq\u0000~\u0000$L\u0000\btypeNameq\u0000~\u0000$L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/"
+"xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchem"
+"at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Co"
+"llapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProc"
+"essor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSet"
+"Expression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair"
+"\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000$L\u0000\fnamespaceURIq\u0000~\u0000$xpq\u0000~\u00005q\u0000~\u00004"
+"sq\u0000~\u0000#t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~"
+"\u0000\"sq\u0000~\u0000#t\u0000\u000bsimple-rulet\u0000\u0000q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0006pps"
+"q\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000"
+"#q\u0000~\u0000&q\u0000~\u0000\'sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000bsecur"
+"e-ruleq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000"
+"ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000&q\u0000~\u0000\'sq\u0000"
+"~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000eanonymous-ruleq\u0000~\u0000B"
+"q\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016q\u0000~"
+"\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000&q\u0000~\u0000\'sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019"
+"q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u000fsmsBanking-ruleq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000"
+"\u0000ppsq\u0000~\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q"
+"\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000&q\u0000~\u0000\'sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000"
+"-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\u0012mobileLimited-ruleq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\u0000ppsq\u0000~"
+"\u0000\rq\u0000~\u0000\u0012p\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000"
+"~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000&q\u0000~\u0000\'sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q"
+"\u0000~\u0000\"sq\u0000~\u0000#t\u0000\nguest-ruleq\u0000~\u0000Bq\u0000~\u0000\"sq\u0000~\u0000\rpp\u0000sq\u0000~\u0000\u0006ppsq\u0000~\u0000\rpp\u0000s"
+"q\u0000~\u0000\u0000ppsq\u0000~\u0000\u0016q\u0000~\u0000\u0012psq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000\u001cq\u0000~\u0000 q\u0000~\u0000\"sq\u0000~\u0000#q\u0000~\u0000&q\u0000~"
+"\u0000\'sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0019q\u0000~\u0000\u0012pq\u0000~\u0000-q\u0000~\u0000=q\u0000~\u0000\"sq\u0000~\u0000#t\u0000\remployee-ruleq"
+"\u0000~\u0000Bsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpT"
+"ablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-"
+"com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005c"
+"ountB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Express"
+"ionPool;xp\u0000\u0000\u0000(\u0001pq\u0000~\u0000\fq\u0000~\u0000Cq\u0000~\u0000Oq\u0000~\u0000[q\u0000~\u0000\u0018q\u0000~\u0000Hq\u0000~\u0000Tq\u0000~\u0000`q\u0000~\u0000"
+"lq\u0000~\u0000gq\u0000~\u0000xq\u0000~\u0000sq\u0000~\u0000\u0083q\u0000~\u0000\nq\u0000~\u0000\u0015q\u0000~\u0000Gq\u0000~\u0000Sq\u0000~\u0000_q\u0000~\u0000kq\u0000~\u0000wq\u0000~\u0000"
+"\u0082q\u0000~\u0000\u0013q\u0000~\u0000Eq\u0000~\u0000Qq\u0000~\u0000]q\u0000~\u0000iq\u0000~\u0000uq\u0000~\u0000\u0080q\u0000~\u0000\u0005q\u0000~\u0000\bq\u0000~\u0000(q\u0000~\u0000Kq\u0000~\u0000"
+"Wq\u0000~\u0000cq\u0000~\u0000oq\u0000~\u0000{q\u0000~\u0000\u0007q\u0000~\u0000\u0086q\u0000~\u0000\tq\u0000~\u0000\u000bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.rssl.phizic.auth.modes.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.rssl.phizic.auth.modes.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "---------------------");
        }

        protected Unmarshaller(com.rssl.phizic.auth.modes.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.rssl.phizic.auth.modes.generated.impl.AccessRulesDescriptorImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  10 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _MobileLimitedRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 11, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  16 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _SimpleRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 17, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  6 :
                        if (("smsBanking-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  12 :
                        if (("guest-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  4 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _AnonymousRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 5, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("simple-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 16;
                            return ;
                        }
                        if (("secure-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        if (("anonymous-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        if (("smsBanking-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 7;
                            return ;
                        }
                        if (("mobileLimited-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        if (("guest-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 13;
                            return ;
                        }
                        if (("employee-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 19;
                            return ;
                        }
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("mobileLimited-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 10;
                            return ;
                        }
                        state = 12;
                        continue outer;
                    case  19 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _EmployeeRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 20, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  13 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _GuestRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 14, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  1 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _SecureRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 2, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                    case  18 :
                        if (("secure-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                    case  3 :
                        if (("anonymous-rule" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  7 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            _SmsBankingRule = ((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.auth.modes.generated.impl.AccessRuleDescriptorImpl.class), 8, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("secure-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                    case  20 :
                        if (("employee-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("anonymous-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  14 :
                        if (("guest-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("mobileLimited-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  17 :
                        if (("simple-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                    case  15 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("smsBanking-rule" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  18 :
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  0 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  6 :
                        state = 9;
                        continue outer;
                    case  12 :
                        state = 15;
                        continue outer;
                    case  0 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  9 :
                        state = 12;
                        continue outer;
                    case  15 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  18 :
                        state = 3;
                        continue outer;
                    case  3 :
                        state = 6;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  6 :
                            state = 9;
                            continue outer;
                        case  12 :
                            state = 15;
                            continue outer;
                        case  0 :
                            revertToParentFromText(value);
                            return ;
                        case  9 :
                            state = 12;
                            continue outer;
                        case  15 :
                            revertToParentFromText(value);
                            return ;
                        case  18 :
                            state = 3;
                            continue outer;
                        case  3 :
                            state = 6;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
