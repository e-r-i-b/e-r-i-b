<?xml version="1.0"?>
<!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.rssl.phizic.auth.passwordcards.PasswordCardImpl" table="PASSWORDCARDS" batch-size="100">
        <id name="id" type="long">
         <generator class="native">
          <param name="sequence">S_PASSWORDCARDS</param>
         </generator>
        </id>

        <property name="number" type="string" column="CARD_NUMBER" not-null="true"/>
        <property name="state" type="string" column="STATE" not-null="true"/>
        <property name="issueDate" type="calendar" column="ISSUE_DATE" not-null="true"/>
	    <property name="activationDate" type="calendar" column="ACTIVATION_DATE" not-null="true"/>
	    <property name="passwordsCount" type="long" column="PASSWORDS_COUNT" not-null="true"/>
	    <property name="validPasswordsCount" type="long" column="VALID_PASSWORDS_COUNT" not-null="true"/>
	    <property name="wrongAttempts" type="long" column="WRONG_ATTEMPTS" not-null="true"/>
	    <property name="blockType" type="string" column="BLOCK_TYPE" not-null="false"/>
	    <property name="blockReason" type="string" column="BLOCK_REASON" not-null="false"/>

	    <many-to-one name="login" class="com.rssl.phizic.auth.LoginImpl" column="LOGIN_ID" fetch="join" lazy="false" not-null="false"/>

    </class>

    <class name="com.rssl.phizic.auth.passwordcards.CardPassword" table="CARDPASSWORDS" batch-size="500">
        <id name="id" type="long">
            <generator class="native">
                <param name="sequence">S_CARDPASSWORDS</param>
            </generator>
        </id>

        <many-to-one name="card" class="com.rssl.phizic.auth.passwordcards.PasswordCardImpl" column="CARD_ID"
                     not-null="true"/>

        <property name="number" type="integer" column="PASSWORD_NUMBER" not-null="true"/>
        <property name="validInternal" type="boolean" column="ACTIVE" not-null="true"/>
        <property name="stringValue" type="string" column="VALUE" not-null="true"/>

    </class>

	<query name="com.rssl.phizic.auth.passwordcards.getByNubmer">
		select card
		from com.rssl.phizic.auth.passwordcards.PasswordCard card
		where card.number = :number
    </query>

	<query name="com.rssl.phizic.auth.passwordcards.getById">
		select card
		from com.rssl.phizic.auth.passwordcards.PasswordCard card
		where card.id = :id
	</query>

	<query name="com.rssl.phizic.auth.passwordcards.getAllPaswords">
        select password
        from com.rssl.phizic.auth.passwordcards.CardPassword password
        inner join fetch password.card
        where password.card = :card
        order by password.number
    </query>

    <query name="com.rssl.phizic.auth.passwordcards.getUnusedPassword">
        select password
        from com.rssl.phizic.auth.passwordcards.CardPassword password
        inner join fetch password.card
        where password.card = :card and password.validInternal = '1'
        order by password.number
    </query>

    <query name="com.rssl.phizic.auth.passwordcards.getPassword">
        select password
        from com.rssl.phizic.auth.passwordcards.CardPassword password
	    inner join fetch password.card
        where password.card = :card and
              password.number = :number
    </query>

    <query name="com.rssl.phizic.auth.passwordcards.getCurrentCard">
        select card
        from com.rssl.phizic.auth.passwordcards.PasswordCard card
        where card.state in (:state) and card.login = :login
    </query>

	<query name="com.rssl.phizic.auth.passwordcards.getFirstReservedCard">
		select card
		from com.rssl.phizic.auth.passwordcards.PasswordCardImpl card
		where card.state = 'R' and card.login = :login
		order by card.number
	</query>

	<query name="com.rssl.phizic.auth.passwordcards.getAllCards">
        select card
        from com.rssl.phizic.auth.passwordcards.PasswordCardImpl card
        where card.login = :login
    </query>

</hibernate-mapping>