// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizicgate.wsgate.dictionaries.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class KBKRecord_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final QName ns1_code_QNAME = new QName("", "code");
    private static final QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final QName ns1_id_QNAME = new QName("", "id");
    private static final QName ns4_long_TYPE_QNAME = SOAPConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns4_myns4__long__java_lang_Long_Long_Serializer;
    private static final QName ns1_note_QNAME = new QName("", "note");
    private static final QName ns1_superior_QNAME = new QName("", "superior");
    private static final QName ns1_taxonomy_QNAME = new QName("", "taxonomy");
    private static final int myCODE_INDEX = 0;
    private static final int myID_INDEX = 1;
    private static final int myNOTE_INDEX = 2;
    private static final int mySUPERIOR_INDEX = 3;
    private static final int myTAXONOMY_INDEX = 4;

    public KBKRecord_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }

    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, String.class, ns3_string_TYPE_QNAME);
        ns4_myns4__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, Long.class, ns4_long_TYPE_QNAME);
    }

    public Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws Exception {
        com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord instance = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord();
        com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder builder = null;
        Object member;
        boolean isComplete = true;
        QName elementName;

        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_code_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_code_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCode((String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_id_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_id_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setId((Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_note_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_note_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myNOTE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setNote((String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_superior_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_superior_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySUPERIOR_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSuperior((Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxonomy_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_taxonomy_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXONOMY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxonomy((Long)member);
                }
                reader.nextElementContent();
            }
        }

        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (Object)instance : (Object)state);
    }

    public void doSerializeAttributes(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord instance = (com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord)obj;

    }

    public void doSerializeInstance(Object obj, XMLWriter writer, SOAPSerializationContext context) throws Exception {
        com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord instance = (com.rssl.phizicgate.wsgate.dictionaries.generated.KBKRecord)obj;

        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCode(), ns1_code_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getId(), ns1_id_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getNote(), ns1_note_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getSuperior(), ns1_superior_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getTaxonomy(), ns1_taxonomy_QNAME, null, writer, context);
    }
}