// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizicgate.wsgate.services.utils.generated;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;
import javax.xml.rpc.soap.SOAPFaultException;

public class GateInfoService_PortType_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType {
    
    
    
    /*
     *  public constructor
     */
    public GateInfoService_PortType_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://localhost:8080/services/GateInfoServiceImpl");
    }
    
    
    /*
     *  implementation of isPaymentsRecallSupported
     */
    public java.lang.Boolean isPaymentsRecallSupported(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isPaymentsRecallSupported_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_RequestStruct _myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_RequestStruct();
            
            _myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isPaymentsRecallSupported_isPaymentsRecallSupported_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct _myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isDelayedPaymentNeedSend
     */
    public java.lang.Boolean isDelayedPaymentNeedSend(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isDelayedPaymentNeedSend_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct _myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct();
            
            _myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isDelayedPaymentNeedSend_isDelayedPaymentNeedSend_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct _myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isPersonalRecipientAvailable
     */
    public java.lang.Boolean isPersonalRecipientAvailable(com.rssl.phizicgate.wsgate.services.utils.generated.Billing billing_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isPersonalRecipientAvailable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct _myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct();
            
            _myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct.setBilling_1(billing_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isPersonalRecipientAvailable_isPersonalRecipientAvailable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct _myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isClientImportEnable
     */
    public java.lang.Boolean isClientImportEnable(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isClientImportEnable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_RequestStruct _myGateInfoService_PortType_isClientImportEnable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_RequestStruct();
            
            _myGateInfoService_PortType_isClientImportEnable_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isClientImportEnable_isClientImportEnable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isClientImportEnable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isClientImportEnable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_ResponseStruct _myGateInfoService_PortType_isClientImportEnable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isClientImportEnable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isClientImportEnable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isClientImportEnable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isCurrencyRateAvailable
     */
    public java.lang.Boolean isCurrencyRateAvailable(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isCurrencyRateAvailable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_RequestStruct _myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_RequestStruct();
            
            _myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isCurrencyRateAvailable_isCurrencyRateAvailable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct _myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isNeedChargeOff
     */
    public java.lang.Boolean isNeedChargeOff(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isNeedChargeOff_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_RequestStruct _myGateInfoService_PortType_isNeedChargeOff_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_RequestStruct();
            
            _myGateInfoService_PortType_isNeedChargeOff_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isNeedChargeOff_isNeedChargeOff_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isNeedChargeOff_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isNeedChargeOff_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_ResponseStruct _myGateInfoService_PortType_isNeedChargeOff_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isNeedChargeOff_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isNeedChargeOff_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isNeedChargeOff_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of needTwoPhaseTransaction2
     */
    public java.lang.Boolean needTwoPhaseTransaction2(java.lang.String string_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(needTwoPhaseTransaction2_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct _myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct();
            
            _myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct.setString_1(string_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_needTwoPhaseTransaction2_needTwoPhaseTransaction2_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct _myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of needTwoPhaseTransaction
     */
    public java.lang.Boolean needTwoPhaseTransaction(com.rssl.phizicgate.wsgate.services.utils.generated.Billing billing_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(needTwoPhaseTransaction_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_RequestStruct _myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_RequestStruct();
            
            _myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct.setBilling_1(billing_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_needTwoPhaseTransaction_needTwoPhaseTransaction_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct _myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getConfiguration
     */
    public com.rssl.phizicgate.wsgate.services.utils.generated.GateConfiguration getConfiguration(com.rssl.phizicgate.wsgate.services.utils.generated.Billing billing_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getConfiguration_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_RequestStruct _myGateInfoService_PortType_getConfiguration_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_RequestStruct();
            
            _myGateInfoService_PortType_getConfiguration_RequestStruct.setBilling_1(billing_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getConfiguration_getConfiguration_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_getConfiguration_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_getConfiguration_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_ResponseStruct _myGateInfoService_PortType_getConfiguration_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_getConfiguration_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_getConfiguration_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_getConfiguration_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isNeedAgrementCancellation
     */
    public java.lang.Boolean isNeedAgrementCancellation(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isNeedAgrementCancellation_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_RequestStruct _myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_RequestStruct();
            
            _myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isNeedAgrementCancellation_isNeedAgrementCancellation_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct _myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isOfficesHierarchySupported
     */
    public java.lang.Boolean isOfficesHierarchySupported(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isOfficesHierarchySupported_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_RequestStruct _myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_RequestStruct();
            
            _myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isOfficesHierarchySupported_isOfficesHierarchySupported_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct _myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getUID
     */
    public java.lang.String getUID(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getUID_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_RequestStruct _myGateInfoService_PortType_getUID_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_RequestStruct();
            
            _myGateInfoService_PortType_getUID_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getUID_getUID_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_getUID_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_getUID_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_ResponseStruct _myGateInfoService_PortType_getUID_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_getUID_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_getUID_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_getUID_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isRecipientExtedendAttributesAvailable
     */
    public java.lang.Boolean isRecipientExtedendAttributesAvailable(com.rssl.phizicgate.wsgate.services.utils.generated.Billing billing_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isRecipientExtedendAttributesAvailable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct();
            
            _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct.setBilling_1(billing_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isRecipientExtedendAttributesAvailable_isRecipientExtedendAttributesAvailable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getCardInputMode
     */
    public java.lang.String getCardInputMode(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getCardInputMode_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_RequestStruct _myGateInfoService_PortType_getCardInputMode_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_RequestStruct();
            
            _myGateInfoService_PortType_getCardInputMode_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getCardInputMode_getCardInputMode_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_getCardInputMode_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_getCardInputMode_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_ResponseStruct _myGateInfoService_PortType_getCardInputMode_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_getCardInputMode_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_getCardInputMode_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_getCardInputMode_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isCalendarAvailable
     */
    public java.lang.Boolean isCalendarAvailable(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isCalendarAvailable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_RequestStruct _myGateInfoService_PortType_isCalendarAvailable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_RequestStruct();
            
            _myGateInfoService_PortType_isCalendarAvailable_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isCalendarAvailable_isCalendarAvailable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isCalendarAvailable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isCalendarAvailable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_ResponseStruct _myGateInfoService_PortType_isCalendarAvailable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isCalendarAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isCalendarAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isCalendarAvailable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isRegistrationEnable
     */
    public java.lang.Boolean isRegistrationEnable(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isRegistrationEnable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_RequestStruct _myGateInfoService_PortType_isRegistrationEnable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_RequestStruct();
            
            _myGateInfoService_PortType_isRegistrationEnable_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isRegistrationEnable_isRegistrationEnable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isRegistrationEnable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isRegistrationEnable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_ResponseStruct _myGateInfoService_PortType_isRegistrationEnable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isRegistrationEnable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isRegistrationEnable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isRegistrationEnable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isPaymentCommissionAvailable
     */
    public java.lang.Boolean isPaymentCommissionAvailable(com.rssl.phizicgate.wsgate.services.utils.generated.Billing billing_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isPaymentCommissionAvailable_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct _myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct();
            
            _myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct.setBilling_1(billing_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isPaymentCommissionAvailable_isPaymentCommissionAvailable_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct _myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of getAccountInputMode
     */
    public java.lang.String getAccountInputMode(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(getAccountInputMode_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_RequestStruct _myGateInfoService_PortType_getAccountInputMode_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_RequestStruct();
            
            _myGateInfoService_PortType_getAccountInputMode_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_getAccountInputMode_getAccountInputMode_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_getAccountInputMode_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_getAccountInputMode_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_ResponseStruct _myGateInfoService_PortType_getAccountInputMode_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_getAccountInputMode_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_getAccountInputMode_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_getAccountInputMode_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of isPaymentCommissionAvailable2
     */
    public java.lang.Boolean isPaymentCommissionAvailable2(com.rssl.phizicgate.wsgate.services.utils.generated.Office office_1)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(isPaymentCommissionAvailable2_OPCODE);
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct _myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct =
                new com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct();
            
            _myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct.setOffice_1(office_1);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_isPaymentCommissionAvailable2_isPaymentCommissionAvailable2_QNAME);
            _bodyBlock.setValue(_myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct);
            _bodyBlock.setSerializer(ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct_SOAPSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct _myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct = null;
            Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct)((SOAPDeserializationState)_responseObj).getInstance();
            } else {
                _myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct =
                    (com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct)_responseObj;
            }
            
            return _myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct.getResult();
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case isPaymentsRecallSupported_OPCODE:
                _deserialize_isPaymentsRecallSupported(bodyReader, deserializationContext, state);
                break;
            case isDelayedPaymentNeedSend_OPCODE:
                _deserialize_isDelayedPaymentNeedSend(bodyReader, deserializationContext, state);
                break;
            case isPersonalRecipientAvailable_OPCODE:
                _deserialize_isPersonalRecipientAvailable(bodyReader, deserializationContext, state);
                break;
            case isClientImportEnable_OPCODE:
                _deserialize_isClientImportEnable(bodyReader, deserializationContext, state);
                break;
            case isCurrencyRateAvailable_OPCODE:
                _deserialize_isCurrencyRateAvailable(bodyReader, deserializationContext, state);
                break;
            case isNeedChargeOff_OPCODE:
                _deserialize_isNeedChargeOff(bodyReader, deserializationContext, state);
                break;
            case needTwoPhaseTransaction2_OPCODE:
                _deserialize_needTwoPhaseTransaction2(bodyReader, deserializationContext, state);
                break;
            case needTwoPhaseTransaction_OPCODE:
                _deserialize_needTwoPhaseTransaction(bodyReader, deserializationContext, state);
                break;
            case getConfiguration_OPCODE:
                _deserialize_getConfiguration(bodyReader, deserializationContext, state);
                break;
            case isNeedAgrementCancellation_OPCODE:
                _deserialize_isNeedAgrementCancellation(bodyReader, deserializationContext, state);
                break;
            case isOfficesHierarchySupported_OPCODE:
                _deserialize_isOfficesHierarchySupported(bodyReader, deserializationContext, state);
                break;
            case getUID_OPCODE:
                _deserialize_getUID(bodyReader, deserializationContext, state);
                break;
            case isRecipientExtedendAttributesAvailable_OPCODE:
                _deserialize_isRecipientExtedendAttributesAvailable(bodyReader, deserializationContext, state);
                break;
            case getCardInputMode_OPCODE:
                _deserialize_getCardInputMode(bodyReader, deserializationContext, state);
                break;
            case isCalendarAvailable_OPCODE:
                _deserialize_isCalendarAvailable(bodyReader, deserializationContext, state);
                break;
            case isRegistrationEnable_OPCODE:
                _deserialize_isRegistrationEnable(bodyReader, deserializationContext, state);
                break;
            case isPaymentCommissionAvailable_OPCODE:
                _deserialize_isPaymentCommissionAvailable(bodyReader, deserializationContext, state);
                break;
            case getAccountInputMode_OPCODE:
                _deserialize_getAccountInputMode(bodyReader, deserializationContext, state);
                break;
            case isPaymentCommissionAvailable2_OPCODE:
                _deserialize_isPaymentCommissionAvailable2(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the isPaymentsRecallSupported operation.
     */
    private void _deserialize_isPaymentsRecallSupported(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStructObj =
            ns1_myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct_SOAPSerializer.deserialize(ns1_isPaymentsRecallSupported_isPaymentsRecallSupportedResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isPaymentsRecallSupported_isPaymentsRecallSupportedResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isDelayedPaymentNeedSend operation.
     */
    private void _deserialize_isDelayedPaymentNeedSend(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStructObj =
            ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct_SOAPSerializer.deserialize(ns1_isDelayedPaymentNeedSend_isDelayedPaymentNeedSendResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isDelayedPaymentNeedSend_isDelayedPaymentNeedSendResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isPersonalRecipientAvailable operation.
     */
    private void _deserialize_isPersonalRecipientAvailable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct_SOAPSerializer.deserialize(ns1_isPersonalRecipientAvailable_isPersonalRecipientAvailableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isPersonalRecipientAvailable_isPersonalRecipientAvailableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isClientImportEnable operation.
     */
    private void _deserialize_isClientImportEnable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isClientImportEnable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isClientImportEnable_ResponseStruct_SOAPSerializer.deserialize(ns1_isClientImportEnable_isClientImportEnableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isClientImportEnable_isClientImportEnableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isClientImportEnable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isCurrencyRateAvailable operation.
     */
    private void _deserialize_isCurrencyRateAvailable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct_SOAPSerializer.deserialize(ns1_isCurrencyRateAvailable_isCurrencyRateAvailableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isCurrencyRateAvailable_isCurrencyRateAvailableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isNeedChargeOff operation.
     */
    private void _deserialize_isNeedChargeOff(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isNeedChargeOff_ResponseStructObj =
            ns1_myGateInfoService_PortType_isNeedChargeOff_ResponseStruct_SOAPSerializer.deserialize(ns1_isNeedChargeOff_isNeedChargeOffResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isNeedChargeOff_isNeedChargeOffResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isNeedChargeOff_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the needTwoPhaseTransaction2 operation.
     */
    private void _deserialize_needTwoPhaseTransaction2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStructObj =
            ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct_SOAPSerializer.deserialize(ns1_needTwoPhaseTransaction2_needTwoPhaseTransaction2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_needTwoPhaseTransaction2_needTwoPhaseTransaction2Response_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the needTwoPhaseTransaction operation.
     */
    private void _deserialize_needTwoPhaseTransaction(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStructObj =
            ns1_myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct_SOAPSerializer.deserialize(ns1_needTwoPhaseTransaction_needTwoPhaseTransactionResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_needTwoPhaseTransaction_needTwoPhaseTransactionResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getConfiguration operation.
     */
    private void _deserialize_getConfiguration(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_getConfiguration_ResponseStructObj =
            ns1_myGateInfoService_PortType_getConfiguration_ResponseStruct_SOAPSerializer.deserialize(ns1_getConfiguration_getConfigurationResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getConfiguration_getConfigurationResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_getConfiguration_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isNeedAgrementCancellation operation.
     */
    private void _deserialize_isNeedAgrementCancellation(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStructObj =
            ns1_myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct_SOAPSerializer.deserialize(ns1_isNeedAgrementCancellation_isNeedAgrementCancellationResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isNeedAgrementCancellation_isNeedAgrementCancellationResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isOfficesHierarchySupported operation.
     */
    private void _deserialize_isOfficesHierarchySupported(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStructObj =
            ns1_myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct_SOAPSerializer.deserialize(ns1_isOfficesHierarchySupported_isOfficesHierarchySupportedResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isOfficesHierarchySupported_isOfficesHierarchySupportedResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getUID operation.
     */
    private void _deserialize_getUID(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_getUID_ResponseStructObj =
            ns1_myGateInfoService_PortType_getUID_ResponseStruct_SOAPSerializer.deserialize(ns1_getUID_getUIDResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getUID_getUIDResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_getUID_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isRecipientExtedendAttributesAvailable operation.
     */
    private void _deserialize_isRecipientExtedendAttributesAvailable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct_SOAPSerializer.deserialize(ns1_isRecipientExtedendAttributesAvailable_isRecipientExtedendAttributesAvailableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isRecipientExtedendAttributesAvailable_isRecipientExtedendAttributesAvailableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardInputMode operation.
     */
    private void _deserialize_getCardInputMode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_getCardInputMode_ResponseStructObj =
            ns1_myGateInfoService_PortType_getCardInputMode_ResponseStruct_SOAPSerializer.deserialize(ns1_getCardInputMode_getCardInputModeResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardInputMode_getCardInputModeResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_getCardInputMode_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isCalendarAvailable operation.
     */
    private void _deserialize_isCalendarAvailable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isCalendarAvailable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isCalendarAvailable_ResponseStruct_SOAPSerializer.deserialize(ns1_isCalendarAvailable_isCalendarAvailableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isCalendarAvailable_isCalendarAvailableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isCalendarAvailable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isRegistrationEnable operation.
     */
    private void _deserialize_isRegistrationEnable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isRegistrationEnable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isRegistrationEnable_ResponseStruct_SOAPSerializer.deserialize(ns1_isRegistrationEnable_isRegistrationEnableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isRegistrationEnable_isRegistrationEnableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isRegistrationEnable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isPaymentCommissionAvailable operation.
     */
    private void _deserialize_isPaymentCommissionAvailable(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStructObj =
            ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct_SOAPSerializer.deserialize(ns1_isPaymentCommissionAvailable_isPaymentCommissionAvailableResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isPaymentCommissionAvailable_isPaymentCommissionAvailableResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountInputMode operation.
     */
    private void _deserialize_getAccountInputMode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_getAccountInputMode_ResponseStructObj =
            ns1_myGateInfoService_PortType_getAccountInputMode_ResponseStruct_SOAPSerializer.deserialize(ns1_getAccountInputMode_getAccountInputModeResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountInputMode_getAccountInputModeResponse_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_getAccountInputMode_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the isPaymentCommissionAvailable2 operation.
     */
    private void _deserialize_isPaymentCommissionAvailable2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStructObj =
            ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct_SOAPSerializer.deserialize(ns1_isPaymentCommissionAvailable2_isPaymentCommissionAvailable2Response_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_isPaymentCommissionAvailable2_isPaymentCommissionAvailable2Response_QNAME);
        bodyBlock.setValue(myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStructObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    public java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myGateInfoService_PortType_isClientImportEnable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_RequestStruct.class, ns1_isClientImportEnable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isNeedChargeOff_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_RequestStruct.class, ns1_isNeedChargeOff_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getConfiguration_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_RequestStruct.class, ns1_getConfiguration_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getCardInputMode_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_RequestStruct.class, ns1_getCardInputMode_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct.class, ns1_isPaymentCommissionAvailable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isClientImportEnable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isClientImportEnable_ResponseStruct.class, ns1_isClientImportEnableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct.class, ns1_isCurrencyRateAvailableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct.class, ns1_needTwoPhaseTransaction2Response_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct.class, ns1_isDelayedPaymentNeedSend_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_RequestStruct.class, ns1_isNeedAgrementCancellation_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct.class, ns1_isOfficesHierarchySupportedResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_RequestStruct.class, ns1_needTwoPhaseTransaction_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct.class, ns1_isPaymentCommissionAvailableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct.class, ns1_needTwoPhaseTransaction2_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_RequestStruct.class, ns1_isPaymentsRecallSupported_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isCalendarAvailable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_ResponseStruct.class, ns1_isCalendarAvailableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct.class, ns1_isNeedAgrementCancellationResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getConfiguration_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getConfiguration_ResponseStruct.class, ns1_getConfigurationResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct.class, ns1_needTwoPhaseTransactionResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isOfficesHierarchySupported_RequestStruct.class, ns1_isOfficesHierarchySupported_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isCalendarAvailable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCalendarAvailable_RequestStruct.class, ns1_isCalendarAvailable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct.class, ns1_isRecipientExtedendAttributesAvailableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct.class, ns1_isDelayedPaymentNeedSendResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct.class, ns1_isPersonalRecipientAvailable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct.class, ns1_isPaymentCommissionAvailable2Response_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isRegistrationEnable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_ResponseStruct.class, ns1_isRegistrationEnableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct.class, ns1_isRecipientExtedendAttributesAvailable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isRegistrationEnable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isRegistrationEnable_RequestStruct.class, ns1_isRegistrationEnable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct.class, ns1_isPaymentsRecallSupportedResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getAccountInputMode_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_ResponseStruct.class, ns1_getAccountInputModeResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct.class, ns1_isPaymentCommissionAvailable2_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isNeedChargeOff_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isNeedChargeOff_ResponseStruct.class, ns1_isNeedChargeOffResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct.class, ns1_isPersonalRecipientAvailableResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getUID_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_RequestStruct.class, ns1_getUID_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getUID_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getUID_ResponseStruct.class, ns1_getUIDResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_isCurrencyRateAvailable_RequestStruct.class, ns1_isCurrencyRateAvailable_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getCardInputMode_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getCardInputMode_ResponseStruct.class, ns1_getCardInputModeResponse_TYPE_QNAME);
        ns1_myGateInfoService_PortType_getAccountInputMode_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizicgate.wsgate.services.utils.generated.GateInfoService_PortType_getAccountInputMode_RequestStruct.class, ns1_getAccountInputMode_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "GateInfoService_PortTypePort");
    private static final int isPaymentsRecallSupported_OPCODE = 0;
    private static final int isDelayedPaymentNeedSend_OPCODE = 1;
    private static final int isPersonalRecipientAvailable_OPCODE = 2;
    private static final int isClientImportEnable_OPCODE = 3;
    private static final int isCurrencyRateAvailable_OPCODE = 4;
    private static final int isNeedChargeOff_OPCODE = 5;
    private static final int needTwoPhaseTransaction2_OPCODE = 6;
    private static final int needTwoPhaseTransaction_OPCODE = 7;
    private static final int getConfiguration_OPCODE = 8;
    private static final int isNeedAgrementCancellation_OPCODE = 9;
    private static final int isOfficesHierarchySupported_OPCODE = 10;
    private static final int getUID_OPCODE = 11;
    private static final int isRecipientExtedendAttributesAvailable_OPCODE = 12;
    private static final int getCardInputMode_OPCODE = 13;
    private static final int isCalendarAvailable_OPCODE = 14;
    private static final int isRegistrationEnable_OPCODE = 15;
    private static final int isPaymentCommissionAvailable_OPCODE = 16;
    private static final int getAccountInputMode_OPCODE = 17;
    private static final int isPaymentCommissionAvailable2_OPCODE = 18;
    private static final javax.xml.namespace.QName ns1_isPaymentsRecallSupported_isPaymentsRecallSupported_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentsRecallSupported");
    private static final javax.xml.namespace.QName ns1_isPaymentsRecallSupported_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentsRecallSupported");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentsRecallSupported_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPaymentsRecallSupported_isPaymentsRecallSupportedResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentsRecallSupportedResponse");
    private static final javax.xml.namespace.QName ns1_isPaymentsRecallSupportedResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentsRecallSupportedResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentsRecallSupported_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isDelayedPaymentNeedSend_isDelayedPaymentNeedSend_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isDelayedPaymentNeedSend");
    private static final javax.xml.namespace.QName ns1_isDelayedPaymentNeedSend_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isDelayedPaymentNeedSend");
    private CombinedSerializer ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isDelayedPaymentNeedSend_isDelayedPaymentNeedSendResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isDelayedPaymentNeedSendResponse");
    private static final javax.xml.namespace.QName ns1_isDelayedPaymentNeedSendResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isDelayedPaymentNeedSendResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isDelayedPaymentNeedSend_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPersonalRecipientAvailable_isPersonalRecipientAvailable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPersonalRecipientAvailable");
    private static final javax.xml.namespace.QName ns1_isPersonalRecipientAvailable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPersonalRecipientAvailable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPersonalRecipientAvailable_isPersonalRecipientAvailableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPersonalRecipientAvailableResponse");
    private static final javax.xml.namespace.QName ns1_isPersonalRecipientAvailableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPersonalRecipientAvailableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPersonalRecipientAvailable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isClientImportEnable_isClientImportEnable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isClientImportEnable");
    private static final javax.xml.namespace.QName ns1_isClientImportEnable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isClientImportEnable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isClientImportEnable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isClientImportEnable_isClientImportEnableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isClientImportEnableResponse");
    private static final javax.xml.namespace.QName ns1_isClientImportEnableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isClientImportEnableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isClientImportEnable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isCurrencyRateAvailable_isCurrencyRateAvailable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCurrencyRateAvailable");
    private static final javax.xml.namespace.QName ns1_isCurrencyRateAvailable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCurrencyRateAvailable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isCurrencyRateAvailable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isCurrencyRateAvailable_isCurrencyRateAvailableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCurrencyRateAvailableResponse");
    private static final javax.xml.namespace.QName ns1_isCurrencyRateAvailableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCurrencyRateAvailableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isCurrencyRateAvailable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isNeedChargeOff_isNeedChargeOff_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedChargeOff");
    private static final javax.xml.namespace.QName ns1_isNeedChargeOff_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedChargeOff");
    private CombinedSerializer ns1_myGateInfoService_PortType_isNeedChargeOff_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isNeedChargeOff_isNeedChargeOffResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedChargeOffResponse");
    private static final javax.xml.namespace.QName ns1_isNeedChargeOffResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedChargeOffResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isNeedChargeOff_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction2_needTwoPhaseTransaction2_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction2");
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction2_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction2");
    private CombinedSerializer ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction2_needTwoPhaseTransaction2Response_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction2Response");
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction2Response_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction2Response");
    private CombinedSerializer ns1_myGateInfoService_PortType_needTwoPhaseTransaction2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction_needTwoPhaseTransaction_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction");
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransaction");
    private CombinedSerializer ns1_myGateInfoService_PortType_needTwoPhaseTransaction_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransaction_needTwoPhaseTransactionResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransactionResponse");
    private static final javax.xml.namespace.QName ns1_needTwoPhaseTransactionResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "needTwoPhaseTransactionResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_needTwoPhaseTransaction_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getConfiguration_getConfiguration_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getConfiguration");
    private static final javax.xml.namespace.QName ns1_getConfiguration_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getConfiguration");
    private CombinedSerializer ns1_myGateInfoService_PortType_getConfiguration_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getConfiguration_getConfigurationResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getConfigurationResponse");
    private static final javax.xml.namespace.QName ns1_getConfigurationResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getConfigurationResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_getConfiguration_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isNeedAgrementCancellation_isNeedAgrementCancellation_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedAgrementCancellation");
    private static final javax.xml.namespace.QName ns1_isNeedAgrementCancellation_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedAgrementCancellation");
    private CombinedSerializer ns1_myGateInfoService_PortType_isNeedAgrementCancellation_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isNeedAgrementCancellation_isNeedAgrementCancellationResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedAgrementCancellationResponse");
    private static final javax.xml.namespace.QName ns1_isNeedAgrementCancellationResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isNeedAgrementCancellationResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isNeedAgrementCancellation_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isOfficesHierarchySupported_isOfficesHierarchySupported_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isOfficesHierarchySupported");
    private static final javax.xml.namespace.QName ns1_isOfficesHierarchySupported_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isOfficesHierarchySupported");
    private CombinedSerializer ns1_myGateInfoService_PortType_isOfficesHierarchySupported_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isOfficesHierarchySupported_isOfficesHierarchySupportedResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isOfficesHierarchySupportedResponse");
    private static final javax.xml.namespace.QName ns1_isOfficesHierarchySupportedResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isOfficesHierarchySupportedResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isOfficesHierarchySupported_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getUID_getUID_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getUID");
    private static final javax.xml.namespace.QName ns1_getUID_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getUID");
    private CombinedSerializer ns1_myGateInfoService_PortType_getUID_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getUID_getUIDResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getUIDResponse");
    private static final javax.xml.namespace.QName ns1_getUIDResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getUIDResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_getUID_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isRecipientExtedendAttributesAvailable_isRecipientExtedendAttributesAvailable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRecipientExtedendAttributesAvailable");
    private static final javax.xml.namespace.QName ns1_isRecipientExtedendAttributesAvailable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRecipientExtedendAttributesAvailable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isRecipientExtedendAttributesAvailable_isRecipientExtedendAttributesAvailableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRecipientExtedendAttributesAvailableResponse");
    private static final javax.xml.namespace.QName ns1_isRecipientExtedendAttributesAvailableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRecipientExtedendAttributesAvailableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isRecipientExtedendAttributesAvailable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardInputMode_getCardInputMode_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getCardInputMode");
    private static final javax.xml.namespace.QName ns1_getCardInputMode_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getCardInputMode");
    private CombinedSerializer ns1_myGateInfoService_PortType_getCardInputMode_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardInputMode_getCardInputModeResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getCardInputModeResponse");
    private static final javax.xml.namespace.QName ns1_getCardInputModeResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getCardInputModeResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_getCardInputMode_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isCalendarAvailable_isCalendarAvailable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCalendarAvailable");
    private static final javax.xml.namespace.QName ns1_isCalendarAvailable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCalendarAvailable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isCalendarAvailable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isCalendarAvailable_isCalendarAvailableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCalendarAvailableResponse");
    private static final javax.xml.namespace.QName ns1_isCalendarAvailableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isCalendarAvailableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isCalendarAvailable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isRegistrationEnable_isRegistrationEnable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRegistrationEnable");
    private static final javax.xml.namespace.QName ns1_isRegistrationEnable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRegistrationEnable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isRegistrationEnable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isRegistrationEnable_isRegistrationEnableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRegistrationEnableResponse");
    private static final javax.xml.namespace.QName ns1_isRegistrationEnableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isRegistrationEnableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isRegistrationEnable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable_isPaymentCommissionAvailable_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable");
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable_isPaymentCommissionAvailableResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailableResponse");
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailableResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailableResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentCommissionAvailable_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountInputMode_getAccountInputMode_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getAccountInputMode");
    private static final javax.xml.namespace.QName ns1_getAccountInputMode_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getAccountInputMode");
    private CombinedSerializer ns1_myGateInfoService_PortType_getAccountInputMode_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountInputMode_getAccountInputModeResponse_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getAccountInputModeResponse");
    private static final javax.xml.namespace.QName ns1_getAccountInputModeResponse_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "getAccountInputModeResponse");
    private CombinedSerializer ns1_myGateInfoService_PortType_getAccountInputMode_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable2_isPaymentCommissionAvailable2_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable2");
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable2_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable2");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable2_isPaymentCommissionAvailable2Response_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable2Response");
    private static final javax.xml.namespace.QName ns1_isPaymentCommissionAvailable2Response_TYPE_QNAME = new QName("http://generated.util.services.gate.web.phizic.rssl.com", "isPaymentCommissionAvailable2Response");
    private CombinedSerializer ns1_myGateInfoService_PortType_isPaymentCommissionAvailable2_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.util.services.gate.web.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
