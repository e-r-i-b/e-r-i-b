// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizicgate.wsgate.services.bankroll.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.util.exception.LocalizableExceptionAdapter;

public class OverdraftInfo_SOAPBuilder implements SOAPInstanceBuilder {
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.OverdraftInfo _instance;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money availableLimit;
    private long cardId;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money currentOverdraftSum;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money limit;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money minimalPayment;
    private java.util.Calendar minimalPaymentDate;
    private java.util.Calendar openDate;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money ownSum;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money rate;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money technicalOverdraftSum;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money technicalPenalty;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money totalDebtSum;
    private java.util.Calendar unsetltedDebtCreateDate;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money unsettledDebtSum;
    private com.rssl.phizicgate.wsgate.services.bankroll.generated.Money unsettledPenalty;
    private static final int myAVAILABLELIMIT_INDEX = 0;
    private static final int myCARDID_INDEX = 1;
    private static final int myCURRENTOVERDRAFTSUM_INDEX = 2;
    private static final int myLIMIT_INDEX = 3;
    private static final int myMINIMALPAYMENT_INDEX = 4;
    private static final int myMINIMALPAYMENTDATE_INDEX = 5;
    private static final int myOPENDATE_INDEX = 6;
    private static final int myOWNSUM_INDEX = 7;
    private static final int myRATE_INDEX = 8;
    private static final int myTECHNICALOVERDRAFTSUM_INDEX = 9;
    private static final int myTECHNICALPENALTY_INDEX = 10;
    private static final int myTOTALDEBTSUM_INDEX = 11;
    private static final int myUNSETLTEDDEBTCREATEDATE_INDEX = 12;
    private static final int myUNSETTLEDDEBTSUM_INDEX = 13;
    private static final int myUNSETTLEDPENALTY_INDEX = 14;
    
    public OverdraftInfo_SOAPBuilder() {
    }
    
    public void setAvailableLimit(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money availableLimit) {
        this.availableLimit = availableLimit;
    }
    
    public void setCardId(long cardId) {
        this.cardId = cardId;
    }
    
    public void setCurrentOverdraftSum(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money currentOverdraftSum) {
        this.currentOverdraftSum = currentOverdraftSum;
    }
    
    public void setLimit(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money limit) {
        this.limit = limit;
    }
    
    public void setMinimalPayment(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money minimalPayment) {
        this.minimalPayment = minimalPayment;
    }
    
    public void setMinimalPaymentDate(java.util.Calendar minimalPaymentDate) {
        this.minimalPaymentDate = minimalPaymentDate;
    }
    
    public void setOpenDate(java.util.Calendar openDate) {
        this.openDate = openDate;
    }
    
    public void setOwnSum(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money ownSum) {
        this.ownSum = ownSum;
    }
    
    public void setRate(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money rate) {
        this.rate = rate;
    }
    
    public void setTechnicalOverdraftSum(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money technicalOverdraftSum) {
        this.technicalOverdraftSum = technicalOverdraftSum;
    }
    
    public void setTechnicalPenalty(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money technicalPenalty) {
        this.technicalPenalty = technicalPenalty;
    }
    
    public void setTotalDebtSum(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money totalDebtSum) {
        this.totalDebtSum = totalDebtSum;
    }
    
    public void setUnsetltedDebtCreateDate(java.util.Calendar unsetltedDebtCreateDate) {
        this.unsetltedDebtCreateDate = unsetltedDebtCreateDate;
    }
    
    public void setUnsettledDebtSum(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money unsettledDebtSum) {
        this.unsettledDebtSum = unsettledDebtSum;
    }
    
    public void setUnsettledPenalty(com.rssl.phizicgate.wsgate.services.bankroll.generated.Money unsettledPenalty) {
        this.unsettledPenalty = unsettledPenalty;
    }
    
    public int memberGateType(int memberIndex) {
        switch (memberIndex) {
            case myAVAILABLELIMIT_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myCURRENTOVERDRAFTSUM_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myLIMIT_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myMINIMALPAYMENT_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myOWNSUM_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myRATE_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myTECHNICALOVERDRAFTSUM_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myTECHNICALPENALTY_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myTOTALDEBTSUM_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myUNSETTLEDDEBTSUM_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myUNSETTLEDPENALTY_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            default:
                throw new IllegalArgumentException();
        }
    }
    
    public void construct() {
    }
    
    public void setMember(int index, java.lang.Object memberValue) {
        try {
            switch(index) {
                case myAVAILABLELIMIT_INDEX:
                    _instance.setAvailableLimit((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myCURRENTOVERDRAFTSUM_INDEX:
                    _instance.setCurrentOverdraftSum((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myLIMIT_INDEX:
                    _instance.setLimit((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myMINIMALPAYMENT_INDEX:
                    _instance.setMinimalPayment((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myOWNSUM_INDEX:
                    _instance.setOwnSum((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myRATE_INDEX:
                    _instance.setRate((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myTECHNICALOVERDRAFTSUM_INDEX:
                    _instance.setTechnicalOverdraftSum((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myTECHNICALPENALTY_INDEX:
                    _instance.setTechnicalPenalty((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myTOTALDEBTSUM_INDEX:
                    _instance.setTotalDebtSum((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myUNSETTLEDDEBTSUM_INDEX:
                    _instance.setUnsettledDebtSum((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                case myUNSETTLEDPENALTY_INDEX:
                    _instance.setUnsettledPenalty((com.rssl.phizicgate.wsgate.services.bankroll.generated.Money)memberValue);
                    break;
                default:
                    throw new java.lang.IllegalArgumentException();
            }
        }
        catch (java.lang.RuntimeException e) {
            throw e;
        }
        catch (java.lang.Exception e) {
            throw new DeserializationException(new LocalizableExceptionAdapter(e));
        }
    }
    
    public void initialize() {
    }
    
    public void setInstance(java.lang.Object instance) {
        _instance = (com.rssl.phizicgate.wsgate.services.bankroll.generated.OverdraftInfo)instance;
    }
    
    public java.lang.Object getInstance() {
        return _instance;
    }
}
