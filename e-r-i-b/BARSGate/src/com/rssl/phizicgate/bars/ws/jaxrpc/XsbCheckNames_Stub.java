// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizicgate.bars.ws.jaxrpc;

import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;

import javax.xml.namespace.QName;
import java.rmi.RemoteException;

import com.sun.xml.rpc.client.SenderException;
import com.sun.xml.rpc.client.*;
import com.sun.xml.rpc.client.http.*;
import javax.xml.rpc.handler.*;
import javax.xml.rpc.JAXRPCException;

public class XsbCheckNames_Stub
    extends com.sun.xml.rpc.client.StubBase
    implements com.rssl.phizicgate.bars.ws.jaxrpc.XsbCheckNames {
    
    
    
    /*
     *  public constructor
     */
    public XsbCheckNames_Stub(HandlerChain handlerChain) {
        super(handlerChain);
        _setProperty(ENDPOINT_ADDRESS_PROPERTY, "http://10.143.15.166:9080/XsbToolsWebExt/services/XsbCheckNames");
    }
    
    
    /*
     *  implementation of readRemoteClientName
     */
    public com.rssl.phizicgate.bars.ws.jaxrpc.XsbRemoteClientNameReturn readRemoteClientName(java.lang.String xsbDocument, com.rssl.phizicgate.bars.ws.jaxrpc.ArrayOfXsbParameter parameters)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(readRemoteClientName_OPCODE);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientName _myReadRemoteClientName = new com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientName();
            _myReadRemoteClientName.setXsbDocument(xsbDocument);
            _myReadRemoteClientName.setParameters(parameters);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_readRemoteClientName_readRemoteClientName_QNAME);
            _bodyBlock.setValue(_myReadRemoteClientName);
            _bodyBlock.setSerializer(ns1_myReadRemoteClientName_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameResponse)_responseObj;
            }
            
            return _result.getReadRemoteClientNameReturn();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of readRemoteClientNameExtended
     */
    public com.rssl.phizicgate.bars.ws.jaxrpc.XsbRemoteClientNameExtendedReturn readRemoteClientNameExtended(java.lang.String xsbDocument, com.rssl.phizicgate.bars.ws.jaxrpc.ArrayOfXsbParameter parameters)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(readRemoteClientNameExtended_OPCODE);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtended _myReadRemoteClientNameExtended = new com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtended();
            _myReadRemoteClientNameExtended.setXsbDocument(xsbDocument);
            _myReadRemoteClientNameExtended.setParameters(parameters);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_readRemoteClientNameExtended_readRemoteClientNameExtended_QNAME);
            _bodyBlock.setValue(_myReadRemoteClientNameExtended);
            _bodyBlock.setSerializer(ns1_myReadRemoteClientNameExtended_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtendedResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtendedResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtendedResponse)_responseObj;
            }
            
            return _result.getReadRemoteClientNameExtendedReturn();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    /*
     *  implementation of checkRemoteClientName
     */
    public com.rssl.phizicgate.bars.ws.jaxrpc.XsbChecksReturn checkRemoteClientName(java.lang.String xsbDocument, com.rssl.phizicgate.bars.ws.jaxrpc.ArrayOfXsbParameter parameters)
        throws java.rmi.RemoteException {
        
        try {
            
            StreamingSenderState _state = _start(_handlerChain);
            
            InternalSOAPMessage _request = _state.getRequest();
            _request.setOperationCode(checkRemoteClientName_OPCODE);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientName _myCheckRemoteClientName = new com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientName();
            _myCheckRemoteClientName.setXsbDocument(xsbDocument);
            _myCheckRemoteClientName.setParameters(parameters);
            
            SOAPBlockInfo _bodyBlock = new SOAPBlockInfo(ns1_checkRemoteClientName_checkRemoteClientName_QNAME);
            _bodyBlock.setValue(_myCheckRemoteClientName);
            _bodyBlock.setSerializer(ns1_myCheckRemoteClientName_LiteralSerializer);
            _request.setBody(_bodyBlock);
            
            _state.getMessageContext().setProperty(HttpClientTransport.HTTP_SOAPACTION_PROPERTY, "");
            
            _send((java.lang.String) _getProperty(ENDPOINT_ADDRESS_PROPERTY), _state);
            
            com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientNameResponse _result = null;
            java.lang.Object _responseObj = _state.getResponse().getBody().getValue();
            if (_responseObj instanceof SOAPDeserializationState) {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientNameResponse)((SOAPDeserializationState) _responseObj).getInstance();
            } else {
                _result = (com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientNameResponse)_responseObj;
            }
            
            return _result.getCheckRemoteClientNameReturn();
            
        } catch (RemoteException e) {
            // let this one through unchanged
            throw e;
        } catch (JAXRPCException e) {
            throw new RemoteException(e.getMessage(), e);
        } catch (Exception e) {
            if (e instanceof RuntimeException) {
                throw (RuntimeException)e;
            } else {
                throw new RemoteException(e.getMessage(), e);
            }
        }
    }
    
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void _readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case readRemoteClientName_OPCODE:
                _deserialize_readRemoteClientName(bodyReader, deserializationContext, state);
                break;
            case readRemoteClientNameExtended_OPCODE:
                _deserialize_readRemoteClientNameExtended(bodyReader, deserializationContext, state);
                break;
            case checkRemoteClientName_OPCODE:
                _deserialize_checkRemoteClientName(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SenderException("sender.response.unrecognizedOperation", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the readRemoteClientName operation.
     */
    private void _deserialize_readRemoteClientName(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myReadRemoteClientNameResponseObj =
            ns1_myReadRemoteClientNameResponse_LiteralSerializer.deserialize(ns1_readRemoteClientName_readRemoteClientNameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_readRemoteClientName_readRemoteClientNameResponse_QNAME);
        bodyBlock.setValue(myReadRemoteClientNameResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the readRemoteClientNameExtended operation.
     */
    private void _deserialize_readRemoteClientNameExtended(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myReadRemoteClientNameExtendedResponseObj =
            ns1_myReadRemoteClientNameExtendedResponse_LiteralSerializer.deserialize(ns1_readRemoteClientNameExtended_readRemoteClientNameExtendedResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_readRemoteClientNameExtended_readRemoteClientNameExtendedResponse_QNAME);
        bodyBlock.setValue(myReadRemoteClientNameExtendedResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the checkRemoteClientName operation.
     */
    private void _deserialize_checkRemoteClientName(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingSenderState state) throws Exception {
        java.lang.Object myCheckRemoteClientNameResponseObj =
            ns1_myCheckRemoteClientNameResponse_LiteralSerializer.deserialize(ns1_checkRemoteClientName_checkRemoteClientNameResponse_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_checkRemoteClientName_checkRemoteClientNameResponse_QNAME);
        bodyBlock.setValue(myCheckRemoteClientNameResponseObj);
        state.getResponse().setBody(bodyBlock);
    }
    
    
    
    protected java.lang.String _getDefaultEnvelopeEncodingStyle() {
        return null;
    }
    
    public java.lang.String _getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    public java.lang.String _getEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public void _setEncodingStyle(java.lang.String encodingStyle) {
        throw new UnsupportedOperationException("cannot set encoding style");
    }
    
    
    
    
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] _getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] _getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    public void _initialize(InternalTypeMappingRegistry registry) throws Exception {
        super._initialize(registry);
        ns1_myReadRemoteClientName_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientName.class, ns1_readRemoteClientName_TYPE_QNAME);
        ns1_myReadRemoteClientNameExtendedResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtendedResponse.class, ns1_readRemoteClientNameExtendedResponse_TYPE_QNAME);
        ns1_myReadRemoteClientNameResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameResponse.class, ns1_readRemoteClientNameResponse_TYPE_QNAME);
        ns1_myCheckRemoteClientNameResponse_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientNameResponse.class, ns1_checkRemoteClientNameResponse_TYPE_QNAME);
        ns1_myReadRemoteClientNameExtended_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.ReadRemoteClientNameExtended.class, ns1_readRemoteClientNameExtended_TYPE_QNAME);
        ns1_myCheckRemoteClientName_LiteralSerializer = (CombinedSerializer)registry.getSerializer("", com.rssl.phizicgate.bars.ws.jaxrpc.CheckRemoteClientName.class, ns1_checkRemoteClientName_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName _portName = new QName("http://checkNames.xsb.webservices.bars.sbrf", "XsbCheckNames");
    private static final int readRemoteClientName_OPCODE = 0;
    private static final int readRemoteClientNameExtended_OPCODE = 1;
    private static final int checkRemoteClientName_OPCODE = 2;
    private static final javax.xml.namespace.QName ns1_readRemoteClientName_readRemoteClientName_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientName");
    private static final javax.xml.namespace.QName ns1_readRemoteClientName_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientName");
    private CombinedSerializer ns1_myReadRemoteClientName_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_readRemoteClientName_readRemoteClientNameResponse_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameResponse");
    private static final javax.xml.namespace.QName ns1_readRemoteClientNameResponse_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameResponse");
    private CombinedSerializer ns1_myReadRemoteClientNameResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_readRemoteClientNameExtended_readRemoteClientNameExtended_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameExtended");
    private static final javax.xml.namespace.QName ns1_readRemoteClientNameExtended_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameExtended");
    private CombinedSerializer ns1_myReadRemoteClientNameExtended_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_readRemoteClientNameExtended_readRemoteClientNameExtendedResponse_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameExtendedResponse");
    private static final javax.xml.namespace.QName ns1_readRemoteClientNameExtendedResponse_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "readRemoteClientNameExtendedResponse");
    private CombinedSerializer ns1_myReadRemoteClientNameExtendedResponse_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_checkRemoteClientName_checkRemoteClientName_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "checkRemoteClientName");
    private static final javax.xml.namespace.QName ns1_checkRemoteClientName_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "checkRemoteClientName");
    private CombinedSerializer ns1_myCheckRemoteClientName_LiteralSerializer;
    private static final javax.xml.namespace.QName ns1_checkRemoteClientName_checkRemoteClientNameResponse_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "checkRemoteClientNameResponse");
    private static final javax.xml.namespace.QName ns1_checkRemoteClientNameResponse_TYPE_QNAME = new QName("http://checkNames.xsb.webservices.bars.sbrf", "checkRemoteClientNameResponse");
    private CombinedSerializer ns1_myCheckRemoteClientNameResponse_LiteralSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://checkNames.xsb.webservices.bars.sbrf"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
