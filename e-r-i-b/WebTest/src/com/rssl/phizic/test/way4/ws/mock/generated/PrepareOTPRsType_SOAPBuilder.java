// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.test.way4.ws.mock.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.util.exception.LocalizableExceptionAdapter;

public class PrepareOTPRsType_SOAPBuilder implements SOAPInstanceBuilder {
    private com.rssl.phizic.test.way4.ws.mock.generated.PrepareOTPRsType _instance;
    private java.lang.String STAN;
    private java.lang.String status;
    private java.lang.String SID;
    private java.lang.String passwordNo;
    private java.lang.Integer passwordsLeft;
    private java.lang.String receiptNo;
    private static final int mySTAN_INDEX = 0;
    private static final int mySTATUS_INDEX = 1;
    private static final int mySID_INDEX = 2;
    private static final int myPASSWORDNO_INDEX = 3;
    private static final int myPASSWORDSLEFT_INDEX = 4;
    private static final int myRECEIPTNO_INDEX = 5;
    
    public PrepareOTPRsType_SOAPBuilder() {
    }
    
    public void setSTAN(java.lang.String STAN) {
        this.STAN = STAN;
    }
    
    public void setStatus(java.lang.String status) {
        this.status = status;
    }
    
    public void setSID(java.lang.String SID) {
        this.SID = SID;
    }
    
    public void setPasswordNo(java.lang.String passwordNo) {
        this.passwordNo = passwordNo;
    }
    
    public void setPasswordsLeft(java.lang.Integer passwordsLeft) {
        this.passwordsLeft = passwordsLeft;
    }
    
    public void setReceiptNo(java.lang.String receiptNo) {
        this.receiptNo = receiptNo;
    }
    
    public int memberGateType(int memberIndex) {
        switch (memberIndex) {
            case mySTAN_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case mySTATUS_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case mySID_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myPASSWORDNO_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myPASSWORDSLEFT_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            case myRECEIPTNO_INDEX:
                return GATES_INITIALIZATION | REQUIRES_CREATION;
            default:
                throw new IllegalArgumentException();
        }
    }
    
    public void construct() {
    }
    
    public void setMember(int index, java.lang.Object memberValue) {
        try {
            switch(index) {
                case mySTAN_INDEX:
                    _instance.setSTAN((java.lang.String)memberValue);
                    break;
                case mySTATUS_INDEX:
                    _instance.setStatus((java.lang.String)memberValue);
                    break;
                case mySID_INDEX:
                    _instance.setSID((java.lang.String)memberValue);
                    break;
                case myPASSWORDNO_INDEX:
                    _instance.setPasswordNo((java.lang.String)memberValue);
                    break;
                case myPASSWORDSLEFT_INDEX:
                    _instance.setPasswordsLeft((java.lang.Integer)memberValue);
                    break;
                case myRECEIPTNO_INDEX:
                    _instance.setReceiptNo((java.lang.String)memberValue);
                    break;
                default:
                    throw new java.lang.IllegalArgumentException();
            }
        }
        catch (java.lang.RuntimeException e) {
            throw e;
        }
        catch (java.lang.Exception e) {
            throw new DeserializationException(new LocalizableExceptionAdapter(e));
        }
    }
    
    public void initialize() {
    }
    
    public void setInstance(java.lang.Object instance) {
        _instance = (com.rssl.phizic.test.way4.ws.mock.generated.PrepareOTPRsType)instance;
    }
    
    public java.lang.Object getInstance() {
        return _instance;
    }
}
