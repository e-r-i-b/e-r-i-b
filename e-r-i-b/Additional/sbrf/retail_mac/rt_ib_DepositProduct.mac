import rcw, rsd, deprintr;
import "rt_ib_xml.mac";


// ───────────────────────────────────────────────
// Получение информации по конкретному виду вклада
// ───────────────────────────────────────────────
class(cBaseDeposit) 
    cDepositProduct( inXml, outXml ) 

/* 
    ───────────────────
      ИСХОДНЫЕ ДАННЫЕ  
    ───────────────────

Элемент сообщения	Тип		Комментарий				Кратность
───────────────────────┼───────────────┼───────────────────────────────────────┼──────────────
request			
├─id                    String(32)      Идентификатор запроса в системе  ИКФЛ	
└─depositProduct_q			
  └─deposit                             Запрос по одному виду вклада            [0..a]
    ├─currencyFlag      Int16           0 - рублевые виды вкладов
    │                                   1 - валютные виды вкладов	
    └─accountTypeId     String(12)      Идентификатор вида вклада	


    ───────────────────
          ОТВЕТ
    ───────────────────
Элемент сообщения	Тип		Атрибут		Комментарий			                                Кратность
───────────────────────┼───────────────┼───────────────┼───────────────────────────────────────────────────────────────┼─────────────
response				
├─parentId              String(32)                      Идентификатор запроса в системе  ИКФЛ	
├─id                    String(32)                      Идентификатор ответа	
└─depositProduct_a				
  ├─structure
  │ └─fields                                            Перечень полей, описывающих вклад	
  │   └─field				name            Наименование поля                                               [0..a]
  │                                     description     Описание поля	
  │                                     domen           Тип значения (значение атрибута соответствует атрибуту name элемента  entity-list)	
  ├─data                                                Список вкладов	
  │ └─element                                           Перечень значений полей вклада, перечисленных в элементе fields	[0..b]
  │   └─value                           field           В атрибуте указывается значение атрибута name элемента field.
  │                                                     Если указан тип значения для поля вклада, то элемент            [0..a]
  │                                                     принимает значение атрибута key элемента entity. 
  └─dictionaries                                        Перечень типов значений	
    └─entity-list                       name            Список типов значений                                           [0..c]
      └─entity                          key             Возможные значения для типа                                     [0..d]


*/


  // ───────────────────────────────────────────────
  // ─── Тэг structure ───
  private macro CreateTagStructure( outXml )
    /*
    accountTypeId                 string(12)      Идентификатор                                   Идентификатор вида вклада
    accountTypeName               string(40)      Название                                        Название вида вклада
    formContr                     int16           Вид                     formContr               Пересчитать из значений RS-Retail.
                                                                          0 - бессрочный
                                                                          1 - срочный	
    period                        string          Срок                                            Срок договора
                                                                                                  Передается, если formContr != 0. 
    term_Max                      string          Максимальный срок                               Максимально возможный срок договора
    renewal                       bool            Пролонгация             flag                    Разрешены или нет пролонгации
                                                                          true - разрешены
                                                                          false - запрещены	
    numberProl                    int16           Число сроков                                    Число сроков договоров (если разрешены  пролонгации)
                                                                                                  0 - не ограничено
                                                                                                  Передается, если не 0
    minimumAmount                 lmoney          Минимальная сумма                               Неснижаемый остаток
    additionalFee                 bool            Доп.взнос               flag                    Разрешены ли дополнительные взносы
                                                                          true - разрешены
                                                                          false - запрещены	
    minAdditionalFee              lmoney          Мин.доп.взнос                                   Мин. сумма доп. взноса.
                                                                                                  Передается, если additionalFee == "true"
    capitalization                bool            Капитализация           flag                    Счтаются ли проценты на проценты для данного вида вклада
                                                                                                  true - разрешены
                                                                                                  false - запрещены	
    paymentPeriod                 string(50)      График оплаты	                                  Выводится график оплаты процентов
    anticipatoryRemoval           bool            Досрочное снятие        flag                    Разрешено ли досрочное снятие части средств по вкладу
                                                                                                  true - разрешены
                                                                                                  false - запрещены	
    conditionsPaymentPercent      string(12)      Нарушение                                       Идентификатор вида вклада по нарушению
    currency                      string(3)       Валюта                  currencies 	
    rateType                      int             Тип ставки              rateTypeVal	
    ratePeriod                    string(9)       Период		
    isMacro                       bool            Ставка макросом         flagMacro               Если этот параметр true, то никаких ставок больше определять
                                                                          true - макрсоом         не надо - они считаются макросом для конкретного счета
                                                                          false - по настройкам	 
    rest                          lmoney          Остаток		
    interestRate                  double          Ставка                                          Ставка зависит от остатка

    */

    nodeDeposit = nodeAnswer.appendChild( outXML.createNode(1, "structure", "") ); 
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "fields", "") );
    // перечисляем используемые поля
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "accountTypeId" ); 
    nodeVal.setAttribute( "description", "Идентификатор" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "accountTypeName" ); 
    nodeVal.setAttribute( "description", "Название" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "formContr" ); 
    nodeVal.setAttribute( "description", "Вид" );
    nodeVal.setAttribute( "domen", "formContr" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "periodMin" ); 
    nodeVal.setAttribute( "description", "Срок" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "periodMax" ); 
    nodeVal.setAttribute( "description", "Максимальный срок" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "renewal" ); 
    nodeVal.setAttribute( "description", "Пролонгация" );
    nodeVal.setAttribute( "domen", "flag" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "numberProl" ); 
    nodeVal.setAttribute( "description", "Число сроков" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "minimumAmount" ); 
    nodeVal.setAttribute( "description", "Минимальная сумма" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "additionalFee" ); 
    nodeVal.setAttribute( "description", "Доп.взнос" );
    nodeVal.setAttribute( "domen", "flag" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "minAdditionalFee" ); 
    nodeVal.setAttribute( "description", "Мин.доп.взнос" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "capitalization" ); 
    nodeVal.setAttribute( "description", "Капитализация" );
    nodeVal.setAttribute( "domen", "flag" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "paymentPeriod" ); 
    nodeVal.setAttribute( "description", "График оплаты" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "anticipatoryRemoval" ); 
    nodeVal.setAttribute( "description", "Досрочное снятие" );
    nodeVal.setAttribute( "domen", "flag" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "conditionsPaymentPercentString" ); 
    nodeVal.setAttribute( "description", "Нарушение" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "currency" ); 
    nodeVal.setAttribute( "description", "Валюта" );
    nodeVal.setAttribute( "domen", "currencies" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "rateType" ); 
    nodeVal.setAttribute( "description", "Тип ставки" );
    nodeVal.setAttribute( "domen", "rateTypeVal" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "period" ); 
    nodeVal.setAttribute( "description", "Период" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "isMacro" ); 
    nodeVal.setAttribute( "description", "Ставка макросом" );
    nodeVal.setAttribute( "description", "flagMacro" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "rest" ); 
    nodeVal.setAttribute( "description", "Остаток" );

    nodeVal = nodeFields.appendChild( outXML.createNode(1, "field", "") );
    nodeVal.setAttribute( "name", "interestRate" ); 
    nodeVal.setAttribute( "description", "Ставка" );

    SetParm( 1, outXml );
  end;//CreateTagStructure( outXml )

  // ───────────────────────────────────────────────
  // Тэг data
  // ───────────────────────────────────────────────
  private macro CreateTagData( kind, isCur, outXml, isFirstCall )

    var stat = 0;                         
    array errors; errors(0) = 0; errors(1) = 0;
    var cmd_data, cmd_rate; 
    var rs_data, rs_rate;

    var ItemCount, ItemCurrent,
        MacroNum,
        RateCycle;
    var NameFieldRest, NameFieldPercent;

    var UseNextCurrency = (isCur == -1 );
    
    if(IsCur == -1) 
      isCur = 0;
    end;

    if( isFirstCall )
      nodeDeposit = nodeAnswer.appendChild( outXML.createNode(1, "data", "") );
    end;

    while ( isCur < 2 )
      
      stat = TypeAccountParameters( isCur, kind );
      if ( stat != 0 )
        errors(IsCur) = stat;
        //outXml = AddError2OutXml(outXml, stat, getErrorString(stat));
      else

        stat = PercentTypeAccountParameters( isCur, kind, date() );
        if ( stat != 0 )
          errors(IsCur) = stat;
          //outXml = AddError2OutXml(outXml, stat, getErrorString(stat));
        else
                                            
          cmd_data = RsdCommand(
              "select typ.t_kind accountTypeId, typ.t_name accountTypeName, " +
                     "case typ.t_FormContr  " +
                        "when 0 then 0 " +
                               "else 1 " +
                     "end formContr,  " +
                     "typ.t_term term, " +
                     "typ.t_kindterm kindterm, " + //        для period
                     "typ.t_term_max termmax, " +  //        для term_max
                     "case typ.t_FormContr " +
                        "when 30 then 'true' " +
                                "else 'false' " +
                     "end renewal, " +
                     "nvl( typ.t_numberprol, 0 ) numberProl, " +
                     "typ.t_limit minimumAmount, " +
                     "ap.t_aptype condPP, " +
                     "cur.t_short_name currency, " +
                     "cur.t_code_currency codecur "  
                "from dsb_dtyp_dbt typ " +
                    "left outer join dpc_apltp_dbt ap  " +
                                 "on ap.t_iscur = typ.t_flagcur " +
                                "and ap.t_typerec = rpcc.get_rtpc_account_type " +
                                "and ap.t_type = typ.t_kind " +
                                "and ap.t_appltype = rpcc.get_rtpc_account_alt " +
                     "right outer join " +
                              "(select distinct rate.t_code_currency, rate.t_referenc " +
                                 "from dpc_rate_dbt rate " +
                                "where rate.t_objecttype = rpcc.get_rtpc_account_type " +
                                  "and rate.t_flagcur = ? " +
                                  "and rate.t_referenc = (select t_rategroup " +
                                                           "from (select t_rategroup " +
                                                                   "from dpc_alg_dbt " +
                                                                  "where t_flagcur = ? " +
                                                                    "and t_referenc = ? " +
                                                                    "and t_objecttype = rpcc.get_rtpc_account_type " +
                                                                    "and t_begdate <= ? " +
                                                               "order by t_begdate desc) " +
                                                           "where rownum = 1)           ) t " +
                                   "on t.t_referenc = typ.t_kind " +
                     "join dcurrency_dbt cur " +
                      "on cur.t_code_currency = t.t_code_currency " +
               "where typ.t_flagcur = ? " +
                 "and typ.t_kind = ? " +
                 "and typ.t_usertypeaccount not like '%К%' "+
                 "and typ.t_usertypeaccount not like '%Щ%' " +
                 "and typ.t_usertypeaccount like '%I%' "+
                 "and typ.t_specialaccess = '0' ");

          cmd_data.AddParam("isCur0",   RSDBP_IN);    cmd_data.value("isCur0")   = IsCur;
          cmd_data.AddParam("isCur1",   RSDBP_IN);    cmd_data.value("isCur1")   = isCur;
          cmd_data.AddParam("kind0",    RSDBP_IN);    cmd_data.value("kind0")    = kind;
          cmd_data.AddParam("curdate0", RSDBP_IN);    cmd_data.value("curdate0") = date();
          cmd_data.AddParam("isCur2",   RSDBP_IN);    cmd_data.value("isCur2")   = isCur;
          cmd_data.AddParam("kind1",    RSDBP_IN);    cmd_data.value("kind1")    = kind;

          cmd_data.execute;

          rs_data = RsdRecordSet( cmd_data );
          while (rs_data.moveNext)
            // Для неабсолютной ставки RateType != RTPC_ABS_RATE
            if ( RateType != 1 )      
              cmd_rate = RsdCommand( 
                  "select t_restCount, t_macroNum, t_dateperiodtype, t_dateperiod, " +
                         "t_rest1, t_percent1, t_rest2, t_percent2, t_rest3, t_percent3, " + 
                         "t_rest4, t_percent4, t_rest5, t_percent5, t_rest6, t_percent6, " + 
                         "t_rest7, t_percent7, t_rest8, t_percent8, t_rest9, t_percent9, " + 
                         "t_rest10, t_percent10, t_rest11, t_percent11, t_rest12, t_percent12, " + 
                         "t_rest13, t_percent13, t_rest14, t_percent14, t_rest15, t_percent15, " + 
                         "t_rest16, t_percent16, t_rest17, t_percent17, t_rest18, t_percent18, " + 
                         "t_rest19, t_percent19, t_rest20, t_percent20 " +
                    "from dpc_rate_dbt  " +
                   "where t_action <> ralc.get_d_delete " +
                     "and t_flagcur = ? " +
                     "and t_objecttype = rpcc.get_rtpc_account_type " +
                     "and t_referenc = ? " +
                     "and t_code_currency = ? " +
                     "and t_begindate = " +
                            "(select t_begindate " +
                               "from (select   t_begindate " +
                                         "from dpc_rate_dbt t " +
                                        "where t.t_action <> ralc.get_d_delete " +
                                          "and t.t_flagcur = ?  " +
                                          "and t_objecttype = rpcc.get_rtpc_account_type " +
                                          "and t_referenc = ? " +
                                          "and t_code_currency = ? " +
                                          "and t_begindate <= ? " +
                                     "order by t_begindate desc) " +
                              "where rownum = 1) " );

              cmd_rate.AddParam("isCur0",  RSDBP_IN);    cmd_rate.value("isCur0")  = isCur;
              cmd_rate.AddParam("kind0",   RSDBP_IN);    cmd_rate.value("kind0")   = kind;
              cmd_rate.AddParam("cur0",    RSDBP_IN);    cmd_rate.value("cur0")    = rs_data.value("codecur");
              cmd_rate.AddParam("isCur1",  RSDBP_IN);    cmd_rate.value("isCur1")  = isCur;
              cmd_rate.AddParam("kind1",   RSDBP_IN);    cmd_rate.value("kind1")   = kind;
              cmd_rate.AddParam("cur1",    RSDBP_IN);    cmd_rate.value("cur1")    = rs_data.value("codecur");
              cmd_rate.AddParam("begDate", RSDBP_IN);    cmd_rate.value("begDate") = date();
            // Для абсолютной ставки 
            else
              cmd_rate = RsdCommand( 
                  "select t_restCount, t_macroNum, t_dateperiodtype, t_dateperiod, " +
                         "t_rest1, t_percent1, t_rest2, t_percent2, t_rest3, t_percent3, " + 
                         "t_rest4, t_percent4, t_rest5, t_percent5, t_rest6, t_percent6, " + 
                         "t_rest7, t_percent7, t_rest8, t_percent8, t_rest9, t_percent9, " + 
                         "t_rest10, t_percent10, t_rest11, t_percent11, t_rest12, t_percent12, " + 
                         "t_rest13, t_percent13, t_rest14, t_percent14, t_rest15, t_percent15, " + 
                         "t_rest16, t_percent16, t_rest17, t_percent17, t_rest18, t_percent18, " + 
                         "t_rest19, t_percent19, t_rest20, t_percent20 "
                    "from (select   * " +
                              "from dpc_rate_dbt " +
                             "where t_action <> ralc.get_d_delete " +
                               "and t_flagcur = ? " +
                               "and t_objecttype = rpcc.get_rtpc_account_type " +
                               "and t_referenc = ? " +
                               "and t_code_currency = ? " +
                               "and t_begindate <= ? " +
                          "order by t_begindate desc) " +
                   "where rownum = 1 " );

              cmd_rate.AddParam("isCur0",  RSDBP_IN);    cmd_rate.value("isCur0")  = isCur;
              cmd_rate.AddParam("kind0",   RSDBP_IN);    cmd_rate.value("kind0")   = kind;
              cmd_rate.AddParam("cur0",    RSDBP_IN);    cmd_rate.value("cur0")    = rs_data.value("codecur");
              cmd_rate.AddParam("begDate", RSDBP_IN);    cmd_rate.value("begDate") = date();

            end;//if ( RateType != 1 )

            cmd_rate.execute;

            rs_rate = RsdRecordSet( cmd_rate );
            while ( rs_rate.moveNext )

              ItemCount   = rs_rate.value("t_restCount"); 
              ItemCurrent = 1; 
              MacroNUM    = rs_rate.value("t_macroNum");
              RateCycle   = true;

              while( RateCycle )

                NameFieldRest    = "t_rest"    + string(ItemCurrent);
                NameFieldPercent = "t_percent" + string(ItemCurrent);

                nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "element", "") );
                // Идентификатор вида вклада в RS-Retail
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "accountTypeId" ); 
                nodeVal.text = rs_data.value("accountTypeId");
                // Название вида вклада  
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "accountTypeName" ); 
                nodeVal.text = rs_data.value("accountTypeName");
                // Вид
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "formContr" ); 
                nodeVal.text = rs_data.value("formContr");
                if ( rs_data.value("formContr") != 0 )  
                  // Срок договора 
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "periodMin" ); 
                  nodeVal.text = period_rt2ib( rs_data.value("kindterm"), rs_data.value("term") );
                  // Максимально возможный срок договора
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "periodMax" ); 
                  nodeVal.text = period_rt2ib( rs_data.value("kindterm"), rs_data.value("termmax"), null, null );
                end;
                // Пролонгация
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "renewal" ); 
                nodeVal.text = rs_data.value("renewal");
                // Число сроков
                if ( rs_data.value("renewal") != 0 )
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "numberProl" ); 
                  nodeVal.text = rs_data.value("numberProl");
                end;
                // Минимальная сумма
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "minimumAmount" ); 
                nodeVal.text = string(rs_data.value("minimumAmount"):0:2);
                // Доп. взнос
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "additionalFee" ); 
                nodeVal.text = addFee;
                // Минимальная сумма доп. взноса
                if ( addFee == "true" )
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "minAdditionalFee" ); 
                  nodeVal.text = string(minFee:0:2);
                end;  
                // Капитализация
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "capitalization" ); 
                nodeVal.text = capit;
                // График оплаты
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "paymentPeriod" ); 
                nodeVal.text = PaymPer;
                // Досрочное снятие
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "anticipatoryRemoval" ); 
                nodeVal.text = antRem;
                // Идентификатор вида вклада при нарушении условий
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "conditionsPaymentPercent" ); 
                nodeVal.text = rs_data.value("condPP");
                // Валюта
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "currency" ); 
                nodeVal.text = rs_data.value("currency");
                // Тип ставки
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "rateType" ); 
                nodeVal.text = RateType;
                // Период
                if ( RateType != 1 ) 
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "period" ); 
                  nodeVal.text = period_rt2ib( rs_rate.value("t_dateperiodtype"), rs_rate.value("t_dateperiod") );
                end;
                // Ставка макросом
                nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                nodeVal.setAttribute( "field", "isMacro" ); 
                if ( MacroNum != 0 )
                  nodeVal.text = "true";
                else
                  nodeVal.text = "false";

                  // Остаток
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "rest" ); 
                  nodeVal.text = string(rs_rate.value( NameFieldRest ):0:2);
                  // Ставка
                  nodeVal = nodeFields.appendChild( outXML.createNode(1, "value", "") );
                  nodeVal.setAttribute( "field", "interestRate" ); 
                  nodeVal.text = string(rs_rate.value( NameFieldPercent ):0:2);

                end;//if ( MacroNum != 0 )

                if ( MacroNum != 0 )
                  RateCycle = false;
                end;

                ItemCurrent = ItemCurrent + 1;
                if ( ItemCurrent > ItemCount )
                  RateCycle = false;
                end;

              end;//while( RateCycle )

            end;//while ( rs_rate.moveNext)

          end;//while (rs.moveNext)

        end;//if ( stat != 0 )
      end;//if ( stat != 0 )

      if ( UseNextCurrency )
        isCur = isCur + 1;
      else
        isCur = 2;
      end;   
    end;//while ( isCur < 2 )

    if ( UseNextCurrency )
      if (( errors(0) != 0 ) and ( errors(1) != 0 ))
        outXml = AddError2OutXml(outXml, errors(0), getErrorString(errors(0)));
        outXml = AddError2OutXml(outXml, errors(1), getErrorString(errors(1)));
      end;     
    else 
      if ( errors(0) != 0 )
        outXml = AddError2OutXml(outXml, errors(0), getErrorString(errors(0)));
      end;
      if ( errors(1) != 0 )
        outXml = AddError2OutXml(outXml, errors(1), getErrorString(errors(1)));
      end;
    end;

    SetParm( 3, outXml );
  end;//CreateTagData( kind, isCur, outXml, isFirstCall )

  // ───────────────────────────────────────────────
  // Тэг dictionaries 
  // ───────────────────────────────────────────────
  private macro createTagDictionaries( outXml )
    var cmd, rs;

    nodeDeposit = nodeAnswer.appendChild( outXML.createNode(1, "dictionaries", "") ); 

    // formContr
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "entity-list", "") );
    nodeFields.setAttribute( "name", "formContr" );
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "0" );
    nodeVal.text = "бессрочный";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "1" );
    nodeVal.text = "срочный";

    // currencies
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "entity-list", "") );
    nodeFields.setAttribute( "name", "currencies" );
    
    cmd = RsdCommand("select t_ccy, t_name from dfininstr_dbt where t_fi_kind = 1");
    cmd.execute;
    
    rs = RsdRecordSet( cmd );
    while( rs.moveNext )
      nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
      nodeVal.setAttribute( "key", rs.value("t_ccy") );
      nodeVal.text = rs.value("t_name");
    end;

    // flag
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "entity-list", "") );
    nodeFields.setAttribute( "name", "flag" );
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "true" );
    nodeVal.text = "разрешены";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "false" );
    nodeVal.text = "запрещены";
    
    //rateTypeVal
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "entity-list", "") );
    nodeFields.setAttribute( "name", "rateTypeVal" );
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "1" );
    nodeVal.text = "абсолютная ставка";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "2" );
    nodeVal.text = "относительная ставка";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "3" );
    nodeVal.text = "от срока договора";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "4" );
    nodeVal.text = "от фактического срока";

    // flagMacro
    nodeFields = nodeDeposit.appendChild( outXML.createNode(1, "entity-list", "") );
    nodeFields.setAttribute( "name", "flagMacro" );
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "true" );
    nodeVal.text = "макросом";
    nodeVal = nodeFields.appendChild( outXML.createNode(1, "entity", "") );
    nodeVal.setAttribute( "key", "false" );
    nodeVal.text = "по настройкам";

    SetParm( 1, outXml );
  end;//createTagDictionaries( outXml )


  // ───────────────────────────────────────
  // Получение информации о виде вклада
  // ───────────────────────────────────────
  macro start( inXml, outXml )
    var stat = 0, nodeDepositProduct, 
        accountTypeIDXml;
    var isFirst = true;
    var isCur;
    var nodeDepositCur;

    if(not outXml )
      outXml = CreateXMLObject();
      if(not outXml) return; end;

      CreateBeginTag( outXml );
      CreateTagStructure( outXml );

      nodeDepositProduct = inXml.documentElement.selectSingleNode( "//depositProduct_q" );
      nodeDepositCur = nodeDepositProduct.firstChild();
      
      while( nodeDepositCur )
        accountTypeIDXml = nodeDepositCur.firstChild();
        isCur = -1;
        if( accountTypeIDXml and ( accountTypeIDXml.nodeName == "currencyFlag"))
          isCur = accountTypeIDXml.text;
          accountTypeIDXml = accountTypeIDXml.nextSibling;
        end;

        if (accountTypeIDXml and ( accountTypeIDXml.nodeName == "accountTypeId"))
          createTagData( accountTypeIDXml.text, isCur, outXml, isFirst );
          isFirst = false;
        end;

        nodeDepositCur = nodeDepositCur.nextSibling();
      end;
      
      CreateTagDictionaries( outXml );
    end;

    return outXml;
  end;//start( inXml, outXml )

end;//class(cBaseDeposit) 

macro DepositProduct( inXml, outXml )

  var t = cDepositProduct;
  outXml = t.start( inXml, outXml );

  SetParm(1, outXml);
end;


