/*
** MBKPROXY_IKFL
*/

create table MBKPROXY_IKFL.MBK_REGISTRATIONS(
	ID INTEGER NOT NULL,
	STATUS VARCHAR2(20) NOT NULL,
	PROC_START_TIME TIMESTAMP NOT NULL,
	PROC_END_TIME TIMESTAMP NULL,
	constraint PK_MBK_REGISTRATIONS primary key (ID) using index (
		create unique index MBKPROXY_IKFL.PK_MBK_REGISTRATIONS on MBKPROXY_IKFL.MBK_REGISTRATIONS(ID) tablespace MBKPROXY_IDX
	)
) tablespace MBKPROXY_DATA
/

create table MBKPROXY_IKFL.ERMB_PHONES(
	PHONE_NUMBER VARCHAR2(11) NOT NULL,
	PHONE_USAGE  CHAR(1) NOT NULL,
	LAST_MODIFIED TIMESTAMP NOT NULL,
	LAST_UPLOAD TIMESTAMP NOT NULL,
	constraint ERMB_PHONES primary key (PHONE_NUMBER) using index (
		create unique index MBKPROXY_IKFL.ERMB_PHONES on MBKPROXY_IKFL.ERMB_PHONES(ID) tablespace MBKPROXY_IDX 
	)
) tablespace MBKPROXY_DATA
/

/*
** QRTZ
*/

CREATE TABLE MBKPROXY_IKFL.qrtz_job_details
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    JOB_CLASS_NAME   VARCHAR2(128) NOT NULL,
    IS_DURABLE VARCHAR2(1) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    IS_STATEFUL VARCHAR2(1) NOT NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NOT NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_job_listeners
  (
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    JOB_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (JOB_NAME,JOB_GROUP,JOB_LISTENER),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
  REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    JOB_NAME  VARCHAR2(80) NOT NULL,
    JOB_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    DESCRIPTION VARCHAR2(120) NULL,
    NEXT_FIRE_TIME NUMBER(13) NULL,
    PREV_FIRE_TIME NUMBER(13) NULL,
    PRIORITY NUMBER(13) NULL,
    TRIGGER_STATE VARCHAR2(16) NOT NULL,
    TRIGGER_TYPE VARCHAR2(8) NOT NULL,
    START_TIME NUMBER(13) NOT NULL,
    END_TIME NUMBER(13) NULL,
    CALENDAR_NAME VARCHAR2(80) NULL,
    MISFIRE_INSTR NUMBER(2) NULL,
    JOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (JOB_NAME,JOB_GROUP)
  REFERENCES QRTZ_JOB_DETAILS(JOB_NAME,JOB_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_simple_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    REPEAT_COUNT NUMBER(7) NOT NULL,
    REPEAT_INTERVAL NUMBER(12) NOT NULL,
    TIMES_TRIGGERED NUMBER(7) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_cron_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    CRON_EXPRESSION VARCHAR2(80) NOT NULL,
    TIME_ZONE_ID VARCHAR2(80),
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_blob_triggers
  (
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    BLOB_DATA BLOB NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
        REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_trigger_listeners
  (
    TRIGGER_NAME  VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    TRIGGER_LISTENER VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_NAME,TRIGGER_GROUP,TRIGGER_LISTENER),
    FOREIGN KEY (TRIGGER_NAME,TRIGGER_GROUP)
  REFERENCES QRTZ_TRIGGERS(TRIGGER_NAME,TRIGGER_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_calendars
  (
    CALENDAR_NAME  VARCHAR2(80) NOT NULL,
    CALENDAR BLOB NOT NULL,
    PRIMARY KEY (CALENDAR_NAME)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_paused_trigger_grps
  (
    TRIGGER_GROUP  VARCHAR2(80) NOT NULL,
    PRIMARY KEY (TRIGGER_GROUP)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_fired_triggers
  (
    ENTRY_ID VARCHAR2(95) NOT NULL,
    TRIGGER_NAME VARCHAR2(80) NOT NULL,
    TRIGGER_GROUP VARCHAR2(80) NOT NULL,
    IS_VOLATILE VARCHAR2(1) NOT NULL,
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    FIRED_TIME NUMBER(13) NOT NULL,
    PRIORITY NUMBER(13) NOT NULL,
    STATE VARCHAR2(16) NOT NULL,
    JOB_NAME VARCHAR2(80) NULL,
    JOB_GROUP VARCHAR2(80) NULL,
    IS_STATEFUL VARCHAR2(1) NULL,
    REQUESTS_RECOVERY VARCHAR2(1) NULL,
    PRIMARY KEY (ENTRY_ID)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_scheduler_state
  (
    INSTANCE_NAME VARCHAR2(80) NOT NULL,
    LAST_CHECKIN_TIME NUMBER(13) NOT NULL,
    CHECKIN_INTERVAL NUMBER(13) NOT NULL,
    PRIMARY KEY (INSTANCE_NAME)
) tablespace MBKPROXY_DATA
/

CREATE TABLE MBKPROXY_IKFL.qrtz_locks
  (
    LOCK_NAME  VARCHAR2(40) NOT NULL,
    PRIMARY KEY (LOCK_NAME)
) tablespace MBKPROXY_DATA
/

INSERT INTO MBKPROXY_IKFL.qrtz_locks values('TRIGGER_ACCESS')
/
INSERT INTO MBKPROXY_IKFL.qrtz_locks values('JOB_ACCESS')
/
INSERT INTO MBKPROXY_IKFL.qrtz_locks values('CALENDAR_ACCESS')
/
INSERT INTO MBKPROXY_IKFL.qrtz_locks values('STATE_ACCESS')
/
INSERT INTO MBKPROXY_IKFL.qrtz_locks values('MISFIRE_ACCESS')
/

create index MBKPROXY_IKFL.idx_qrtz_j_req_recovery on MBKPROXY_IKFL.qrtz_job_details(REQUESTS_RECOVERY) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_t_next_fire_time on MBKPROXY_IKFL.qrtz_triggers(NEXT_FIRE_TIME) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_t_state on MBKPROXY_IKFL.qrtz_triggers(TRIGGER_STATE) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_t_nft_st on MBKPROXY_IKFL.qrtz_triggers(NEXT_FIRE_TIME,TRIGGER_STATE) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_t_volatile on MBKPROXY_IKFL.qrtz_triggers(IS_VOLATILE) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_trig_name on MBKPROXY_IKFL.qrtz_fired_triggers(TRIGGER_NAME) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_trig_group on MBKPROXY_IKFL.qrtz_fired_triggers(TRIGGER_GROUP) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_trig_nm_gp on MBKPROXY_IKFL.qrtz_fired_triggers(TRIGGER_NAME,TRIGGER_GROUP) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_trig_volatile on MBKPROXY_IKFL.qrtz_fired_triggers(IS_VOLATILE) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_trig_inst_name on MBKPROXY_IKFL.qrtz_fired_triggers(INSTANCE_NAME) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_job_name on MBKPROXY_IKFL.qrtz_fired_triggers(JOB_NAME) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_job_group on MBKPROXY_IKFL.qrtz_fired_triggers(JOB_GROUP) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_job_stateful on MBKPROXY_IKFL.qrtz_fired_triggers(IS_STATEFUL) tablespace MBKPROXY_IDX
/
create index MBKPROXY_IKFL.idx_qrtz_ft_job_req_recovery on MBKPROXY_IKFL.qrtz_fired_triggers(REQUESTS_RECOVERY) tablespace MBKPROXY_IDX
/

/*
grant select on  MBKPROXY_IKFL.MBK_REGISTRATIONS to OSDBO_USER;
grant select on  MBKPROXY_IKFL.ERMB_PHONES to OSDBO_USER;
grant select on MBKPROXY_IKFL.qrtz_job_details to OSDBO_USER;
grant select on  MBKPROXY_IKFL.qrtz_job_listeners to OSDBO_USER;
grant select on MBKPROXY_IKFL.qrtz_triggers to OSDBO_USER;
grant select on MBKPROXY_IKFL.qrtz_simple_triggers to OSDBO_USER;
grant select on MBKPROXY_IKFL.qrtz_cron_triggers to OSDBO_USER;
grant select on  MBKPROXY_IKFL.qrtz_blob_triggers to OSDBO_USER;
grant select on MBKPROXY_IKFL.qrtz_trigger_listeners to OSDBO_USER;
grant select on  MBKPROXY_IKFL.qrtz_calendars to OSDBO_USER;
*/