import rcw, rsd, deprintr;
import "rt_ib_xml.mac";

// ───────────────────────────────────────
// Получение списка вкладов
// ───────────────────────────────────────

/* 
    ───────────────────
      ИСХОДНЫЕ ДАННЫЕ  
    ───────────────────

Элемент сообщения	Тип		Комментарий
──────────────────────────────────────────────────────────────────────────────
request			
├─id			String(32)	Идентификатор запроса в системе  ИКФЛ	
└─getDepositList_q			
  ├─ currencyFlag	Int16		0 - рублевые виды вкладов 
  │					1 - валютные виды вкладов	
  │					Элемент может не передаваться. В этом случае выбираются все виды вкладов.
  └─priority				Приоритет	
    ├─ min		Int		Минимальный 	
    └─ max		Int		Максимальный	


    ───────────────────
          ОТВЕТ
    ───────────────────

Элемент сообщения	Тип	Комментарий	Пояснение
──────────────────────────────────────────────────────────────────────────────
response			
├─parentId		String(32)	Идентификатор запроса в системе  ИКФЛ	Идентификатор запроса ИКФЛ, на который дается ответ
├─id			String(32)	Идентификатор ответа	
└─getDepositList_a			
  └─deposit				Данные по виду вклада	Группа повторяется
    ├─accountTypeId	String(12)	Идентификатор вида вклада	
    ├─accountTypeName	String(40)	Название вида вклада	
    ├─currency		String(3)	Валюта	Если вид вклада валютный, может быть несколько валют. 
    ├─isProlong		Bool		YES - с пролонгацией
    │					NO - без пролонгации	
    ├─NumberProl	Int16		Число сроков пролонгаций	0 - не ограничено
    ├─periodMin				Минимальный период вклада (срок договора)
    │ ├─days		Int		Дней	
    │ ├─months		Int		Месяцев	
    │ └─years		Int		Лет	
    └─periodMax				Максимальный период вклада (срок договора)
      ├─days		Int		Дней	
      ├─months		Int		Месяцев	
      └─years		Int		Лет	
  


 	        
*/


macro GetDepositList( inXml, outXml )

  var nodeAnswer, nodeDeposit, node, nodePeriod;
  var cmd, cmd_currency, rs, rs_currency;

  var currencyFlagXML = inXml.documentElement.selectSingleNode( "//currencyFlag" ),
      minPriorityXML  = inXml.documentElement.selectSingleNode( "//min"          ),
      maxPriorityXML  = inXml.documentElement.selectSingleNode( "//max"          );

  var currencyFlag = null, minPriority = null, maxPriority = null;

  if ( currencyFlagXML )  currencyFlag = currencyFlagXML.text;  end;
  if ( minPriorityXML  )  minPriority  = minPriorityXML.text;   end;
  if ( maxPriorityXML  )  maxPriority  = maxPriorityXML.text;   end;

  
  if( not outXml )
    outXml = CreateXMLObject();
    if( not outXml )   return;   end;
 
    outXml.documentElement = outXml.createNode(1, "response", "");
    // Идентификатор запроса ИКФЛ, на который дается ответ
    node = outXml.documentElement.appendChild( outXml.createNode(1, "parentId", "") ); 
    node.text = ParentId;
    // Идентификатор ответа
    node = outXml.documentElement.appendChild( outXml.createNode(1, "id", "") ); 
    node.text = FormApplicationKey(1);//String(CreateGUID());

    nodeAnswer = outXml.documentElement.appendChild( outXml.createNode(1, "getDepositList_a", "") );
    
    cmd = RsdCommand( "select t_kind, t_Name, t_FormContr, t_NumberProl, t_KindTerm, t_Term, t_Term_Max, t_FlagCur " +
                        "from dsb_dtyp_dbt " +
                       "where t_flagcur = nvl(?, t_flagcur) " +
                         "and t_priorit between nvl(?, t_priorit) and nvl(?, t_priorit) " +
                         "and t_kind not in ( 'Шаблонный', 'Служебный') " );
    cmd.addParam( "FlagCur",     RSDBP_IN );  cmd.value( "FlagCur" )     = currencyFlag;
    cmd.addParam( "minPriority", RSDBP_IN );  cmd.value( "minPriority" ) = minPriority;
    cmd.addParam( "maxPriority", RSDBP_IN );  cmd.value( "maxPriority" ) = maxPriority;
     
    cmd.execute;

    rs = RsdRecordSet( cmd );
    while( rs.moveNext )
      // Определяем валюты для вида вклада
      cmd_currency = RsdCommand(
             "select distinct r.t_code_currency, c.t_short_name " +
               "from dpc_rate_dbt r, dcurrency_dbt c   " +
              "where r.t_objecttype = 1003  " +
                "and r.t_flagcur = ? " +
                "and r.t_referenc = (         " +
                        "select t_rategroup " + 
                          "from (  " +
                               "select t_rategroup " +
                                 "from dpc_alg_dbt " +
                                "where t_flagcur    = ? " +
                                  "and t_referenc   = ? " +
                                  "and t_objecttype = 1003 " +
                                  "and t_begdate   <= ? " +
                                "order by t_begdate desc ) " +
                                "where rownum = 1 ) " +
                "and c.t_code_currency = r.t_code_currency " );
      cmd_currency.addParam( "FlagCur0", RSDBP_IN );  cmd_currency.value( "FlagCur0" ) = rs.value("t_FlagCur");
      cmd_currency.addParam( "FlagCur1", RSDBP_IN );  cmd_currency.value( "FlagCur1" ) = rs.value("t_FlagCur");
      cmd_currency.addParam( "Referenc", RSDBP_IN );  cmd_currency.value( "Referenc" ) = rs.value("t_kind");
      cmd_currency.addParam( "CurDate",  RSDBP_IN );  cmd_currency.value( "CurDate"  ) = date();

      cmd_currency.execute;
      
      rs_currency = RsdRecordSet( cmd_currency );
      while( rs_currency.moveNext)             
        // Данные по виду вклада
        nodeDeposit = nodeAnswer.appendChild( outXML.createNode(1, "deposit", "") );
        // Идентификатор вида вклада
        node = nodeDeposit.appendChild( outXml.createNode(1, "accountTypeId", "") );
        node.text = rs.value("t_kind");
        // Название вида вклада
        node = nodeDeposit.appendChild( outXml.createNode(1, "accountTypeName", "") );
        node.text = rs.value("t_Name");
        // Валюта вклада
        node = nodeDeposit.appendChild( outXml.createNode(1, "currency", "") );
        node.text = rs_currency.value("t_short_name");
        // Пролонгация  
        node = nodeDeposit.appendChild( outXml.createNode(1, "isProlong", "") );
        if ( rs.value("t_FormContr") == PROLDEPCON ) 
          node.text = "YES";
        else 
          node.text = "NO";
        end;                                                                          
        // Число сроков пролонгаций
        node = nodeDeposit.appendChild( outXml.createNode(1, "numberProl", "") );
        node.text = rs.value("t_NumberProl");
        // Минимальный период вклада (срок договора)
        node = nodeDeposit.appendChild( outXML.createNode(1, "periodMin", "") );
        node.text = period_rt2ib( rs.value("t_KindTerm"), rs.value("t_Term") );
        // Максимальный период вклада (срок договора)
        node = nodeDeposit.appendChild( outXML.createNode(1, "periodMax", "") );
        node.text = period_rt2ib( rs.value("t_KindTerm"), rs.value("t_Term_Max") );
       end; // while( rs.currency.moveNext)
     end; // while( rs.moveNext )
  end;

  SetParm(1, outXml);  

end; // GetDepositList( inXml, outXml )

