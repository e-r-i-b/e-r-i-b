<?xml version="1.0" encoding="windows-1251"?><!DOCTYPE hibernate-mapping PUBLIC
		"-//Hibernate/Hibernate Mapping DTD 3.0//EN"
		"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
	<sql-query name="com.rssl.phizic.operations.ext.sbrf.mail.ListClientMailOperation.list">

		<return alias="mail"          class="com.rssl.phizic.business.mail.Mail"/>
        <return alias="recipient"          class="com.rssl.phizic.business.mail.Recipient"/>

 		<![CDATA[
        SELECT
            {mail.*}, {recipient.*}
        FROM
            RECIPIENTS recipient
        JOIN
            MAIL mail ON recipient.MAIL_ID = mail.ID
        AND
            recipient.RECIPIENT_ID = :extra_recipientId
        WHERE (:extra_subject IS NULL OR :extra_subject = '' OR upper(mail.SUBJECT) like upper(:extra_like_subject))
            AND mail.IS_SHOW = '1'
            AND mail.DIRECTION = 'CLIENT'
            AND recipient.DELETED = '0'
            AND (:extra_fromDate IS NULL OR mail.CREATION_DATE >= :extra_fromDate)
            AND (:extra_toDate IS NULL OR mail.CREATION_DATE < :extra_toDate)
            AND ( :extra_num IS NULL OR :extra_num = '' OR mail.NUM = :extra_num)
            AND (:extra_state IS NULL OR :extra_state = '' OR recipient.STATE = :extra_state)
            AND (mail.STATE != 'EMPLOYEE_DRAFT')
            AND (:extra_isAttach IS NULL OR :extra_isAttach = CASE
                                                                 WHEN mail.ATTACH IS NOT NULL THEN 'on'
                                                             END)
        ORDER BY mail.CREATION_DATE DESC
      ]]>
	</sql-query>

	<sql-query name="com.rssl.phizic.operations.ext.sbrf.mail.ListClientMailOperation.sentList">

		<return alias="mail"          class="com.rssl.phizic.business.mail.Mail"/>
		<![CDATA[
        SELECT
            {mail.*}
        FROM
            MAIL mail
        WHERE    ( :extra_fromDate IS NULL OR mail.CREATION_DATE >= :extra_fromDate)
             AND mail.IS_SHOW = '1'
             AND ( :extra_toDate IS NULL OR mail.CREATION_DATE < :extra_toDate)
             AND ( :extra_type IS NULL OR :extra_type = '' OR mail.TYPE = :extra_type)
             AND ( :extra_subject IS NULL OR :extra_subject = '' OR upper(mail.SUBJECT) LIKE upper(:extra_like_subject))
             AND ( :extra_num IS NULL OR :extra_num = '' OR mail.NUM = :extra_num)
             AND (mail.SENDER_ID = :extra_senderId)
             AND mail.DIRECTION = 'ADMIN'
             AND mail.DELETED = '0'
             AND (mail.STATE != 'CLIENT_DRAFT' OR mail.PARENT_ID IS NULL)
             AND mail.STATE != 'TEMPLATE'
             AND (:extra_isAttach IS NULL OR :extra_isAttach = CASE
                                                                 WHEN mail.ATTACH IS NOT NULL THEN 'on'
                                                             END)
        ORDER BY mail.CREATION_DATE DESC
      ]]>
	</sql-query>

    <sql-query name="com.rssl.phizic.operations.ext.sbrf.mail.ListClientMailOperation.removedList">
        <return-scalar column="recipientState" type="string"/>
        <return alias="mail"          class="com.rssl.phizic.business.mail.Mail"/>

        <![CDATA[
        SELECT
            {mail.*}, recipients.STATE as recipientState
        FROM
            RECIPIENTS recipients
        JOIN
            MAIL mail ON recipients.MAIL_ID = mail.ID 
        AND
            recipients.RECIPIENT_ID = :extra_recipientId
        WHERE (:extra_subject IS NULL OR :extra_subject = '' OR upper(mail.SUBJECT) like upper(:extra_like_subject))
            AND (mail.STATE != 'CLIENT_DRAFT' OR mail.PARENT_ID IS NULL)
            AND mail.IS_SHOW = '1'
            AND recipients.DELETED = '1'
            AND (:extra_fromDate IS NULL OR mail.CREATION_DATE >= :extra_fromDate)
            AND (:extra_toDate IS NULL OR mail.CREATION_DATE < :extra_toDate)
            AND ( :extra_num IS NULL OR :extra_num = '' OR mail.NUM = :extra_num)
            AND (:extra_mailType IS NULL OR :extra_mailType = '' OR mail.DIRECTION = :extra_mailType)
            AND (:extra_isAttach IS NULL OR :extra_isAttach = CASE
                                                                 WHEN mail.ATTACH IS NOT NULL THEN 'on'
                                                             END)

        UNION ALL

        SELECT
            {mail.*},
            mail.DIRECTION as recipientState
        FROM
            MAIL mail
        WHERE    ( :extra_fromDate IS NULL OR mail.CREATION_DATE >= :extra_fromDate)
             AND (mail.STATE != 'CLIENT_DRAFT' OR mail.PARENT_ID IS NULL)
             AND mail.IS_SHOW = '1'
             AND ( :extra_toDate IS NULL OR mail.CREATION_DATE < :extra_toDate)
             AND ( :extra_subject IS NULL OR :extra_subject = '' OR upper(mail.SUBJECT) LIKE upper(:extra_like_subject))
             AND (mail.SENDER_ID = :extra_senderId)
             AND ( :extra_num IS NULL OR :extra_num = '' OR mail.NUM = :extra_num)
             AND (:extra_mailType IS NULL OR :extra_mailType = '' OR mail.DIRECTION = :extra_mailType)
             AND mail.DELETED = '1'
             AND (:extra_isAttach IS NULL OR :extra_isAttach = CASE
                                                                  WHEN mail.ATTACH IS NOT NULL THEN 'on'
                                                             END)
        ]]>

    </sql-query>
</hibernate-mapping>