// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.wsgate.fund.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.server.StreamingHandlerState;
import com.sun.xml.rpc.soap.message.InternalSOAPMessage;
import com.sun.xml.rpc.soap.message.SOAPBlockInfo;
import com.sun.xml.rpc.soap.message.SOAPFaultInfo;
import com.sun.xml.rpc.soap.message.SOAPHeaderBlockInfo;
import com.sun.xml.rpc.soap.streaming.SOAPNamespaceConstants;
import com.sun.xml.rpc.soap.streaming.SOAPProtocolViolationException;
import com.sun.xml.rpc.streaming.XMLReader;

import java.lang.reflect.Method;
import javax.xml.namespace.QName;

public class FundMultiNodeService_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public FundMultiNodeService_Tie() throws Exception {
        super(new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeServiceImpl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateFundInfo
     */
    private void invoke___forGenerateFundInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_RequestStruct myFundMultiNodeService___forGenerateFundInfo_RequestStruct = null;
        Object myFundMultiNodeService___forGenerateFundInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService___forGenerateFundInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService___forGenerateFundInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService___forGenerateFundInfo_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService___forGenerateFundInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_RequestStruct)myFundMultiNodeService___forGenerateFundInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.fund.generated.FundInfo result = 
                ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).__forGenerateFundInfo();
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_ResponseStruct myFundMultiNodeService___forGenerateFundInfo_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myFundMultiNodeService___forGenerateFundInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateFundInfo___forGenerateFundInfoResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService___forGenerateFundInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService___forGenerateFundInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getRequestInfo
     */
    private void invoke_getRequestInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_RequestStruct myFundMultiNodeService_getRequestInfo_RequestStruct = null;
        Object myFundMultiNodeService_getRequestInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService_getRequestInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService_getRequestInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService_getRequestInfo_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService_getRequestInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_RequestStruct)myFundMultiNodeService_getRequestInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.fund.generated.RequestInfo result = 
                ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).getRequestInfo(myFundMultiNodeService_getRequestInfo_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_ResponseStruct myFundMultiNodeService_getRequestInfo_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myFundMultiNodeService_getRequestInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getRequestInfo_getRequestInfoResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService_getRequestInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService_getRequestInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: updateResponseInfo
     */
    private void invoke_updateResponseInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_RequestStruct myFundMultiNodeService_updateResponseInfo_RequestStruct = null;
        Object myFundMultiNodeService_updateResponseInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService_updateResponseInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService_updateResponseInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService_updateResponseInfo_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService_updateResponseInfo_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_RequestStruct)myFundMultiNodeService_updateResponseInfo_RequestStructObj;
        }
        
        try {
            ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).updateResponseInfo(myFundMultiNodeService_updateResponseInfo_RequestStruct.getResponse_1());
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_ResponseStruct myFundMultiNodeService_updateResponseInfo_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_updateResponseInfo_updateResponseInfoResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService_updateResponseInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService_updateResponseInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: closeRequests
     */
    private void invoke_closeRequests(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_RequestStruct myFundMultiNodeService_closeRequests_RequestStruct = null;
        Object myFundMultiNodeService_closeRequests_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService_closeRequests_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService_closeRequests_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService_closeRequests_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService_closeRequests_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_RequestStruct)myFundMultiNodeService_closeRequests_RequestStructObj;
        }
        
        try {
            ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).closeRequests(myFundMultiNodeService_closeRequests_RequestStruct.getList_1(), myFundMultiNodeService_closeRequests_RequestStruct.getLong_2());
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_ResponseStruct myFundMultiNodeService_closeRequests_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_closeRequests_closeRequestsResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService_closeRequests_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService_closeRequests_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: updateResponseInfoBySum
     */
    private void invoke_updateResponseInfoBySum(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_RequestStruct myFundMultiNodeService_updateResponseInfoBySum_RequestStruct = null;
        Object myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService_updateResponseInfoBySum_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService_updateResponseInfoBySum_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_RequestStruct)myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj;
        }
        
        try {
            ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).updateResponseInfoBySum(myFundMultiNodeService_updateResponseInfoBySum_RequestStruct.getResponse_1(), myFundMultiNodeService_updateResponseInfoBySum_RequestStruct.getBigDecimal_2());
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_ResponseStruct myFundMultiNodeService_updateResponseInfoBySum_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_updateResponseInfoBySum_updateResponseInfoBySumResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService_updateResponseInfoBySum_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService_updateResponseInfoBySum_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: createFundSenderResponses
     */
    private void invoke_createFundSenderResponses(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_RequestStruct myFundMultiNodeService_createFundSenderResponses_RequestStruct = null;
        Object myFundMultiNodeService_createFundSenderResponses_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myFundMultiNodeService_createFundSenderResponses_RequestStructObj instanceof SOAPDeserializationState) {
            myFundMultiNodeService_createFundSenderResponses_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_RequestStruct)((SOAPDeserializationState)myFundMultiNodeService_createFundSenderResponses_RequestStructObj).getInstance();
        } else {
            myFundMultiNodeService_createFundSenderResponses_RequestStruct = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_RequestStruct)myFundMultiNodeService_createFundSenderResponses_RequestStructObj;
        }
        
        try {
            java.util.List result = 
                ((com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService) getTarget()).createFundSenderResponses(myFundMultiNodeService_createFundSenderResponses_RequestStruct.getList_1(), myFundMultiNodeService_createFundSenderResponses_RequestStruct.getLong_2());
            com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_ResponseStruct myFundMultiNodeService_createFundSenderResponses_ResponseStruct =
                new com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myFundMultiNodeService_createFundSenderResponses_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_createFundSenderResponses_createFundSenderResponsesResponse_QNAME);
            bodyBlock.setValue(myFundMultiNodeService_createFundSenderResponses_ResponseStruct);
            bodyBlock.setSerializer(ns1_myFundMultiNodeService_createFundSenderResponses_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1___forGenerateFundInfo___forGenerateFundInfo_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateFundInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getRequestInfo_getRequestInfo_QNAME)) {
            state.getRequest().setOperationCode(getRequestInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_updateResponseInfo_updateResponseInfo_QNAME)) {
            state.getRequest().setOperationCode(updateResponseInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_closeRequests_closeRequests_QNAME)) {
            state.getRequest().setOperationCode(closeRequests_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_updateResponseInfoBySum_updateResponseInfoBySum_QNAME)) {
            state.getRequest().setOperationCode(updateResponseInfoBySum_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_createFundSenderResponses_createFundSenderResponses_QNAME)) {
            state.getRequest().setOperationCode(createFundSenderResponses_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case __forGenerateFundInfo_OPCODE:
                deserialize___forGenerateFundInfo(bodyReader, deserializationContext, state);
                break;
            case getRequestInfo_OPCODE:
                deserialize_getRequestInfo(bodyReader, deserializationContext, state);
                break;
            case updateResponseInfo_OPCODE:
                deserialize_updateResponseInfo(bodyReader, deserializationContext, state);
                break;
            case closeRequests_OPCODE:
                deserialize_closeRequests(bodyReader, deserializationContext, state);
                break;
            case updateResponseInfoBySum_OPCODE:
                deserialize_updateResponseInfoBySum(bodyReader, deserializationContext, state);
                break;
            case createFundSenderResponses_OPCODE:
                deserialize_createFundSenderResponses(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the __forGenerateFundInfo operation.
     */
    private void deserialize___forGenerateFundInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService___forGenerateFundInfo_RequestStructObj =
            ns1_myFundMultiNodeService___forGenerateFundInfo_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateFundInfo___forGenerateFundInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateFundInfo___forGenerateFundInfo_QNAME);
        bodyBlock.setValue(myFundMultiNodeService___forGenerateFundInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getRequestInfo operation.
     */
    private void deserialize_getRequestInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService_getRequestInfo_RequestStructObj =
            ns1_myFundMultiNodeService_getRequestInfo_RequestStruct_SOAPSerializer.deserialize(ns1_getRequestInfo_getRequestInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getRequestInfo_getRequestInfo_QNAME);
        bodyBlock.setValue(myFundMultiNodeService_getRequestInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the updateResponseInfo operation.
     */
    private void deserialize_updateResponseInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService_updateResponseInfo_RequestStructObj =
            ns1_myFundMultiNodeService_updateResponseInfo_RequestStruct_SOAPSerializer.deserialize(ns1_updateResponseInfo_updateResponseInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_updateResponseInfo_updateResponseInfo_QNAME);
        bodyBlock.setValue(myFundMultiNodeService_updateResponseInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the closeRequests operation.
     */
    private void deserialize_closeRequests(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService_closeRequests_RequestStructObj =
            ns1_myFundMultiNodeService_closeRequests_RequestStruct_SOAPSerializer.deserialize(ns1_closeRequests_closeRequests_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_closeRequests_closeRequests_QNAME);
        bodyBlock.setValue(myFundMultiNodeService_closeRequests_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the updateResponseInfoBySum operation.
     */
    private void deserialize_updateResponseInfoBySum(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj =
            ns1_myFundMultiNodeService_updateResponseInfoBySum_RequestStruct_SOAPSerializer.deserialize(ns1_updateResponseInfoBySum_updateResponseInfoBySum_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_updateResponseInfoBySum_updateResponseInfoBySum_QNAME);
        bodyBlock.setValue(myFundMultiNodeService_updateResponseInfoBySum_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the createFundSenderResponses operation.
     */
    private void deserialize_createFundSenderResponses(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myFundMultiNodeService_createFundSenderResponses_RequestStructObj =
            ns1_myFundMultiNodeService_createFundSenderResponses_RequestStruct_SOAPSerializer.deserialize(ns1_createFundSenderResponses_createFundSenderResponses_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_createFundSenderResponses_createFundSenderResponses_QNAME);
        bodyBlock.setValue(myFundMultiNodeService_createFundSenderResponses_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case __forGenerateFundInfo_OPCODE:
                invoke___forGenerateFundInfo(state);
                break;
            case getRequestInfo_OPCODE:
                invoke_getRequestInfo(state);
                break;
            case updateResponseInfo_OPCODE:
                invoke_updateResponseInfo(state);
                break;
            case closeRequests_OPCODE:
                invoke_closeRequests(state);
                break;
            case updateResponseInfoBySum_OPCODE:
                invoke_updateResponseInfoBySum(state);
                break;
            case createFundSenderResponses_OPCODE:
                invoke_createFundSenderResponses(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1___forGenerateFundInfo___forGenerateFundInfo_QNAME)) {
            return __forGenerateFundInfo_OPCODE;
        }
        if (name.equals(ns1_getRequestInfo_getRequestInfo_QNAME)) {
            return getRequestInfo_OPCODE;
        }
        if (name.equals(ns1_updateResponseInfo_updateResponseInfo_QNAME)) {
            return updateResponseInfo_OPCODE;
        }
        if (name.equals(ns1_closeRequests_closeRequests_QNAME)) {
            return closeRequests_OPCODE;
        }
        if (name.equals(ns1_updateResponseInfoBySum_updateResponseInfoBySum_QNAME)) {
            return updateResponseInfoBySum_OPCODE;
        }
        if (name.equals(ns1_createFundSenderResponses_createFundSenderResponses_QNAME)) {
            return createFundSenderResponses_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case __forGenerateFundInfo_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("__forGenerateFundInfo", carray);
                }
                break;
            
            case getRequestInfo_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("getRequestInfo", carray);
                }
                break;
            
            case updateResponseInfo_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.wsgate.fund.generated.Response.class };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("updateResponseInfo", carray);
                }
                break;
            
            case closeRequests_OPCODE:
                {
                    Class[] carray = { java.util.List.class,java.lang.Long.class };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("closeRequests", carray);
                }
                break;
            
            case updateResponseInfoBySum_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.wsgate.fund.generated.Response.class,java.math.BigDecimal.class };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("updateResponseInfoBySum", carray);
                }
                break;
            
            case createFundSenderResponses_OPCODE:
                {
                    Class[] carray = { java.util.List.class,java.lang.Long.class };
                    theMethod = (com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService.class).getMethod("createFundSenderResponses", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[6];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 6 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myFundMultiNodeService_createFundSenderResponses_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_ResponseStruct.class, ns1_createFundSenderResponsesResponse_TYPE_QNAME);
        ns1_myFundMultiNodeService___forGenerateFundInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_RequestStruct.class, ns1___forGenerateFundInfo_TYPE_QNAME);
        ns1_myFundMultiNodeService_getRequestInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_RequestStruct.class, ns1_getRequestInfo_TYPE_QNAME);
        ns1_myFundMultiNodeService_updateResponseInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_RequestStruct.class, ns1_updateResponseInfo_TYPE_QNAME);
        ns1_myFundMultiNodeService_closeRequests_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_RequestStruct.class, ns1_closeRequests_TYPE_QNAME);
        ns1_myFundMultiNodeService_updateResponseInfoBySum_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_RequestStruct.class, ns1_updateResponseInfoBySum_TYPE_QNAME);
        ns1_myFundMultiNodeService_closeRequests_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_closeRequests_ResponseStruct.class, ns1_closeRequestsResponse_TYPE_QNAME);
        ns1_myFundMultiNodeService_updateResponseInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfo_ResponseStruct.class, ns1_updateResponseInfoResponse_TYPE_QNAME);
        ns1_myFundMultiNodeService_getRequestInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_getRequestInfo_ResponseStruct.class, ns1_getRequestInfoResponse_TYPE_QNAME);
        ns1_myFundMultiNodeService_updateResponseInfoBySum_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_updateResponseInfoBySum_ResponseStruct.class, ns1_updateResponseInfoBySumResponse_TYPE_QNAME);
        ns1_myFundMultiNodeService_createFundSenderResponses_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService_createFundSenderResponses_RequestStruct.class, ns1_createFundSenderResponses_TYPE_QNAME);
        ns1_myFundMultiNodeService___forGenerateFundInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.fund.generated.FundMultiNodeService___forGenerateFundInfo_ResponseStruct.class, ns1___forGenerateFundInfoResponse_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://generated.fund.wsgate.phizic.rssl.com", "FundMultiNodeServicePort");
    private static final int __forGenerateFundInfo_OPCODE = 0;
    private static final int getRequestInfo_OPCODE = 1;
    private static final int updateResponseInfo_OPCODE = 2;
    private static final int closeRequests_OPCODE = 3;
    private static final int updateResponseInfoBySum_OPCODE = 4;
    private static final int createFundSenderResponses_OPCODE = 5;
    private static final javax.xml.namespace.QName ns1___forGenerateFundInfo___forGenerateFundInfo_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "__forGenerateFundInfo");
    private static final javax.xml.namespace.QName ns1___forGenerateFundInfo_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "__forGenerateFundInfo");
    private CombinedSerializer ns1_myFundMultiNodeService___forGenerateFundInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateFundInfo___forGenerateFundInfoResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "__forGenerateFundInfoResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateFundInfoResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "__forGenerateFundInfoResponse");
    private CombinedSerializer ns1_myFundMultiNodeService___forGenerateFundInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getRequestInfo_getRequestInfo_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "getRequestInfo");
    private static final javax.xml.namespace.QName ns1_getRequestInfo_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "getRequestInfo");
    private CombinedSerializer ns1_myFundMultiNodeService_getRequestInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getRequestInfo_getRequestInfoResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "getRequestInfoResponse");
    private static final javax.xml.namespace.QName ns1_getRequestInfoResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "getRequestInfoResponse");
    private CombinedSerializer ns1_myFundMultiNodeService_getRequestInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_updateResponseInfo_updateResponseInfo_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfo");
    private static final javax.xml.namespace.QName ns1_updateResponseInfo_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfo");
    private CombinedSerializer ns1_myFundMultiNodeService_updateResponseInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_updateResponseInfo_updateResponseInfoResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoResponse");
    private static final javax.xml.namespace.QName ns1_updateResponseInfoResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoResponse");
    private CombinedSerializer ns1_myFundMultiNodeService_updateResponseInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_closeRequests_closeRequests_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "closeRequests");
    private static final javax.xml.namespace.QName ns1_closeRequests_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "closeRequests");
    private CombinedSerializer ns1_myFundMultiNodeService_closeRequests_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_closeRequests_closeRequestsResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "closeRequestsResponse");
    private static final javax.xml.namespace.QName ns1_closeRequestsResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "closeRequestsResponse");
    private CombinedSerializer ns1_myFundMultiNodeService_closeRequests_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_updateResponseInfoBySum_updateResponseInfoBySum_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoBySum");
    private static final javax.xml.namespace.QName ns1_updateResponseInfoBySum_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoBySum");
    private CombinedSerializer ns1_myFundMultiNodeService_updateResponseInfoBySum_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_updateResponseInfoBySum_updateResponseInfoBySumResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoBySumResponse");
    private static final javax.xml.namespace.QName ns1_updateResponseInfoBySumResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "updateResponseInfoBySumResponse");
    private CombinedSerializer ns1_myFundMultiNodeService_updateResponseInfoBySum_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_createFundSenderResponses_createFundSenderResponses_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "createFundSenderResponses");
    private static final javax.xml.namespace.QName ns1_createFundSenderResponses_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "createFundSenderResponses");
    private CombinedSerializer ns1_myFundMultiNodeService_createFundSenderResponses_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_createFundSenderResponses_createFundSenderResponsesResponse_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "createFundSenderResponsesResponse");
    private static final javax.xml.namespace.QName ns1_createFundSenderResponsesResponse_TYPE_QNAME = new QName("http://generated.fund.wsgate.phizic.rssl.com", "createFundSenderResponsesResponse");
    private CombinedSerializer ns1_myFundMultiNodeService_createFundSenderResponses_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.fund.wsgate.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
