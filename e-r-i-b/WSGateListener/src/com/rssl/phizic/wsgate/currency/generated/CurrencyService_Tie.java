// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.wsgate.currency.generated;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class CurrencyService_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public CurrencyService_Tie() throws Exception {
        super(new com.rssl.phizic.wsgate.currency.generated.CurrencyServiceImpl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: findByNumericCode
     */
    private void invoke_findByNumericCode(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_RequestStruct myCurrencyService_findByNumericCode_RequestStruct = null;
        Object myCurrencyService_findByNumericCode_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyService_findByNumericCode_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyService_findByNumericCode_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_RequestStruct)((SOAPDeserializationState)myCurrencyService_findByNumericCode_RequestStructObj).getInstance();
        } else {
            myCurrencyService_findByNumericCode_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_RequestStruct)myCurrencyService_findByNumericCode_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.currency.generated.Currency result = 
                ((com.rssl.phizic.wsgate.currency.generated.CurrencyService) getTarget()).findByNumericCode(myCurrencyService_findByNumericCode_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_ResponseStruct myCurrencyService_findByNumericCode_ResponseStruct =
                new com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyService_findByNumericCode_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findByNumericCode_findByNumericCodeResponse_QNAME);
            bodyBlock.setValue(myCurrencyService_findByNumericCode_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyService_findByNumericCode_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findById
     */
    private void invoke_findById(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_RequestStruct myCurrencyService_findById_RequestStruct = null;
        Object myCurrencyService_findById_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyService_findById_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyService_findById_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_RequestStruct)((SOAPDeserializationState)myCurrencyService_findById_RequestStructObj).getInstance();
        } else {
            myCurrencyService_findById_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_RequestStruct)myCurrencyService_findById_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.currency.generated.Currency result = 
                ((com.rssl.phizic.wsgate.currency.generated.CurrencyService) getTarget()).findById(myCurrencyService_findById_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_ResponseStruct myCurrencyService_findById_ResponseStruct =
                new com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyService_findById_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findById_findByIdResponse_QNAME);
            bodyBlock.setValue(myCurrencyService_findById_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyService_findById_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAll
     */
    private void invoke_getAll(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_RequestStruct myCurrencyService_getAll_RequestStruct = null;
        Object myCurrencyService_getAll_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyService_getAll_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyService_getAll_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_RequestStruct)((SOAPDeserializationState)myCurrencyService_getAll_RequestStructObj).getInstance();
        } else {
            myCurrencyService_getAll_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_RequestStruct)myCurrencyService_getAll_RequestStructObj;
        }
        
        try {
            java.util.List result = 
                ((com.rssl.phizic.wsgate.currency.generated.CurrencyService) getTarget()).getAll();
            com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_ResponseStruct myCurrencyService_getAll_ResponseStruct =
                new com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyService_getAll_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAll_getAllResponse_QNAME);
            bodyBlock.setValue(myCurrencyService_getAll_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyService_getAll_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getNationalCurrency
     */
    private void invoke_getNationalCurrency(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_RequestStruct myCurrencyService_getNationalCurrency_RequestStruct = null;
        Object myCurrencyService_getNationalCurrency_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyService_getNationalCurrency_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyService_getNationalCurrency_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_RequestStruct)((SOAPDeserializationState)myCurrencyService_getNationalCurrency_RequestStructObj).getInstance();
        } else {
            myCurrencyService_getNationalCurrency_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_RequestStruct)myCurrencyService_getNationalCurrency_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.currency.generated.Currency result = 
                ((com.rssl.phizic.wsgate.currency.generated.CurrencyService) getTarget()).getNationalCurrency();
            com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_ResponseStruct myCurrencyService_getNationalCurrency_ResponseStruct =
                new com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyService_getNationalCurrency_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getNationalCurrency_getNationalCurrencyResponse_QNAME);
            bodyBlock.setValue(myCurrencyService_getNationalCurrency_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyService_getNationalCurrency_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findByAlphabeticCode
     */
    private void invoke_findByAlphabeticCode(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_RequestStruct myCurrencyService_findByAlphabeticCode_RequestStruct = null;
        Object myCurrencyService_findByAlphabeticCode_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyService_findByAlphabeticCode_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyService_findByAlphabeticCode_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_RequestStruct)((SOAPDeserializationState)myCurrencyService_findByAlphabeticCode_RequestStructObj).getInstance();
        } else {
            myCurrencyService_findByAlphabeticCode_RequestStruct = (com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_RequestStruct)myCurrencyService_findByAlphabeticCode_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.currency.generated.Currency result = 
                ((com.rssl.phizic.wsgate.currency.generated.CurrencyService) getTarget()).findByAlphabeticCode(myCurrencyService_findByAlphabeticCode_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_ResponseStruct myCurrencyService_findByAlphabeticCode_ResponseStruct =
                new com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyService_findByAlphabeticCode_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findByAlphabeticCode_findByAlphabeticCodeResponse_QNAME);
            bodyBlock.setValue(myCurrencyService_findByAlphabeticCode_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyService_findByAlphabeticCode_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_findByNumericCode_findByNumericCode_QNAME)) {
            state.getRequest().setOperationCode(findByNumericCode_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findById_findById_QNAME)) {
            state.getRequest().setOperationCode(findById_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAll_getAll_QNAME)) {
            state.getRequest().setOperationCode(getAll_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getNationalCurrency_getNationalCurrency_QNAME)) {
            state.getRequest().setOperationCode(getNationalCurrency_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findByAlphabeticCode_findByAlphabeticCode_QNAME)) {
            state.getRequest().setOperationCode(findByAlphabeticCode_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case findByNumericCode_OPCODE:
                deserialize_findByNumericCode(bodyReader, deserializationContext, state);
                break;
            case findById_OPCODE:
                deserialize_findById(bodyReader, deserializationContext, state);
                break;
            case getAll_OPCODE:
                deserialize_getAll(bodyReader, deserializationContext, state);
                break;
            case getNationalCurrency_OPCODE:
                deserialize_getNationalCurrency(bodyReader, deserializationContext, state);
                break;
            case findByAlphabeticCode_OPCODE:
                deserialize_findByAlphabeticCode(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the findByNumericCode operation.
     */
    private void deserialize_findByNumericCode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyService_findByNumericCode_RequestStructObj =
            ns1_myCurrencyService_findByNumericCode_RequestStruct_SOAPSerializer.deserialize(ns1_findByNumericCode_findByNumericCode_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findByNumericCode_findByNumericCode_QNAME);
        bodyBlock.setValue(myCurrencyService_findByNumericCode_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findById operation.
     */
    private void deserialize_findById(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyService_findById_RequestStructObj =
            ns1_myCurrencyService_findById_RequestStruct_SOAPSerializer.deserialize(ns1_findById_findById_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findById_findById_QNAME);
        bodyBlock.setValue(myCurrencyService_findById_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAll operation.
     */
    private void deserialize_getAll(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyService_getAll_RequestStructObj =
            ns1_myCurrencyService_getAll_RequestStruct_SOAPSerializer.deserialize(ns1_getAll_getAll_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAll_getAll_QNAME);
        bodyBlock.setValue(myCurrencyService_getAll_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getNationalCurrency operation.
     */
    private void deserialize_getNationalCurrency(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyService_getNationalCurrency_RequestStructObj =
            ns1_myCurrencyService_getNationalCurrency_RequestStruct_SOAPSerializer.deserialize(ns1_getNationalCurrency_getNationalCurrency_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getNationalCurrency_getNationalCurrency_QNAME);
        bodyBlock.setValue(myCurrencyService_getNationalCurrency_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findByAlphabeticCode operation.
     */
    private void deserialize_findByAlphabeticCode(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyService_findByAlphabeticCode_RequestStructObj =
            ns1_myCurrencyService_findByAlphabeticCode_RequestStruct_SOAPSerializer.deserialize(ns1_findByAlphabeticCode_findByAlphabeticCode_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findByAlphabeticCode_findByAlphabeticCode_QNAME);
        bodyBlock.setValue(myCurrencyService_findByAlphabeticCode_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case findByNumericCode_OPCODE:
                invoke_findByNumericCode(state);
                break;
            case findById_OPCODE:
                invoke_findById(state);
                break;
            case getAll_OPCODE:
                invoke_getAll(state);
                break;
            case getNationalCurrency_OPCODE:
                invoke_getNationalCurrency(state);
                break;
            case findByAlphabeticCode_OPCODE:
                invoke_findByAlphabeticCode(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_findByNumericCode_findByNumericCode_QNAME)) {
            return findByNumericCode_OPCODE;
        }
        if (name.equals(ns1_findById_findById_QNAME)) {
            return findById_OPCODE;
        }
        if (name.equals(ns1_getAll_getAll_QNAME)) {
            return getAll_OPCODE;
        }
        if (name.equals(ns1_getNationalCurrency_getNationalCurrency_QNAME)) {
            return getNationalCurrency_OPCODE;
        }
        if (name.equals(ns1_findByAlphabeticCode_findByAlphabeticCode_QNAME)) {
            return findByAlphabeticCode_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case findByNumericCode_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.currency.generated.CurrencyService.class).getMethod("findByNumericCode", carray);
                }
                break;
            
            case findById_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.currency.generated.CurrencyService.class).getMethod("findById", carray);
                }
                break;
            
            case getAll_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.wsgate.currency.generated.CurrencyService.class).getMethod("getAll", carray);
                }
                break;
            
            case getNationalCurrency_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.wsgate.currency.generated.CurrencyService.class).getMethod("getNationalCurrency", carray);
                }
                break;
            
            case findByAlphabeticCode_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.currency.generated.CurrencyService.class).getMethod("findByAlphabeticCode", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[5];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 5 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myCurrencyService_getNationalCurrency_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_RequestStruct.class, ns1_getNationalCurrency_TYPE_QNAME);
        ns1_myCurrencyService_findByNumericCode_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_RequestStruct.class, ns1_findByNumericCode_TYPE_QNAME);
        ns1_myCurrencyService_getAll_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_RequestStruct.class, ns1_getAll_TYPE_QNAME);
        ns1_myCurrencyService_findById_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_ResponseStruct.class, ns1_findByIdResponse_TYPE_QNAME);
        ns1_myCurrencyService_getNationalCurrency_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_getNationalCurrency_ResponseStruct.class, ns1_getNationalCurrencyResponse_TYPE_QNAME);
        ns1_myCurrencyService_findByNumericCode_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByNumericCode_ResponseStruct.class, ns1_findByNumericCodeResponse_TYPE_QNAME);
        ns1_myCurrencyService_getAll_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_getAll_ResponseStruct.class, ns1_getAllResponse_TYPE_QNAME);
        ns1_myCurrencyService_findByAlphabeticCode_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_RequestStruct.class, ns1_findByAlphabeticCode_TYPE_QNAME);
        ns1_myCurrencyService_findByAlphabeticCode_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findByAlphabeticCode_ResponseStruct.class, ns1_findByAlphabeticCodeResponse_TYPE_QNAME);
        ns1_myCurrencyService_findById_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.currency.generated.CurrencyService_findById_RequestStruct.class, ns1_findById_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://currency.wsgate.phizic.rssl.com", "CurrencyServicePort");
    private static final int findByNumericCode_OPCODE = 0;
    private static final int findById_OPCODE = 1;
    private static final int getAll_OPCODE = 2;
    private static final int getNationalCurrency_OPCODE = 3;
    private static final int findByAlphabeticCode_OPCODE = 4;
    private static final javax.xml.namespace.QName ns1_findByNumericCode_findByNumericCode_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByNumericCode");
    private static final javax.xml.namespace.QName ns1_findByNumericCode_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByNumericCode");
    private CombinedSerializer ns1_myCurrencyService_findByNumericCode_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findByNumericCode_findByNumericCodeResponse_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByNumericCodeResponse");
    private static final javax.xml.namespace.QName ns1_findByNumericCodeResponse_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByNumericCodeResponse");
    private CombinedSerializer ns1_myCurrencyService_findByNumericCode_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findById_findById_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findById");
    private static final javax.xml.namespace.QName ns1_findById_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findById");
    private CombinedSerializer ns1_myCurrencyService_findById_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findById_findByIdResponse_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByIdResponse");
    private static final javax.xml.namespace.QName ns1_findByIdResponse_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByIdResponse");
    private CombinedSerializer ns1_myCurrencyService_findById_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAll_getAll_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getAll");
    private static final javax.xml.namespace.QName ns1_getAll_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getAll");
    private CombinedSerializer ns1_myCurrencyService_getAll_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAll_getAllResponse_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getAllResponse");
    private static final javax.xml.namespace.QName ns1_getAllResponse_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getAllResponse");
    private CombinedSerializer ns1_myCurrencyService_getAll_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getNationalCurrency_getNationalCurrency_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getNationalCurrency");
    private static final javax.xml.namespace.QName ns1_getNationalCurrency_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getNationalCurrency");
    private CombinedSerializer ns1_myCurrencyService_getNationalCurrency_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getNationalCurrency_getNationalCurrencyResponse_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getNationalCurrencyResponse");
    private static final javax.xml.namespace.QName ns1_getNationalCurrencyResponse_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "getNationalCurrencyResponse");
    private CombinedSerializer ns1_myCurrencyService_getNationalCurrency_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findByAlphabeticCode_findByAlphabeticCode_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByAlphabeticCode");
    private static final javax.xml.namespace.QName ns1_findByAlphabeticCode_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByAlphabeticCode");
    private CombinedSerializer ns1_myCurrencyService_findByAlphabeticCode_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findByAlphabeticCode_findByAlphabeticCodeResponse_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByAlphabeticCodeResponse");
    private static final javax.xml.namespace.QName ns1_findByAlphabeticCodeResponse_TYPE_QNAME = new QName("http://currency.wsgate.phizic.rssl.com", "findByAlphabeticCodeResponse");
    private CombinedSerializer ns1_myCurrencyService_findByAlphabeticCode_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://currency.wsgate.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
