// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.wsgate.bankroll.generated;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class BackRefBankrollService_PortType_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public BackRefBankrollService_PortType_Tie() throws Exception {
        super(new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_Impl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: getCardAccount2
     */
    private void invoke_getCardAccount2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_RequestStruct myBackRefBankrollService_PortType_getCardAccount2_RequestStruct = null;
        Object myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_getCardAccount2_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_getCardAccount2_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_RequestStruct)myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.bankroll.generated.Account result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).getCardAccount2(myBackRefBankrollService_PortType_getCardAccount2_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_ResponseStruct myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAccount2_getCardAccount2Response_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardOffice
     */
    private void invoke_getCardOffice(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_RequestStruct myBackRefBankrollService_PortType_getCardOffice_RequestStruct = null;
        Object myBackRefBankrollService_PortType_getCardOffice_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_getCardOffice_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_getCardOffice_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_getCardOffice_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_getCardOffice_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_RequestStruct)myBackRefBankrollService_PortType_getCardOffice_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.bankroll.generated.Office result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).getCardOffice(myBackRefBankrollService_PortType_getCardOffice_RequestStruct.getLong_1(), myBackRefBankrollService_PortType_getCardOffice_RequestStruct.getString_2());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_ResponseStruct myBackRefBankrollService_PortType_getCardOffice_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_getCardOffice_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardOffice_getCardOfficeResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_getCardOffice_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_getCardOffice_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findCardExternalId2
     */
    private void invoke_findCardExternalId2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_RequestStruct myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct = null;
        Object myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_RequestStruct)myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj;
        }
        
        try {
            java.lang.String result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).findCardExternalId2(myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_ResponseStruct myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findCardExternalId2_findCardExternalId2Response_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findAccountExternalId
     */
    private void invoke_findAccountExternalId(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_RequestStruct myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct = null;
        Object myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_RequestStruct)myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj;
        }
        
        try {
            java.lang.String result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).findAccountExternalId(myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct.getString_1());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_ResponseStruct myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findAccountExternalId_findAccountExternalIdResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccountOffice
     */
    private void invoke_getAccountOffice(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_RequestStruct myBackRefBankrollService_PortType_getAccountOffice_RequestStruct = null;
        Object myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_getAccountOffice_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_getAccountOffice_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_RequestStruct)myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.bankroll.generated.Office result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).getAccountOffice(myBackRefBankrollService_PortType_getAccountOffice_RequestStruct.getLong_1(), myBackRefBankrollService_PortType_getAccountOffice_RequestStruct.getString_2());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_ResponseStruct myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountOffice_getAccountOfficeResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getStoredCard
     */
    private void invoke_getStoredCard(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_RequestStruct myBackRefBankrollService_PortType_getStoredCard_RequestStruct = null;
        Object myBackRefBankrollService_PortType_getStoredCard_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_getStoredCard_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_getStoredCard_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_getStoredCard_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_getStoredCard_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_RequestStruct)myBackRefBankrollService_PortType_getStoredCard_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.bankroll.generated.Card result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).getStoredCard(myBackRefBankrollService_PortType_getStoredCard_RequestStruct.getLong_1(), myBackRefBankrollService_PortType_getStoredCard_RequestStruct.getString_2());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_ResponseStruct myBackRefBankrollService_PortType_getStoredCard_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_getStoredCard_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getStoredCard_getStoredCardResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_getStoredCard_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_getStoredCard_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findAccountBusinessOwner
     */
    private void invoke_findAccountBusinessOwner(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct = null;
        Object myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct)myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj;
        }
        
        try {
            java.lang.String result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).findAccountBusinessOwner(myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct.getAccount_1());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findAccountBusinessOwner_findAccountBusinessOwnerResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: findCardExternalId
     */
    private void invoke_findCardExternalId(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_RequestStruct myBackRefBankrollService_PortType_findCardExternalId_RequestStruct = null;
        Object myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_findCardExternalId_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_findCardExternalId_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_RequestStruct)myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj;
        }
        
        try {
            java.lang.String result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).findCardExternalId(myBackRefBankrollService_PortType_findCardExternalId_RequestStruct.getLong_1(), myBackRefBankrollService_PortType_findCardExternalId_RequestStruct.getString_2());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_ResponseStruct myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findCardExternalId_findCardExternalIdResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardAccount
     */
    private void invoke_getCardAccount(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_RequestStruct myBackRefBankrollService_PortType_getCardAccount_RequestStruct = null;
        Object myBackRefBankrollService_PortType_getCardAccount_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBackRefBankrollService_PortType_getCardAccount_RequestStructObj instanceof SOAPDeserializationState) {
            myBackRefBankrollService_PortType_getCardAccount_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_RequestStruct)((SOAPDeserializationState)myBackRefBankrollService_PortType_getCardAccount_RequestStructObj).getInstance();
        } else {
            myBackRefBankrollService_PortType_getCardAccount_RequestStruct = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_RequestStruct)myBackRefBankrollService_PortType_getCardAccount_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.wsgate.bankroll.generated.Account result = 
                ((com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType) getTarget()).getCardAccount(myBackRefBankrollService_PortType_getCardAccount_RequestStruct.getLong_1(), myBackRefBankrollService_PortType_getCardAccount_RequestStruct.getString_2());
            com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_ResponseStruct myBackRefBankrollService_PortType_getCardAccount_ResponseStruct =
                new com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBackRefBankrollService_PortType_getCardAccount_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAccount_getCardAccountResponse_QNAME);
            bodyBlock.setValue(myBackRefBankrollService_PortType_getCardAccount_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBackRefBankrollService_PortType_getCardAccount_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_getCardAccount2_getCardAccount2_QNAME)) {
            state.getRequest().setOperationCode(getCardAccount2_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardOffice_getCardOffice_QNAME)) {
            state.getRequest().setOperationCode(getCardOffice_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findCardExternalId2_findCardExternalId2_QNAME)) {
            state.getRequest().setOperationCode(findCardExternalId2_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findAccountExternalId_findAccountExternalId_QNAME)) {
            state.getRequest().setOperationCode(findAccountExternalId_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccountOffice_getAccountOffice_QNAME)) {
            state.getRequest().setOperationCode(getAccountOffice_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getStoredCard_getStoredCard_QNAME)) {
            state.getRequest().setOperationCode(getStoredCard_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findAccountBusinessOwner_findAccountBusinessOwner_QNAME)) {
            state.getRequest().setOperationCode(findAccountBusinessOwner_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_findCardExternalId_findCardExternalId_QNAME)) {
            state.getRequest().setOperationCode(findCardExternalId_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardAccount_getCardAccount_QNAME)) {
            state.getRequest().setOperationCode(getCardAccount_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case getCardAccount2_OPCODE:
                deserialize_getCardAccount2(bodyReader, deserializationContext, state);
                break;
            case getCardOffice_OPCODE:
                deserialize_getCardOffice(bodyReader, deserializationContext, state);
                break;
            case findCardExternalId2_OPCODE:
                deserialize_findCardExternalId2(bodyReader, deserializationContext, state);
                break;
            case findAccountExternalId_OPCODE:
                deserialize_findAccountExternalId(bodyReader, deserializationContext, state);
                break;
            case getAccountOffice_OPCODE:
                deserialize_getAccountOffice(bodyReader, deserializationContext, state);
                break;
            case getStoredCard_OPCODE:
                deserialize_getStoredCard(bodyReader, deserializationContext, state);
                break;
            case findAccountBusinessOwner_OPCODE:
                deserialize_findAccountBusinessOwner(bodyReader, deserializationContext, state);
                break;
            case findCardExternalId_OPCODE:
                deserialize_findCardExternalId(bodyReader, deserializationContext, state);
                break;
            case getCardAccount_OPCODE:
                deserialize_getCardAccount(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the getCardAccount2 operation.
     */
    private void deserialize_getCardAccount2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_getCardAccount2_RequestStruct_SOAPSerializer.deserialize(ns1_getCardAccount2_getCardAccount2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAccount2_getCardAccount2_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_getCardAccount2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardOffice operation.
     */
    private void deserialize_getCardOffice(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_getCardOffice_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_getCardOffice_RequestStruct_SOAPSerializer.deserialize(ns1_getCardOffice_getCardOffice_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardOffice_getCardOffice_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_getCardOffice_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findCardExternalId2 operation.
     */
    private void deserialize_findCardExternalId2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct_SOAPSerializer.deserialize(ns1_findCardExternalId2_findCardExternalId2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findCardExternalId2_findCardExternalId2_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_findCardExternalId2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findAccountExternalId operation.
     */
    private void deserialize_findAccountExternalId(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct_SOAPSerializer.deserialize(ns1_findAccountExternalId_findAccountExternalId_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findAccountExternalId_findAccountExternalId_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_findAccountExternalId_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountOffice operation.
     */
    private void deserialize_getAccountOffice(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_getAccountOffice_RequestStruct_SOAPSerializer.deserialize(ns1_getAccountOffice_getAccountOffice_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountOffice_getAccountOffice_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_getAccountOffice_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getStoredCard operation.
     */
    private void deserialize_getStoredCard(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_getStoredCard_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_getStoredCard_RequestStruct_SOAPSerializer.deserialize(ns1_getStoredCard_getStoredCard_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getStoredCard_getStoredCard_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_getStoredCard_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findAccountBusinessOwner operation.
     */
    private void deserialize_findAccountBusinessOwner(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct_SOAPSerializer.deserialize(ns1_findAccountBusinessOwner_findAccountBusinessOwner_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findAccountBusinessOwner_findAccountBusinessOwner_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the findCardExternalId operation.
     */
    private void deserialize_findCardExternalId(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_findCardExternalId_RequestStruct_SOAPSerializer.deserialize(ns1_findCardExternalId_findCardExternalId_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_findCardExternalId_findCardExternalId_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_findCardExternalId_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardAccount operation.
     */
    private void deserialize_getCardAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBackRefBankrollService_PortType_getCardAccount_RequestStructObj =
            ns1_myBackRefBankrollService_PortType_getCardAccount_RequestStruct_SOAPSerializer.deserialize(ns1_getCardAccount_getCardAccount_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAccount_getCardAccount_QNAME);
        bodyBlock.setValue(myBackRefBankrollService_PortType_getCardAccount_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case getCardAccount2_OPCODE:
                invoke_getCardAccount2(state);
                break;
            case getCardOffice_OPCODE:
                invoke_getCardOffice(state);
                break;
            case findCardExternalId2_OPCODE:
                invoke_findCardExternalId2(state);
                break;
            case findAccountExternalId_OPCODE:
                invoke_findAccountExternalId(state);
                break;
            case getAccountOffice_OPCODE:
                invoke_getAccountOffice(state);
                break;
            case getStoredCard_OPCODE:
                invoke_getStoredCard(state);
                break;
            case findAccountBusinessOwner_OPCODE:
                invoke_findAccountBusinessOwner(state);
                break;
            case findCardExternalId_OPCODE:
                invoke_findCardExternalId(state);
                break;
            case getCardAccount_OPCODE:
                invoke_getCardAccount(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_getCardAccount2_getCardAccount2_QNAME)) {
            return getCardAccount2_OPCODE;
        }
        if (name.equals(ns1_getCardOffice_getCardOffice_QNAME)) {
            return getCardOffice_OPCODE;
        }
        if (name.equals(ns1_findCardExternalId2_findCardExternalId2_QNAME)) {
            return findCardExternalId2_OPCODE;
        }
        if (name.equals(ns1_findAccountExternalId_findAccountExternalId_QNAME)) {
            return findAccountExternalId_OPCODE;
        }
        if (name.equals(ns1_getAccountOffice_getAccountOffice_QNAME)) {
            return getAccountOffice_OPCODE;
        }
        if (name.equals(ns1_getStoredCard_getStoredCard_QNAME)) {
            return getStoredCard_OPCODE;
        }
        if (name.equals(ns1_findAccountBusinessOwner_findAccountBusinessOwner_QNAME)) {
            return findAccountBusinessOwner_OPCODE;
        }
        if (name.equals(ns1_findCardExternalId_findCardExternalId_QNAME)) {
            return findCardExternalId_OPCODE;
        }
        if (name.equals(ns1_getCardAccount_getCardAccount_QNAME)) {
            return getCardAccount_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case getCardAccount2_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("getCardAccount2", carray);
                }
                break;
            
            case getCardOffice_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("getCardOffice", carray);
                }
                break;
            
            case findCardExternalId2_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("findCardExternalId2", carray);
                }
                break;
            
            case findAccountExternalId_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("findAccountExternalId", carray);
                }
                break;
            
            case getAccountOffice_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("getAccountOffice", carray);
                }
                break;
            
            case getStoredCard_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("getStoredCard", carray);
                }
                break;
            
            case findAccountBusinessOwner_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.wsgate.bankroll.generated.Account.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("findAccountBusinessOwner", carray);
                }
                break;
            
            case findCardExternalId_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("findCardExternalId", carray);
                }
                break;
            
            case getCardAccount_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType.class).getMethod("getCardAccount", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[9];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 9 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myBackRefBankrollService_PortType_getCardOffice_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_ResponseStruct.class, ns1_getCardOfficeResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_ResponseStruct.class, ns1_findAccountExternalIdResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getCardAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_RequestStruct.class, ns1_getCardAccount_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_RequestStruct.class, ns1_findCardExternalId2_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountExternalId_RequestStruct.class, ns1_findAccountExternalId_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findCardExternalId_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_RequestStruct.class, ns1_findCardExternalId_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct.class, ns1_findAccountBusinessOwner_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getStoredCard_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_ResponseStruct.class, ns1_getStoredCardResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getStoredCard_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getStoredCard_RequestStruct.class, ns1_getStoredCard_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId2_ResponseStruct.class, ns1_findCardExternalId2Response_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_ResponseStruct.class, ns1_getAccountOfficeResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getCardAccount2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_RequestStruct.class, ns1_getCardAccount2_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getAccountOffice_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getAccountOffice_RequestStruct.class, ns1_getAccountOffice_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getCardAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount_ResponseStruct.class, ns1_getCardAccountResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findCardExternalId_ResponseStruct.class, ns1_findCardExternalIdResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct.class, ns1_findAccountBusinessOwnerResponse_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getCardOffice_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardOffice_RequestStruct.class, ns1_getCardOffice_TYPE_QNAME);
        ns1_myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.wsgate.bankroll.generated.BackRefBankrollService_PortType_getCardAccount2_ResponseStruct.class, ns1_getCardAccount2Response_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "BackRefBankrollService_PortTypePort");
    private static final int getCardAccount2_OPCODE = 0;
    private static final int getCardOffice_OPCODE = 1;
    private static final int findCardExternalId2_OPCODE = 2;
    private static final int findAccountExternalId_OPCODE = 3;
    private static final int getAccountOffice_OPCODE = 4;
    private static final int getStoredCard_OPCODE = 5;
    private static final int findAccountBusinessOwner_OPCODE = 6;
    private static final int findCardExternalId_OPCODE = 7;
    private static final int getCardAccount_OPCODE = 8;
    private static final javax.xml.namespace.QName ns1_getCardAccount2_getCardAccount2_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount2");
    private static final javax.xml.namespace.QName ns1_getCardAccount2_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount2");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardAccount2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAccount2_getCardAccount2Response_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount2Response");
    private static final javax.xml.namespace.QName ns1_getCardAccount2Response_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount2Response");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardAccount2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardOffice_getCardOffice_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardOffice");
    private static final javax.xml.namespace.QName ns1_getCardOffice_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardOffice");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardOffice_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardOffice_getCardOfficeResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardOfficeResponse");
    private static final javax.xml.namespace.QName ns1_getCardOfficeResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardOfficeResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardOffice_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findCardExternalId2_findCardExternalId2_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId2");
    private static final javax.xml.namespace.QName ns1_findCardExternalId2_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId2");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findCardExternalId2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findCardExternalId2_findCardExternalId2Response_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId2Response");
    private static final javax.xml.namespace.QName ns1_findCardExternalId2Response_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId2Response");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findCardExternalId2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findAccountExternalId_findAccountExternalId_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountExternalId");
    private static final javax.xml.namespace.QName ns1_findAccountExternalId_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountExternalId");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findAccountExternalId_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findAccountExternalId_findAccountExternalIdResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountExternalIdResponse");
    private static final javax.xml.namespace.QName ns1_findAccountExternalIdResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountExternalIdResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findAccountExternalId_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountOffice_getAccountOffice_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getAccountOffice");
    private static final javax.xml.namespace.QName ns1_getAccountOffice_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getAccountOffice");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getAccountOffice_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountOffice_getAccountOfficeResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getAccountOfficeResponse");
    private static final javax.xml.namespace.QName ns1_getAccountOfficeResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getAccountOfficeResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getAccountOffice_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getStoredCard_getStoredCard_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getStoredCard");
    private static final javax.xml.namespace.QName ns1_getStoredCard_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getStoredCard");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getStoredCard_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getStoredCard_getStoredCardResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getStoredCardResponse");
    private static final javax.xml.namespace.QName ns1_getStoredCardResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getStoredCardResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getStoredCard_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findAccountBusinessOwner_findAccountBusinessOwner_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountBusinessOwner");
    private static final javax.xml.namespace.QName ns1_findAccountBusinessOwner_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountBusinessOwner");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findAccountBusinessOwner_findAccountBusinessOwnerResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountBusinessOwnerResponse");
    private static final javax.xml.namespace.QName ns1_findAccountBusinessOwnerResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findAccountBusinessOwnerResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findAccountBusinessOwner_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findCardExternalId_findCardExternalId_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId");
    private static final javax.xml.namespace.QName ns1_findCardExternalId_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalId");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findCardExternalId_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_findCardExternalId_findCardExternalIdResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalIdResponse");
    private static final javax.xml.namespace.QName ns1_findCardExternalIdResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "findCardExternalIdResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_findCardExternalId_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAccount_getCardAccount_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount");
    private static final javax.xml.namespace.QName ns1_getCardAccount_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccount");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAccount_getCardAccountResponse_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccountResponse");
    private static final javax.xml.namespace.QName ns1_getCardAccountResponse_TYPE_QNAME = new QName("http://generated.bankroll.wsgate.phizic.rssl.com", "getCardAccountResponse");
    private CombinedSerializer ns1_myBackRefBankrollService_PortType_getCardAccount_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.bankroll.wsgate.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
