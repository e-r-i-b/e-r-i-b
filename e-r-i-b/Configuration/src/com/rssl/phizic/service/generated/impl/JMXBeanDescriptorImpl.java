//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.03.11 at 03:31:17 PM MSK 
//


package com.rssl.phizic.service.generated.impl;

public class JMXBeanDescriptorImpl implements com.rssl.phizic.service.generated.JMXBeanDescriptor, com.sun.xml.bind.JAXBObject, com.rssl.phizic.service.generated.impl.runtime.UnmarshallableObject, com.rssl.phizic.service.generated.impl.runtime.XMLSerializable, com.rssl.phizic.service.generated.impl.runtime.ValidatableObject
{

    protected java.lang.String _ReaderInterfaceClassName;
    protected java.lang.String _InterfaceClassName;
    protected java.lang.String _Description;
    protected boolean has_NeedRegister;
    protected boolean _NeedRegister;
    protected java.lang.String _ReaderClassName;
    protected java.lang.String _ClassName;
    protected java.lang.String _ReaderParam;
    public final static java.lang.Class version = (com.rssl.phizic.service.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.rssl.phizic.service.generated.JMXBeanDescriptor.class);
    }

    public java.lang.String getReaderInterfaceClassName() {
        return _ReaderInterfaceClassName;
    }

    public void setReaderInterfaceClassName(java.lang.String value) {
        _ReaderInterfaceClassName = value;
    }

    public java.lang.String getInterfaceClassName() {
        return _InterfaceClassName;
    }

    public void setInterfaceClassName(java.lang.String value) {
        _InterfaceClassName = value;
    }

    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    public boolean isNeedRegister() {
        return _NeedRegister;
    }

    public void setNeedRegister(boolean value) {
        _NeedRegister = value;
        has_NeedRegister = true;
    }

    public java.lang.String getReaderClassName() {
        return _ReaderClassName;
    }

    public void setReaderClassName(java.lang.String value) {
        _ReaderClassName = value;
    }

    public java.lang.String getClassName() {
        return _ClassName;
    }

    public void setClassName(java.lang.String value) {
        _ClassName = value;
    }

    public java.lang.String getReaderParam() {
        return _ReaderParam;
    }

    public void setReaderParam(java.lang.String value) {
        _ReaderParam = value;
    }

    public com.rssl.phizic.service.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rssl.phizic.service.generated.impl.runtime.UnmarshallingContext context) {
        return new com.rssl.phizic.service.generated.impl.JMXBeanDescriptorImpl.Unmarshaller(context);
    }

    public void serializeBody(com.rssl.phizic.service.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_NeedRegister) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NeedRegister"));
        }
    }

    public void serializeAttributes(com.rssl.phizic.service.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_NeedRegister) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NeedRegister"));
        }
        context.startAttribute("", "className");
        try {
            context.text(((java.lang.String) _ClassName), "ClassName");
        } catch (java.lang.Exception e) {
            com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Description!= null) {
            context.startAttribute("", "description");
            try {
                context.text(((java.lang.String) _Description), "Description");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_InterfaceClassName!= null) {
            context.startAttribute("", "interfaceClassName");
            try {
                context.text(((java.lang.String) _InterfaceClassName), "InterfaceClassName");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "needRegister");
        try {
            context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _NeedRegister)), "NeedRegister");
        } catch (java.lang.Exception e) {
            com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_ReaderClassName!= null) {
            context.startAttribute("", "readerClassName");
            try {
                context.text(((java.lang.String) _ReaderClassName), "ReaderClassName");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ReaderInterfaceClassName!= null) {
            context.startAttribute("", "readerInterfaceClassName");
            try {
                context.text(((java.lang.String) _ReaderInterfaceClassName), "ReaderInterfaceClassName");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_ReaderParam!= null) {
            context.startAttribute("", "readerParam");
            try {
                context.text(((java.lang.String) _ReaderParam), "ReaderParam");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.service.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.rssl.phizic.service.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (!has_NeedRegister) {
            context.reportError(com.sun.xml.bind.serializer.Util.createMissingObjectError(this, "NeedRegister"));
        }
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.rssl.phizic.service.generated.JMXBeanDescriptor.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xq\u0000~\u0000\u0003ppsr\u0000\u001bcom."
+"sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datat"
+"ype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/Strin"
+"gPair;xq\u0000~\u0000\u0003ppsr\u0000\'com.sun.msv.datatype.xsd.FinalComponent\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\nfinalValuexr\u0000\u001ecom.sun.msv.datatype.xsd.Proxy\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bbaseTypet\u0000)Lcom/sun/msv/datatype/xsd/XSDatatypeImpl"
+";xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fna"
+"mespaceUrit\u0000\u0012Ljava/lang/String;L\u0000\btypeNameq\u0000~\u0000\u0016L\u0000\nwhiteSpace"
+"t\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000\u0000t\u0000\tJav"
+"aClasssr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Prese"
+"rve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcess"
+"or\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.datatype.xsd.BuiltinAto"
+"micType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0015t\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006string"
+"q\u0000~\u0000\u001d\u0001\u0000\u0000\u0000\u0000sr\u00000com.sun.msv.grammar.Expression$NullSetExpressi"
+"on\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0"
+"\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L\u0000\fnamespaceURIq\u0000~\u0000\u0016xpq\u0000~\u0000#q\u0000~\u0000\u0019sr\u0000#com."
+"sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0016L"
+"\u0000\fnamespaceURIq\u0000~\u0000\u0016xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xpt\u0000\tclassNameq\u0000~\u0000\u0019sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bsr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psq\u0000~\u0000\u000eppq\u0000~\u0000!q\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000#q\u0000~\u0000\"sq\u0000~\u0000(t\u0000\u000bdescriptionq\u0000"
+"~\u0000\u0019sr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000/\u0001q\u0000~\u00006sq\u0000~\u0000,ppsq\u0000~\u0000\u000bq\u0000~\u00000pq\u0000~\u0000\u0011sq\u0000~\u0000(t\u0000\u0012in"
+"terfaceClassNameq\u0000~\u0000\u0019q\u0000~\u00006sq\u0000~\u0000\u000bppsq\u0000~\u0000\u000eppsr\u0000$com.sun.msv.da"
+"tatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001fq\u0000~\u0000\"t\u0000\u0007booleansr\u00005co"
+"m.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u001cq\u0000~\u0000%sq\u0000~\u0000&q\u0000~\u0000@q\u0000~\u0000\"sq\u0000~\u0000(t\u0000\fneedRegisterq\u0000~\u0000\u0019sq\u0000~\u0000"
+",ppsq\u0000~\u0000\u000bq\u0000~\u00000pq\u0000~\u0000\u0011sq\u0000~\u0000(t\u0000\u000freaderClassNameq\u0000~\u0000\u0019q\u0000~\u00006sq\u0000~\u0000,"
+"ppsq\u0000~\u0000\u000bq\u0000~\u00000pq\u0000~\u0000\u0011sq\u0000~\u0000(t\u0000\u0018readerInterfaceClassNameq\u0000~\u0000\u0019q\u0000~"
+"\u00006sq\u0000~\u0000,ppsq\u0000~\u0000\u000bq\u0000~\u00000pq\u0000~\u00001sq\u0000~\u0000(t\u0000\u000breaderParamq\u0000~\u0000\u0019q\u0000~\u00006sr\u0000"
+"\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/"
+"Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xpsr\u0000-com.sun"
+".msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\r"
+"streamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/ExpressionPool"
+";xp\u0000\u0000\u0000\u000b\u0001pq\u0000~\u0000\u0006q\u0000~\u0000Jq\u0000~\u0000-q\u0000~\u0000\u0005q\u0000~\u00008q\u0000~\u0000\nq\u0000~\u0000\bq\u0000~\u0000\u0007q\u0000~\u0000\tq\u0000~\u0000Nq"
+"\u0000~\u0000Fx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.rssl.phizic.service.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.rssl.phizic.service.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------");
        }

        protected Unmarshaller(com.rssl.phizic.service.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.rssl.phizic.service.generated.impl.JMXBeanDescriptorImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        attIdx = context.getAttribute("", "readerParam");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText1(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "readerClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  21 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "interfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "needRegister");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "readerInterfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText7(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReaderParam = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReaderClassName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ClassName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _InterfaceClassName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _NeedRegister = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_NeedRegister = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _ReaderInterfaceClassName = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        attIdx = context.getAttribute("", "readerParam");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText1(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "readerClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  21 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "interfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "needRegister");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "readerInterfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText7(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        if (("readerParam" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        if (("readerClassName" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  21 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("interfaceClassName" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        if (("needRegister" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  15 :
                        if (("readerInterfaceClassName" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        attIdx = context.getAttribute("", "readerParam");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText1(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "readerClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText2(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  21 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  17 :
                        if (("readerInterfaceClassName" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("needRegister" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "className");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText3(v);
                            continue outer;
                        }
                        break;
                    case  5 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  6 :
                        attIdx = context.getAttribute("", "interfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText4(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "needRegister");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  2 :
                        if (("className" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "readerInterfaceClassName");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText7(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  20 :
                        if (("readerParam" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  14 :
                        if (("readerClassName" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  8 :
                        if (("interfaceClassName" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  18 :
                            attIdx = context.getAttribute("", "readerParam");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText1(v);
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "readerClassName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText2(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  21 :
                            revertToParentFromText(value);
                            return ;
                        case  19 :
                            state = 20;
                            eatText1(value);
                            return ;
                        case  16 :
                            state = 17;
                            eatText7(value);
                            return ;
                        case  13 :
                            state = 14;
                            eatText2(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "className");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText3(v);
                                continue outer;
                            }
                            break;
                        case  10 :
                            state = 11;
                            eatText5(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText6(value);
                            return ;
                        case  6 :
                            attIdx = context.getAttribute("", "interfaceClassName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText4(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                        case  1 :
                            state = 2;
                            eatText3(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "needRegister");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText6(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  15 :
                            attIdx = context.getAttribute("", "readerInterfaceClassName");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText7(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  7 :
                            state = 8;
                            eatText4(value);
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
