//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.11.18 at 10:52:54 AM MSK 
//


package com.rssl.phizic.business.loans.claims.generated.impl;

public class FieldElementImpl
    extends com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl
    implements com.rssl.phizic.business.loans.claims.generated.FieldElement, com.sun.xml.bind.RIElement, com.sun.xml.bind.JAXBObject, com.rssl.phizic.business.loans.claims.generated.impl.runtime.UnmarshallableObject, com.rssl.phizic.business.loans.claims.generated.impl.runtime.XMLSerializable, com.rssl.phizic.business.loans.claims.generated.impl.runtime.ValidatableObject
{

    public final static java.lang.Class version = (com.rssl.phizic.business.loans.claims.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.rssl.phizic.business.loans.claims.generated.FieldElement.class);
    }

    public java.lang.String ____jaxb_ri____getNamespaceURI() {
        return "";
    }

    public java.lang.String ____jaxb_ri____getLocalName() {
        return "field";
    }

    public com.rssl.phizic.business.loans.claims.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rssl.phizic.business.loans.claims.generated.impl.runtime.UnmarshallingContext context) {
        return new com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.Unmarshaller(context);
    }

    public void serializeBody(com.rssl.phizic.business.loans.claims.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "field");
        super.serializeURIs(context);
        context.endNamespaceDecls();
        super.serializeAttributes(context);
        context.endAttributes();
        super.serializeBody(context);
        context.endElement();
    }

    public void serializeAttributes(com.rssl.phizic.business.loans.claims.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public void serializeURIs(com.rssl.phizic.business.loans.claims.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.rssl.phizic.business.loans.claims.generated.FieldElement.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000"
+"\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv."
+"grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000"
+"\fcontentModelt\u0000 Lcom/sun/msv/grammar/Expression;xr\u0000\u001ecom.sun."
+"msv.grammar.Expression\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Lj"
+"ava/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0003xppp\u0000sr\u0000\u001fcom.sun.msv.gra"
+"mmar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.BinaryExp"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1q\u0000~\u0000\u0003L\u0000\u0004exp2q\u0000~\u0000\u0003xq\u0000~\u0000\u0004ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"q\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000"
+"\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0007pps"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\bppsq\u0000~\u0000\u0000sr\u0000"
+"\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000s"
+"q\u0000~\u0000\u001bppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001cco"
+"m.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0003xq\u0000~\u0000\u0004q\u0000~\u0000\u001fp"
+"sr\u0000 com.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0003L\u0000"
+"\tnameClassq\u0000~\u0000\u0001xq\u0000~\u0000\u0004q\u0000~\u0000\u001fpsr\u00002com.sun.msv.grammar.Expressio"
+"n$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004sq\u0000~\u0000\u001e\u0001q\u0000~\u0000)sr\u0000 com.su"
+"n.msv.grammar.AnyNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar"
+".NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$Ep"
+"silonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004q\u0000~\u0000*q\u0000~\u0000/sr\u0000#com.sun.msv.gr"
+"ammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/St"
+"ring;L\u0000\fnamespaceURIq\u0000~\u00001xq\u0000~\u0000,t\u0000Tcom.rssl.phizic.business.l"
+"oans.claims.generated.FieldDescriptor.ValidatorsDescriptort\u0000"
+"+http://java.sun.com/jaxb/xjc/dummy-elementssq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000"
+"~\u0000\u001fpsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/r"
+"elaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0003L\u0000\u0004namet\u0000\u001dLcom/sun/ms"
+"v/util/StringPair;xq\u0000~\u0000\u0004ppsr\u0000\"com.sun.msv.datatype.xsd.Qname"
+"Type\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.BuiltinAtomicTyp"
+"e\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000"
+"\fnamespaceUriq\u0000~\u00001L\u0000\btypeNameq\u0000~\u00001L\u0000\nwhiteSpacet\u0000.Lcom/sun/m"
+"sv/datatype/xsd/WhiteSpaceProcessor;xpt\u0000 http://www.w3.org/2"
+"001/XMLSchemat\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSpace"
+"Processor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.Wh"
+"iteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expres"
+"sion$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0004ppsr\u0000\u001bcom.sun.msv.uti"
+"l.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u00001L\u0000\fnamespaceURIq\u0000~\u00001"
+"xpq\u0000~\u0000Bq\u0000~\u0000Asq\u0000~\u00000t\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema"
+"-instanceq\u0000~\u0000/sq\u0000~\u00000t\u0000\nvalidatorst\u0000\u0000q\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000\u0000q\u0000~\u0000\u001f"
+"p\u0000sq\u0000~\u0000\u0007ppsq\u0000~\u0000\u0000pp\u0000sq\u0000~\u0000\u001bppsq\u0000~\u0000#q\u0000~\u0000\u001fpsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000)q\u0000~\u0000"
+"-q\u0000~\u0000/sq\u0000~\u00000t\u0000Qcom.rssl.phizic.business.loans.claims.generat"
+"ed.FieldDescriptor.ActionsDescriptorq\u0000~\u00004sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001f"
+"pq\u0000~\u0000:q\u0000~\u0000Jq\u0000~\u0000/sq\u0000~\u00000t\u0000\u0007actionsq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000&ppsq\u0000~\u00007q\u0000~\u0000"
+"\u001fpsr\u0000#com.sun.msv.datatype.xsd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlw"
+"aysValidxq\u0000~\u0000<q\u0000~\u0000At\u0000\u0006stringsr\u00005com.sun.msv.datatype.xsd.Whi"
+"teSpaceProcessor$Preserve\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000D\u0001q\u0000~\u0000Gsq\u0000~\u0000Hq\u0000~\u0000aq"
+"\u0000~\u0000Asq\u0000~\u00000t\u0000\u000bdescriptionq\u0000~\u0000Osq\u0000~\u0000&ppq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0004nameq\u0000~\u0000O"
+"sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\ndictionaryq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001b"
+"ppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0007enabledq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q"
+"\u0000~\u0000\u001fpsq\u0000~\u00007ppsr\u0000$com.sun.msv.datatype.xsd.BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0001\u0002\u0000\u0000xq\u0000~\u0000<q\u0000~\u0000At\u0000\u0007booleanq\u0000~\u0000Eq\u0000~\u0000Gsq\u0000~\u0000Hq\u0000~\u0000wq\u0000~\u0000Asq\u0000~\u00000t\u0000\t"
+"guarantorq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0010guarant"
+"or-initalq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0006hiddenq"
+"\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0004hintq\u0000~\u0000Oq\u0000~\u0000/sq\u0000"
+"~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0006initalq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000"
+"&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u000einput-templateq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q"
+"\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0003keyq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000"
+"~\u00000t\u0000\tmandatoryq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\br"
+"eadonlyq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0004sizeq\u0000~\u0000O"
+"q\u0000~\u0000/sq\u0000~\u0000&ppq\u0000~\u0000^sq\u0000~\u00000t\u0000\u0004typeq\u0000~\u0000Osq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpsq\u0000~"
+"\u00007ppsr\u0000%com.sun.msv.datatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~"
+"\u0000<q\u0000~\u0000At\u0000\ranySimpleTypeq\u0000~\u0000cq\u0000~\u0000Gsq\u0000~\u0000Hq\u0000~\u0000\u00a7q\u0000~\u0000Asq\u0000~\u00000t\u0000\u0005va"
+"lueq\u0000~\u0000Oq\u0000~\u0000/sq\u0000~\u0000\u001bppsq\u0000~\u0000&q\u0000~\u0000\u001fpq\u0000~\u0000:q\u0000~\u0000Jq\u0000~\u0000/sq\u0000~\u00000t\u0000\u0005fie"
+"ldq\u0000~\u0000Osr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\be"
+"xpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$ClosedHash;xps"
+"r\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I"
+"\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/msv/grammar/Expr"
+"essionPool;xp\u0000\u0000\u0000*\u0001pq\u0000~\u0000rq\u0000~\u0000\u007fq\u0000~\u0000\u0097q\u0000~\u0000\u00a2q\u0000~\u0000\u0018q\u0000~\u0000 q\u0000~\u0000Rq\u0000~\u0000\u0083q"
+"\u0000~\u0000\u0013q\u0000~\u0000\u0010q\u0000~\u0000\u000fq\u0000~\u0000\u0015q\u0000~\u0000\u009bq\u0000~\u0000\u0011q\u0000~\u0000\"q\u0000~\u0000Tq\u0000~\u0000\u0012q\u0000~\u0000\u0016q\u0000~\u00005q\u0000~\u0000Yq"
+"\u0000~\u0000\u00abq\u0000~\u0000\fq\u0000~\u0000\u008fq\u0000~\u0000\rq\u0000~\u0000\u008bq\u0000~\u0000jq\u0000~\u0000{q\u0000~\u0000\u0019q\u0000~\u0000\u0087q\u0000~\u0000\u000bq\u0000~\u0000\u0014q\u0000~\u0000\u0017q"
+"\u0000~\u0000\u001cq\u0000~\u0000Pq\u0000~\u0000\tq\u0000~\u0000\nq\u0000~\u0000nq\u0000~\u0000\u000eq\u0000~\u0000%q\u0000~\u0000Uq\u0000~\u0000\u001aq\u0000~\u0000\u0093x"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.rssl.phizic.business.loans.claims.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.rssl.phizic.business.loans.claims.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "----");
        }

        protected Unmarshaller(com.rssl.phizic.business.loans.claims.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "dictionary");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor-inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hidden");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hint");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "input-template");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mandatory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "readonly");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "size");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        if (("field" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 1;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "dictionary");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor-inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hidden");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hint");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "input-template");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mandatory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "readonly");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "size");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  2 :
                        if (("field" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 3;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        if (("dictionary" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("enabled" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("guarantor" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("guarantor-inital" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("hidden" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("hint" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("inital" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("input-template" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("key" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("mandatory" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("readonly" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("size" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        if (("type" == ___local)&&("" == ___uri)) {
                            spawnHandlerFromEnterAttribute((((com.rssl.phizic.business.loans.claims.generated.impl.FieldDescriptorImpl)com.rssl.phizic.business.loans.claims.generated.impl.FieldElementImpl.this).new Unmarshaller(context)), 2, ___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  1 :
                        attIdx = context.getAttribute("", "dictionary");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "enabled");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "guarantor-inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hidden");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "hint");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "inital");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "input-template");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "key");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "mandatory");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "readonly");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "size");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  3 :
                            revertToParentFromText(value);
                            return ;
                        case  1 :
                            attIdx = context.getAttribute("", "dictionary");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "enabled");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "guarantor");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "guarantor-inital");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "hidden");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "hint");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "inital");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "input-template");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "key");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "mandatory");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "readonly");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "size");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

}
