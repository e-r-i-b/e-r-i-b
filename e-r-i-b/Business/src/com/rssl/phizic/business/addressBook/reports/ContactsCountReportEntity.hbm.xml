<?xml version="1.0"?><!DOCTYPE hibernate-mapping PUBLIC
        "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
        "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <class name="com.rssl.phizic.business.addressBook.reports.ContactsCountReportEntity" table="ADDRESS_BOOK_CONTACTS_COUNT">
        <id name="login" type="long" column="LOGIN_ID"/>

        <property name="name"     type="string"   column="FIO"      not-null="true"/>
        <property name="document" type="string"   column="DOCUMENT" not-null="false"/>
        <property name="birthday" type="calendar" column="BIRTHDAY" not-null="false"/>
        <property name="tb"       type="string"   column="TB"       not-null="false"/>
        <property name="count"    type="long"     column="COUNT"    not-null="true"/>
    </class>

    <!-- Вставить запись о количестве контактов в адрессной книге клиента, если для этого клиента её ещё нет -->
    <!-- Опорный объект: I_LOGIN_ID_AB_CONTACTS_COUNT
         Предикаты доступа: логин клиента
                               access("LOGIN_ID"=TO_NUMBER(:EXTRA_LOGINID))
         Кардинальность: 0/1 INDEX UNIQUE SCAN
    -->
    <sql-query name="com.rssl.phizic.business.addressBook.reports.ContactsCountReportEntity.createIfNotFound">
        merge into ADDRESS_BOOK_CONTACTS_COUNT addressBookContactCount using DUAL on (LOGIN_ID = :extra_loginId)
        when not matched then insert (LOGIN_ID, FIO, DOCUMENT, BIRTHDAY, TB, COUNT) values (:extra_loginId, :extra_name, :extra_document, :extra_birthday,:extra_tb,0)
    </sql-query>

</hibernate-mapping>