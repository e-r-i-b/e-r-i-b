<?xml version="1.0"?><!DOCTYPE hibernate-mapping PUBLIC
    "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
    "http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">

<hibernate-mapping>
    <typedef name="StateType" class="com.rssl.phizic.dataaccess.hibernate.EnumType">
		<param name="enumClass">com.rssl.phizic.business.dictionaries.providers.ServiceProviderState</param>
	</typedef>

    <typedef name="AccountType" class="com.rssl.phizic.dataaccess.hibernate.EnumType">
		<param name="enumClass">com.rssl.phizic.business.dictionaries.providers.AccountType</param>
	</typedef>

     <typedef name="AutoSubType" class="com.rssl.phizic.dataaccess.hibernate.EnumType">
		<param name="enumClass">com.rssl.phizic.business.documents.payments.AutoSubType</param>
	</typedef>

    <typedef name="PaymentType" class="com.rssl.phizic.dataaccess.hibernate.EnumType">
		<param name="enumClass">com.rssl.phizic.business.dictionaries.kbk.PaymentType</param>
	</typedef>

    <typedef name="ServiceProviderSubType" class="com.rssl.phizic.dataaccess.hibernate.EnumType">
		<param name="enumClass">com.rssl.phizic.business.dictionaries.providers.ServiceProviderSubType</param>
	</typedef>

    <!--"легкая версия поставщика"-->
    <class name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort" mutable="false">
        <id name="id"                              type="long"        column="ID"/>
        <property name="uuid"                type="string"          column="UUID"  />
        <property name="code"                      type="string"      column="CODE" />
        <!--тип-->
        <property name="kind"                      type="string"      column="KIND"/>
        <!--Описание-->
        <property name="synchKey"                  type="string"      column="EXTERNAL_ID"/>
        <!--Название-->
        <property name="name"                      type="string"      column="NAME"/>
        <property name="nameService"               type="string"      column="NAME_SERVICE"/>
        <property name="description"               type="string"      column="DESCRIPTION"/>
        <!--Картинка-->
        <property name="imageId"                   type="long"        column="IMAGE_ID"/>
        <!--доступен ли автоплатеж-->
        <property name="autoPaymentSupported"      type="boolean"     column="IS_AUTOPAYMENT_SUPPORTED" />
        <property name="autoPaymentSupportedInApi" type="boolean"     column="IS_AUTOPAYMENT_SUPPORTED_API" />
        <property name="autoPaymentSupportedInATM" type="boolean"     column="IS_AUTOPAYMENT_SUPPORTED_ATM" />

	    <property name="availablePaymentsForInternetBank" type="boolean"       column="AVAILABLE_PAYMENTS_FOR_IB"       />
        <property name="availablePaymentsForMApi"         type="boolean"       column="AVAILABLE_PAYMENTS_FOR_M_API"    />
        <property name="availablePaymentsForAtmApi"       type="boolean"       column="AVAILABLE_PAYMENTS_FOR_ATM_API"  />
        <property name="availablePaymentsForSocialApi"       type="boolean"       column="AVAILABLE_PAYMENTS_FOR_S_API" />
        <property name="availablePaymentsForErmb"         type="boolean"       column="AVAILABLE_PAYMENTS_FOR_ERMB"     />
        <property name="versionAPI"          type="integer"     column="VERSION_API" />
        <property name="templateSupported"   type="boolean"     column="IS_TEMPLATE_SUPPORTED"/>
        <property name="mobilebankCode"      type="string"      column="MOBILEBANK_CODE" />
        <property name="commissionMessage"   type="string"          column="COMMISSION_MESSAGE"/>
        <property name="maxComissionAmount"  type="big_decimal" column="MAX_COMISSION_AMOUNT"  />
        <property name="minComissionAmount"  type="big_decimal" column="MIN_COMISSION_AMOUNT"  />
        <property name="comissionRate"       type="big_decimal" column="COMISSION_RATE"        />
        <property name="ground"              type="boolean"     column="IS_GROUND"           />
        <property name="attrDelimiter"       type="string"      column="ATTR_DELIMITER"      />
        <property name="attrValuesDelimiter" type="string"      column="ATTR_VALUES_DELIMITER" />
        <property name="codeService"         type="string"      column="CODE_SERVICE" />
        <property name="subType"                          type="ServiceProviderSubType" column="SUB_TYPE"/>
        <property name="formName"     type="string"     column="FORM_NAME" />
        <property name="creditCardSupported"              type="boolean"       column="IS_CREDIT_CARD_SUPPORTED"/>
        <property name="editPaymentSupported"      type="boolean"     column="IS_EDIT_PAYMENT_SUPPORTED"/>
        <property name="accountType"               type="AccountType" column="ACCOUNT_TYPE" />
        <property name="federal"                   type="boolean"     column="IS_FEDERAL"/>
        <property name="imageHelpId"               type="long"        column="IMAGE_HELP_ID"/>
        <property name="billing"                   type="long"        column="BILLING_ID"/>
        <property name="bankDetails"               type="boolean"     column="IS_BANK_DETAILS"/>
        <property name="state"                     type="StateType"   column="STATE"/>
        <property name="minimumSum" type="big_decimal" column="MIN_SUM_RESTRICTION"/>
        <property name="maximumSum" type="big_decimal" column="MAX_SUM_RESTRICTION"/>
        <property name="transitAccount"      type="string"          column="TRANSIT_ACCOUNT"/>
        <property name="departmentId"        type="long"            column="DEPARTMENT_ID"/>
        <property name="offlineAvailable"    type="boolean"         column="IS_OFFLINE_AVAILABLE"/>
        <property name="INN"                 type="string"          column="INN"/>
        <property name="account"             type="string"          column="ACCOUNT"/>
    </class>

    <class name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShortForATM" mutable="false">
        <id name="id"                              type="long"        column="ID"/>
        <property name="name"                      type="string"      column="NAME"/>
        <property name="description"               type="string"      column="DESCRIPTION"/>
        <property name="imageId"                   type="long"        column="IMAGE_ID"/>
        <property name="autoPaymentSupported"      type="boolean"     column="IS_AUTOPAYMENT_SUPPORTED" />
    </class>

    <class name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase" table="SERVICE_PROVIDERS" polymorphism="explicit">
        <id name="id" type="long" column="ID">
            <generator class="native">
                <param name="sequence">S_SERVICE_PROVIDERS</param>
            </generator>
        </id>                                                                                                       

        <discriminator column="KIND" type="string"/>
        <property name="uuid"                type="string"          column="UUID"               not-null="true"/>
        <property name="synchKey"            type="string"          column="EXTERNAL_ID"        not-null="true"     unique="true"/>
        <property name="code"                type="string"          column="CODE"               not-null="true"/>
        <property name="name"                type="string"          column="NAME"               not-null="true"/>
        <property name="description"         type="string"          column="DESCRIPTION"        not-null="false"/>
        <property name="sortPriority"        type="long"            column="SORT_PRIORITY"      not-null="false"/>
        <property name="tipOfProvider"       type="string"          column="TIP_OF_PROVIDER"    not-null="false" />
        <property name="commissionMessage"   type="string"          column="COMMISSION_MESSAGE" not-null="false"/>
        <property name="INN"                 type="string"          column="INN"                not-null="false"/>
        <property name="KPP"                 type="string"          column="KPP"                not-null="false"/>
        <property name="BIC"                 type="string"          column="BANK_CODE"          not-null="false"/>
        <property name="account"             type="string"          column="ACCOUNT"            not-null="false"/>
        <property name="bankName"            type="string"          column="BANK_NAME"          not-null="false"/>
        <property name="corrAccount"         type="string"          column="CORR_ACCOUNT"       not-null="false"/>
        <property name="NSICode"             type="string"          column="NSI_CODE"           not-null="false"/>
        <property name="transitAccount"      type="string"          column="TRANSIT_ACCOUNT"    not-null="false"/>
        <property name="state"               type="StateType"       column="STATE"              not-null="true"/>
        <property name="bankDetails"         type="boolean"         column="IS_BANK_DETAILS"    not-null="true"/>
        <property name="phoneNumber"         type="string"          column="PHONE_NUMBER"       not-null="false"/>
        <property name="creationDate"        type="calendar"        column="CREATION_DATE"      not-null="true"/>
        <property name="standartTemplate"    type="boolean"         column="STANDART_SMS"       not-null="true"/>
        <property name="templateFormat"      type="string"          column="SMS_FORMAT"         not-null="false"/>
        <property name="templateExample"     type="string"          column="SMS_EXAMPLE"        not-null="false"/>
        <property name="imageId"             type="long"            column="IMAGE_ID"           not-null="false"/>
        <property name="imageHelpId"         type="long"            column="IMAGE_HELP_ID"      not-null="false"/>
        <property name="barSupported"        type="boolean"         column="IS_BAR_SUPPORTED"   not-null="false"/>
        <property name="offlineAvailable"    type="boolean"         column="IS_OFFLINE_AVAILABLE" not-null="true"/>

        <property name="visiblePaymentsForInternetBank" type="boolean"         column="VISIBLE_PAYMENTS_FOR_IB"             not-null="true"/>
        <property name="visiblePaymentsForMApi"         type="boolean"         column="VISIBLE_PAYMENTS_FOR_M_API"          not-null="true"/>
        <property name="visiblePaymentsForAtmApi"       type="boolean"         column="VISIBLE_PAYMENTS_FOR_ATM_API"        not-null="true"/>
        <property name="visiblePaymentsForSocialApi"       type="boolean"         column="VISIBLE_PAYMENTS_FOR_S_API"  not-null="true"/>
	    <property name="availablePaymentsForInternetBank" type="boolean"       column="AVAILABLE_PAYMENTS_FOR_IB"           not-null="true"/>
        <property name="availablePaymentsForMApi"         type="boolean"       column="AVAILABLE_PAYMENTS_FOR_M_API"        not-null="true"/>
        <property name="availablePaymentsForAtmApi"       type="boolean"       column="AVAILABLE_PAYMENTS_FOR_ATM_API"      not-null="true"/>
        <property name="availablePaymentsForSocialApi"       type="boolean"       column="AVAILABLE_PAYMENTS_FOR_S_API" not-null="true"/>
        <property name="availablePaymentsForErmb"         type="boolean"       column="AVAILABLE_PAYMENTS_FOR_ERMB"         not-null="true"/>
        <property name="creditCardSupported"              type="boolean"       column="IS_CREDIT_CARD_SUPPORTED"/>
        <property name="subType"                          type="ServiceProviderSubType" column="SUB_TYPE"/>

        <property name="departmentId" type="long" column="DEPARTMENT_ID" not-null="false" />

        <many-to-one name="groupRisk"        column="GROUP_RISK_ID" class="com.rssl.phizic.business.limits.GroupRisk"		not-null="false" lazy="false" fetch="join"/>

        <list name="fieldDescriptions" table="FIELD_DESCRIPTIONS" cascade="all-delete-orphan" lazy="false" >
           <key column="RECIPIENT_ID" not-null="true"/>
           <list-index column="LIST_INDEX"/>
           <one-to-many class="com.rssl.phizic.business.fields.FieldDescription"/>
       </list>

        <set name="regions" table="SERVICE_PROVIDER_REGIONS" cascade="none" lazy="false">
           <key column="SERVICE_PROVIDER_ID"/>
           <many-to-many column="REGION_ID" class="com.rssl.phizic.business.dictionaries.regions.Region" unique="true" lazy="false"/>
        </set>

        <component name="bank" class="com.rssl.phizic.gate.dictionaries.ResidentBank" insert="false" update="false">
            <property name="BIC" type="string" formula="BANK_CODE"/>
            <property name="account" type="string" formula="CORR_ACCOUNT"/>
            <property name="name" type="string" formula="BANK_NAME"/>
        </component>

        <component name="restrictions" class="com.rssl.phizic.business.dictionaries.providers.SumRestrictions">
            <property name="minimumSum" type="big_decimal" column="MIN_SUM_RESTRICTION"/>
            <property name="maximumSum" type="big_decimal" column="MAX_SUM_RESTRICTION"/>
        </component>

        <subclass name="com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider" 
            discriminator-value="B">

            <property name="maxComissionAmount"  type="big_decimal" column="MAX_COMISSION_AMOUNT"  not-null="false"/>
            <property name="minComissionAmount"  type="big_decimal" column="MIN_COMISSION_AMOUNT"  not-null="false"/>
            <property name="comissionRate"       type="big_decimal" column="COMISSION_RATE"        not-null="false"/>
            <property name="ground"              type="boolean"     column="IS_GROUND"             not-null="true"/>
            <property name="deptAvailable"       type="boolean"     column="IS_DEPT_AVAILABLE"     not-null="true"/>
            <property name="attrDelimiter"       type="string"      column="ATTR_DELIMITER"        not-null="false"/>
            <property name="attrValuesDelimiter" type="string"      column="ATTR_VALUES_DELIMITER" not-null="false"/>
            <property name="popular"             type="boolean"     column="IS_POPULAR"            not-null="true"/>
            <property name="propsOnline"         type="boolean"     column="IS_PROPS_ONLINE"       not-null="true"/>
            <property name="bankomatSupported"   type="boolean"     column="IS_BANKOMAT_SUPPORTED" not-null="true"/>
            <property name="mobilebank"          type="boolean"     column="IS_MOBILEBANK"         not-null="true"/>
            <property name="mobilebankCode"      type="string"      column="MOBILEBANK_CODE"       not-null="false" unique="true"/>
            <property name="federal"             type="boolean"     column="IS_FEDERAL"            not-null="true"/>
            <property name="versionAPI"          type="integer"     column="VERSION_API"           not-null="false"/>
            <property name="autoPaymentSupported" type="boolean"    column="IS_AUTOPAYMENT_SUPPORTED" not-null="true"/>
            <property name="autoPaymentSupportedInApi" type="boolean"    column="IS_AUTOPAYMENT_SUPPORTED_API" not-null="true"/>
            <property name="autoPaymentSupportedInATM" type="boolean"    column="IS_AUTOPAYMENT_SUPPORTED_ATM" not-null="true"/>
            <property name="autoPaymentSupportedInERMB" type="boolean"   column="IS_AUTOPAYMENT_SUPPORTED_ERMB" not-null="true"/>
            <property name="autoPaymentSupportedInSocialApi" type="boolean"   column="IS_AUTOPAYMENT_SUPPORTED_S_API" not-null="true"/>
            <property name="autoPaymentVisible"         type="boolean"   column="VISIBLE_AUTOPAYMENTS_FOR_IB"           not-null="true"/>
            <property name="autoPaymentVisibleInApi"    type="boolean"   column="VISIBLE_AUTOPAYMENTS_FOR_API"        not-null="true"/>
            <property name="autoPaymentVisibleInATM"    type="boolean"   column="VISIBLE_AUTOPAYMENTS_FOR_ATM"      not-null="true"/>
            <property name="autoPaymentVisibleInERMB"   type="boolean"   column="VISIBLE_AUTOPAYMENTS_FOR_ERMB"         not-null="true"/>
            <property name="autoPaymentVisibleInSocialApi"   type="boolean"   column="VISIBLE_AUTOPAYMENTS_FOR_S_API"  not-null="true"/>

            <property name="templateSupported"   type="boolean"     column="IS_TEMPLATE_SUPPORTED" not-null="true"/>
            <property name="planingForDeactivate" type="boolean"     column="PLANING_FOR_DEACTIVATE" not-null="false"/>
            <property name="editPaymentSupported" type="boolean"     column="IS_EDIT_PAYMENT_SUPPORTED" not-null="true"/>

            <property name="codeService"         type="string"      column="CODE_SERVICE"          not-null="false"/>
            <property name="accountType"         type="AccountType" column="ACCOUNT_TYPE"          not-null="false"/>
            <property name="nameService"         type="string"      column="NAME_SERVICE"          not-null="false"/>
            <property name="legalName"           type="string"      column="LEGAL_NAME"            not-null="false"/>
            <property name="alias"               type="string"      column="ALIAS"                 not-null="false"/>
            <property name="nameOnBill"          type="string"      column="NAME_ON_BILL"          not-null="false"/>
            <property name="codeRecipientSBOL"   type="string"      column="CODE_RECIPIENT_SBOL"   not-null="false"/>

            <many-to-one name="billing"          column="BILLING_ID"    class="com.rssl.phizic.business.dictionaries.billing.Billing"  lazy="false"/>

            <map name="autoPaySchemes" table="AUTOPAY_SETTINGS"
                 cascade="all-delete-orphan" lazy="false" batch-size="5">
                <key column="RECIPIENT_ID" not-null="true"/>
                <map-key formula="TYPE" type="AutoSubType"/>
                <one-to-many entity-name="AutoPaySetting"/>
            </map>
        </subclass>

        <subclass name="com.rssl.phizic.business.dictionaries.providers.TaxationServiceProvider"
                    discriminator-value="T">

            <property name="fullPayment"         type="boolean"     column="IS_FULL_PAYMENT"       not-null="true"/>
            <property name="payType"             type="PaymentType" column="PAYMENT_TYPE"          not-null="false"/>

        </subclass>

        <!-- Интернет-магазины -->
        <subclass name="com.rssl.phizic.business.dictionaries.providers.InternetShopsServiceProvider"
                    discriminator-value="I" >

            <property name="url"          type="string"     column="URL"             not-null="false"/>
            <property name="backUrl"      type="string"     column="BACK_URL"        not-null="false"/>
            <property name="afterAction"  type="boolean"    column="AFTER_ACTION"    not-null="true"/>
            <property name="formName"     type="string"     column="FORM_NAME"       not-null="false"/>
            <property name="checkOrder"   type="boolean"    column="CHECK_ORDER"     not-null="true"/>
            <property name="sendChargeOffInfo"   type="boolean"     column="SEND_CHARGE_OFF_INFO"  not-null="true"/>
            <property name="availableMobileCheckout" type="boolean" column="MOBILE_CHECKOUT_AVAILABLE" not-null="true"/>

            <property name="codeService"         type="string"      column="CODE_SERVICE"          not-null="false"/>
            <property name="ground"              type="boolean"     column="IS_GROUND"             not-null="false"/>
            <property name="accountType"         type="AccountType" column="ACCOUNT_TYPE"          not-null="false"/>
            <property name="attrDelimiter"       type="string"      column="ATTR_DELIMITER"        not-null="false"/>
            <property name="attrValuesDelimiter" type="string"      column="ATTR_VALUES_DELIMITER" not-null="false"/>
            <property name="nameService"         type="string"      column="NAME_SERVICE"          not-null="false"/>
            <property name="legalName"           type="string"      column="LEGAL_NAME"            not-null="false"/>
            <property name="alias"               type="string"      column="ALIAS"                 not-null="false"/>
            <property name="nameOnBill"          type="string"      column="NAME_ON_BILL"          not-null="false"/>
            <property name="codeRecipientSBOL"   type="string"      column="CODE_RECIPIENT_SBOL"   not-null="false"/>
            <property name="federal"             type="boolean"     column="IS_FEDERAL"            not-null="true"/>
            <property name="facilitator"         type="boolean"     column="IS_FASILITATOR"        not-null="true"/>

            <many-to-one name="billing"          column="BILLING_ID"    class="com.rssl.phizic.business.dictionaries.billing.Billing"  lazy="false"/>

        </subclass>

        <filter name="provider_filter_by_department"/>
    </class>

    <class name="com.rssl.phizic.gate.longoffer.autopayment.AutoPaySchemeBase" table="AUTOPAY_SETTINGS"  abstract="true" entity-name="AutoPaySetting">

        <id name="id" type="long">
            <generator class="native">
                <param name="sequence">S_AUTOPAY_SETTINGS</param>
            </generator>
        </id>
	    <discriminator column="TYPE" type="string"/>

        <property name="parametersByXml" column="PARAMETERS" not-null="true"/>

        <subclass name="com.rssl.phizic.gate.longoffer.autopayment.AlwaysAutoPayScheme"
                  discriminator-value="ALWAYS"/>
        <subclass name="com.rssl.phizic.gate.longoffer.autopayment.InvoiceAutoPayScheme"
                  discriminator-value="INVOICE"/>
        <subclass name="com.rssl.phizic.gate.longoffer.autopayment.ThresholdAutoPayScheme"
                  discriminator-value="THRESHOLD"/>
    </class>

    <class name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias" table="PROVIDER_SMS_ALIAS">
           <id name="id" type="long" column="ID">
               <generator class="native">
                   <param name="sequence">S_PROVIDER_SMS_ALIAS</param>
               </generator>
           </id>

           <property name="uuid" type="string" column="UUID" not-null="true"/>
           <property name="name" type="string" column="NAME" not-null="true"/>

           <bag name="smsAliaseFields"
                table="PROVIDER_SMS_ALIAS_FIELD"
                cascade="all-delete-orphan"
                lazy="false">

               <key column="PROVIDER_SMS_ALIAS_ID" not-null="true"/>
               <one-to-many class="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAliasField"/>
           </bag>

           <many-to-one name="serviceProvider"
                        class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase"
                        column="SERVICE_PROVIDER_ID"
                        lazy="false"
                        not-null="true"/>
    </class>

    <class name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAliasField" table="PROVIDER_SMS_ALIAS_FIELD">

           <id name="id" type="long" column="ID">
               <generator class="native">
                   <param name="sequence">S_PROVIDER_SMS_ALIAS_FIELD</param>
               </generator>
           </id>

           <property name="value" not-null="false" type="string" column="VALUE"/>
           <property name="editable" not-null="true" type="boolean" column="EDITABLE"/>

           <many-to-one name="field"
                        class="com.rssl.phizic.business.fields.FieldDescription"
                        column="FIELD_DESCRIPTION_ID"
                        not-null="true"
                        fetch="join"
                        lazy="false"/>
    </class>

    <class name="com.rssl.phizic.business.dictionaries.providers.BillingProviderService" table="SERV_PROVIDER_PAYMENT_SERV">
		 <composite-id>
             <key-many-to-one name="serviceProvider" column="SERVICE_PROVIDER_ID" class="com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider"  lazy="false"/>
             <key-many-to-one name="paymentService"  column="PAYMENT_SERVICE_ID"  class="com.rssl.phizic.business.dictionaries.payment.services.PaymentService"            lazy="false"/>
		 </composite-id>
    </class>

    <!--Обертка над поставщиком услуг (без поддтягивания данных из связных таблиц)-->
    <class name="com.rssl.phizic.business.dictionaries.providers.wrappers.ServiceProviderShortcut" mutable="false">
        <id name="id"                                       type="long"/>
        <property name="synchKey"                           type="string"/>
        <property name="kind"                               type="string"/>
        <property name="state"                              type="StateType"/>
        <property name="planingForDeactivate"               type="boolean"/>
        <property name="editPaymentSupported"               type="boolean"/>
        <property name="versionAPI"                         type="integer"/>

        <property name="webPaymentVisibility"               type="boolean"/>
        <property name="webPaymentAvailability"             type="boolean"/>
        <property name="webAutoPaymentVisibility"           type="boolean"/>
        <property name="webAutoPaymentAvailability"         type="boolean"/>

        <property name="MAPIPaymentVisibility"              type="boolean"/>
        <property name="MAPIPaymentAvailability"            type="boolean"/>
        <property name="MAPIAutoPaymentVisibility"          type="boolean"/>
        <property name="MAPIAutoPaymentAvailability"        type="boolean"/>

        <property name="ATMPaymentVisibility"               type="boolean"/>
        <property name="ATMPaymentAvailability"             type="boolean"/>
        <property name="ATMAutoPaymentVisibility"           type="boolean"/>
        <property name="ATMAutoPaymentAvailability"         type="boolean"/>

        <property name="ERMBPaymentAvailability"            type="boolean"/>
        <property name="ERMBAutoPaymentVisibility"          type="boolean"/>
        <property name="ERMBAutoPaymentAvailability"        type="boolean"/>

        <property name="socialPaymentVisibility"            type="boolean"/>
        <property name="socialPaymentAvailability"          type="boolean"/>
        <property name="socialAutoPaymentVisibility"        type="boolean"/>
        <property name="socialAutoPaymentAvailability"      type="boolean"/>
    </class>

    <class name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderForFieldFormulas" mutable="false">
        <id name="id"                                       type="long"         column="ID"/>
        <property name="state"                              type="StateType"    column="STATE"/>
        <property name="nameService"                        type="string"       column="NAME_SERVICE"/>
        <property name="name"                               type="string"       column="NAME"/>
        <property name="INN"                                type="string"       column="INN"/>
        <property name="account"                            type="string"       column="ACCOUNT"/>
        <property name="imageId"                            type="long"         column="IMAGE_ID"/>
        <property name="imageHelpId"                        type="long"         column="IMAGE_HELP_ID"/>
    </class>

    <resultset name="com.rssl.phizic.business.dictionaries.providers.queries.searchInCurrentRegion.resultset">
        <return-scalar column="CATEGORY_ID" type="long"/>         <!--0-->
        <return-scalar column="CATEGORY_NAME" type="string"/>     <!--1-->
        <return-scalar column="GROUP_ID" type="long"/>            <!--2-->
        <return-scalar column="GROUP_NAME" type="string"/>        <!--3-->
        <return-scalar column="SERVICES_ID" type="long"/>         <!--4-->
        <return-scalar column="SERVICES_NAME" type="string"/>     <!--5-->
        <return-scalar column="PROVIDER_ID" type="string"/>       <!--6-->
        <return-scalar column="PROVIDER_NAME" type="string"/>     <!--7-->
        <return-scalar column="IMAGE_ID" type="long"/>            <!--8-->
        <return-scalar column="PROVIDER_KPP" type="string"/>      <!--9-->
        <return-scalar column="REGION_NAME" type="string"/>       <!--10-->
        <return-scalar column="TYPE" type="string"/>              <!--11-->
        <return-scalar column="IS_AUTOPAYMENT_SUPPORTED" type="string"/>              <!--12-->
        <return-scalar column="IS_AUTOPAYMENT_SUPPORTED_API" type="string"/>          <!--13-->
        <return-scalar column="IS_AUTOPAYMENT_SUPPORTED_ATM" type="string"/>          <!--14-->
    </resultset>
     <resultset name="com.rssl.phizic.business.dictionaries.providers.queries.searchOrderByRegion.resultset">
         <return-scalar column="CATEGORY_ID" type="long"/>         <!--0-->
         <return-scalar column="CATEGORY_NAME" type="string"/>     <!--1-->
         <return-scalar column="GROUP_ID" type="long"/>            <!--2-->
         <return-scalar column="GROUP_NAME" type="string"/>        <!--3-->
         <return-scalar column="SERVICES_ID" type="long"/>         <!--4-->
         <return-scalar column="SERVICES_NAME" type="string"/>     <!--5-->
         <return-scalar column="PROVIDER_ID" type="string"/>       <!--6-->
         <return-scalar column="PROVIDER_NAME" type="string"/>     <!--7-->
         <return-scalar column="IMAGE_ID" type="long"/>            <!--8-->
         <return-scalar column="PROVIDER_KPP" type="string"/>      <!--9-->
         <return-scalar column="REGION_NAME" type="string"/>       <!--10-->
         <return-scalar column="TYPE" type="string"/>              <!--11-->
         <return-scalar column="IS_AUTOPAYMENT_SUPPORTED" type="string"/>              <!--12-->
         <return-scalar column="IS_AUTOPAYMENT_SUPPORTED_API" type="string"/>              <!--13-->
         <return-scalar column="IS_AUTOPAYMENT_SUPPORTED_ATM" type="string"/>              <!--14-->
    </resultset>
    <!--получение списка поставщиков по реквизитам в домашнем региоге поставщика-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.queries.searchInCurrentRegion"/>
    <!--получение списка поставщиков по реквизитам-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.queries.searchOrderByRegion"/>

    <query name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias.findProviderByAlias">
        select alias.serviceProvider
        from ServiceProviderSmsAlias as alias
        where alias.name = :name
    </query>

    <query name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias.findAllServiceProvidersWithAlias">
        select alias.serviceProvider
        from ServiceProviderSmsAlias as alias
    </query>

    <query name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias.findAllFieldsByProviderAlias">
        select alias.smsAliaseFields
        from ServiceProviderSmsAlias as alias
        where alias.name = :name
    </query>

    <sql-query name="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias.findAllSortedFieldsByProviderAlias">
        <return alias="smsAliasFields" class="com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAliasField"/>
            <![CDATA[
            select smsAlias.* from PROVIDER_SMS_ALIAS_FIELD smsAlias join FIELD_DESCRIPTIONS field on field.ID = smsAlias.FIELD_DESCRIPTION_ID
               where smsAlias.PROVIDER_SMS_ALIAS_ID = :providerSmsAliasId
               order by field.LIST_INDEX
        ]]>
    </sql-query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getBySynchKey">
        select recipient from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as recipient
		where recipient.synchKey = :synchKey
	</query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getRecipientsList">
        select recipient from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as recipient
		where recipient.billing = :billing
	</query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getRecipientsListByBillingId">
        select count  (recipient.id) from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as recipient
		where recipient.billing.id = :billingId
	</query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findByINN">
        select recipient from com.rssl.phizic.business.dictionaries.providers.TaxationServiceProvider as recipient
		where recipient.INN = :inn
	</query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.removeRecipientFields">
        delete from com.rssl.phizic.business.fields.FieldDescription fields where fields.holderId = :providerId
	</query>
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.removeSmsAliases">
        delete from com.rssl.phizic.business.ermb.provider.ServiceProviderSmsAlias providerAlias where providerAlias.serviceProvider.id = :providerId
	</query>
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.removeProviderServices">
        delete from com.rssl.phizic.business.dictionaries.providers.BillingProviderService provServ where provServ.serviceProvider.id = :extra_providerId
	</query>
    <query name="com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider.getPaymentServiceForServiceProvider">
        select provServ.paymentService from com.rssl.phizic.business.dictionaries.providers.BillingProviderService provServ where provServ.serviceProvider.id = :providerId
	</query>

    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.removeProviderServicesSQL">
        delete from SERV_PROVIDER_PAYMENT_SERV provServ where provServ.SERVICE_PROVIDER_ID = :extra_providerId
	</sql-query>

    <!--получение списка полей активных поставщиков по коду поставщика(множеству услуг)-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getFieldDescriptionsByCodeRecipientSBOL">
        <return alias="field" class="com.rssl.phizic.business.fields.FieldDescription"/>
        <![CDATA[
            SELECT {field.*} FROM SERVICE_PROVIDERS provider
            INNER JOIN FIELD_DESCRIPTIONS field ON provider.ID = field.RECIPIENT_ID
            WHERE provider.STATE IN ('ACTIVE', 'MIGRATION')
              AND provider.CODE_RECIPIENT_SBOL = :codeRecipientSBOL
              AND provider.BILLING_ID = :billingId
            ORDER BY field.LIST_INDEX
    ]]>
    </sql-query>

     <!--
     * Опорный объект: UN_CODE_S_CODE_R_SBOL
	 * Предикаты доступа:    access("THIS_"."CODE_RECIPIENT_SBOL"=:CODE AND
	                                "THIS_"."BILLING_ID"=TO_NUMBER(:BILLING_ID))
	 * Кардинальность: количество поставщиков с одинаковыми CODE_RECIPIENT_SBOL и BILLING_ID-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getProviderAllServices">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort"/>
        <![CDATA[
            SELECT
                providers.id                            ID,
                providers.UUID  UUID,
                providers.CODE                          CODE,
                providers.KIND                          KIND,
                providers.EXTERNAL_ID                   EXTERNAL_ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.DESCRIPTION                   DESCRIPTION,
                providers.image_id                      IMAGE_ID,
                providers.IS_AUTOPAYMENT_SUPPORTED      IS_AUTOPAYMENT_SUPPORTED,
                providers.IS_AUTOPAYMENT_SUPPORTED_API  IS_AUTOPAYMENT_SUPPORTED_API,
                providers.IS_AUTOPAYMENT_SUPPORTED_ATM  IS_AUTOPAYMENT_SUPPORTED_ATM,
                providers.AVAILABLE_PAYMENTS_FOR_IB  AVAILABLE_PAYMENTS_FOR_IB,
                providers.AVAILABLE_PAYMENTS_FOR_M_API  AVAILABLE_PAYMENTS_FOR_M_API,
                providers.AVAILABLE_PAYMENTS_FOR_ATM_API  AVAILABLE_PAYMENTS_FOR_ATM_API,
                providers.AVAILABLE_PAYMENTS_FOR_S_API  AVAILABLE_PAYMENTS_FOR_S_API,
                providers.AVAILABLE_PAYMENTS_FOR_ERMB  AVAILABLE_PAYMENTS_FOR_ERMB,
                providers.VERSION_API  VERSION_API,
                providers.IS_TEMPLATE_SUPPORTED  IS_TEMPLATE_SUPPORTED,
                providers.MOBILEBANK_CODE  MOBILEBANK_CODE,
                providers.COMMISSION_MESSAGE  COMMISSION_MESSAGE,
                providers.MAX_COMISSION_AMOUNT  MAX_COMISSION_AMOUNT,
                providers.MIN_COMISSION_AMOUNT  MIN_COMISSION_AMOUNT,
                providers.COMISSION_RATE  COMISSION_RATE,
                providers.IS_GROUND  IS_GROUND,
                providers.ATTR_DELIMITER  ATTR_DELIMITER,
                providers.ATTR_VALUES_DELIMITER  ATTR_VALUES_DELIMITER,
                providers.CODE_SERVICE  CODE_SERVICE,
                providers.SUB_TYPE  SUB_TYPE,
                providers.FORM_NAME  FORM_NAME,
                providers.IS_CREDIT_CARD_SUPPORTED  IS_CREDIT_CARD_SUPPORTED,
                providers.IS_EDIT_PAYMENT_SUPPORTED     IS_EDIT_PAYMENT_SUPPORTED,
                providers.ACCOUNT_TYPE                  ACCOUNT_TYPE,
                providers.IS_FEDERAL                    IS_FEDERAL,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.BILLING_ID                    BILLING_ID,
                providers.IS_BANK_DETAILS               IS_BANK_DETAILS,
                providers.MIN_SUM_RESTRICTION           MIN_SUM_RESTRICTION,
                providers.MAX_SUM_RESTRICTION           MAX_SUM_RESTRICTION,
                providers.TRANSIT_ACCOUNT                TRANSIT_ACCOUNT,
                providers.DEPARTMENT_ID                  DEPARTMENT_ID,
                providers.IS_OFFLINE_AVAILABLE           IS_OFFLINE_AVAILABLE,
                providers.INN                           INN,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM SERVICE_PROVIDERS providers
            WHERE
                 KIND = 'B' and
                 CODE_RECIPIENT_SBOL = :codeRecipientSBOL and
                 BILLING_ID = :billingId and
                 state in (:state)
            order by SORT_PRIORITY desc, NAME_SERVICE asc
        ]]>
    </sql-query>

    <!--
     * Опорный объект: UN_CODE_S_CODE_R_SBOL
	 * Предикаты доступа:    access("THIS_"."CODE_RECIPIENT_SBOL"=:CODE AND
	                                "THIS_"."BILLING_ID"=TO_NUMBER(:BILLING_ID))
	 * Кардинальность: количество поставщиков с одинаковыми CODE_RECIPIENT_SBOL и BILLING_ID для которых доступны автоплатежи-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getProviderAllServiceSupportAutoPays">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort"/>
        <![CDATA[
            SELECT
                providers.id                            ID,
                providers.UUID  UUID,
                providers.CODE                          CODE,
                providers.KIND                          KIND,
                providers.EXTERNAL_ID                   EXTERNAL_ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.DESCRIPTION                   DESCRIPTION,
                providers.image_id                      IMAGE_ID,
                providers.IS_AUTOPAYMENT_SUPPORTED      IS_AUTOPAYMENT_SUPPORTED,
                providers.IS_AUTOPAYMENT_SUPPORTED_API  IS_AUTOPAYMENT_SUPPORTED_API,
                providers.IS_AUTOPAYMENT_SUPPORTED_ATM  IS_AUTOPAYMENT_SUPPORTED_ATM,
                providers.AVAILABLE_PAYMENTS_FOR_IB  AVAILABLE_PAYMENTS_FOR_IB,
                providers.AVAILABLE_PAYMENTS_FOR_M_API  AVAILABLE_PAYMENTS_FOR_M_API,
                providers.AVAILABLE_PAYMENTS_FOR_ATM_API  AVAILABLE_PAYMENTS_FOR_ATM_API,
                providers.AVAILABLE_PAYMENTS_FOR_S_API  AVAILABLE_PAYMENTS_FOR_S_API,
                providers.AVAILABLE_PAYMENTS_FOR_ERMB  AVAILABLE_PAYMENTS_FOR_ERMB,
                providers.VERSION_API  VERSION_API,
                providers.IS_TEMPLATE_SUPPORTED  IS_TEMPLATE_SUPPORTED,
                providers.MOBILEBANK_CODE  MOBILEBANK_CODE,
                providers.COMMISSION_MESSAGE  COMMISSION_MESSAGE,
                providers.MAX_COMISSION_AMOUNT  MAX_COMISSION_AMOUNT,
                providers.MIN_COMISSION_AMOUNT  MIN_COMISSION_AMOUNT,
                providers.COMISSION_RATE  COMISSION_RATE,
                providers.IS_GROUND  IS_GROUND,
                providers.ATTR_DELIMITER  ATTR_DELIMITER,
                providers.ATTR_VALUES_DELIMITER  ATTR_VALUES_DELIMITER,
                providers.CODE_SERVICE  CODE_SERVICE,
                providers.SUB_TYPE  SUB_TYPE,
                providers.FORM_NAME  FORM_NAME,
                providers.IS_CREDIT_CARD_SUPPORTED  IS_CREDIT_CARD_SUPPORTED,
                providers.IS_EDIT_PAYMENT_SUPPORTED     IS_EDIT_PAYMENT_SUPPORTED,
                providers.ACCOUNT_TYPE                  ACCOUNT_TYPE,
                providers.IS_FEDERAL                    IS_FEDERAL,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.BILLING_ID                    BILLING_ID,
                providers.IS_BANK_DETAILS               IS_BANK_DETAILS,
                providers.MIN_SUM_RESTRICTION           MIN_SUM_RESTRICTION,
                providers.MAX_SUM_RESTRICTION           MAX_SUM_RESTRICTION,
                providers.TRANSIT_ACCOUNT                TRANSIT_ACCOUNT,
                providers.DEPARTMENT_ID                  DEPARTMENT_ID,
                providers.IS_OFFLINE_AVAILABLE           IS_OFFLINE_AVAILABLE,
                providers.INN                           INN,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM SERVICE_PROVIDERS providers
            WHERE
                 KIND = 'B' and
                 CODE_RECIPIENT_SBOL = :codeRecipientSBOL and
                 BILLING_ID = :billingId and
                 state = :state and
                 ACCOUNT_TYPE in (:accountType) and
                 (:autoPaymentSupported = '0' or IS_AUTOPAYMENT_SUPPORTED = '1' )
                 and
                 (:autoPaymentSupportedInATM = '0' or IS_AUTOPAYMENT_SUPPORTED_ATM = '1')
                 and
                 (:autoPaymentSupportedInApi = '0' or IS_AUTOPAYMENT_SUPPORTED_API = '1')
            order by SORT_PRIORITY desc, NAME_SERVICE asc
        ]]>
    </sql-query>


     <!--запрос будет согласован в запросе CHG077569: Переделать получение популярных поставщиков в автоплатежах-->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getAutoPayPromoBlock">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort"/>
        <![CDATA[
            SELECT
                providers.id                            ID,
                providers.UUID  UUID,
                providers.CODE                          CODE,
                providers.KIND                          KIND,
                providers.EXTERNAL_ID                   EXTERNAL_ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.DESCRIPTION                   DESCRIPTION,
                providers.image_id                      IMAGE_ID,
                providers.IS_AUTOPAYMENT_SUPPORTED      IS_AUTOPAYMENT_SUPPORTED,
                providers.IS_AUTOPAYMENT_SUPPORTED_API  IS_AUTOPAYMENT_SUPPORTED_API,
                providers.IS_AUTOPAYMENT_SUPPORTED_ATM  IS_AUTOPAYMENT_SUPPORTED_ATM,
                providers.AVAILABLE_PAYMENTS_FOR_IB  AVAILABLE_PAYMENTS_FOR_IB,
                providers.AVAILABLE_PAYMENTS_FOR_M_API  AVAILABLE_PAYMENTS_FOR_M_API,
                providers.AVAILABLE_PAYMENTS_FOR_ATM_API  AVAILABLE_PAYMENTS_FOR_ATM_API,
                providers.AVAILABLE_PAYMENTS_FOR_S_API  AVAILABLE_PAYMENTS_FOR_S_API,
                providers.AVAILABLE_PAYMENTS_FOR_ERMB  AVAILABLE_PAYMENTS_FOR_ERMB,
                providers.VERSION_API  VERSION_API,
                providers.IS_TEMPLATE_SUPPORTED  IS_TEMPLATE_SUPPORTED,
                providers.MOBILEBANK_CODE  MOBILEBANK_CODE,
                providers.COMMISSION_MESSAGE  COMMISSION_MESSAGE,
                providers.MAX_COMISSION_AMOUNT  MAX_COMISSION_AMOUNT,
                providers.MIN_COMISSION_AMOUNT  MIN_COMISSION_AMOUNT,
                providers.COMISSION_RATE  COMISSION_RATE,
                providers.IS_GROUND  IS_GROUND,
                providers.ATTR_DELIMITER  ATTR_DELIMITER,
                providers.ATTR_VALUES_DELIMITER  ATTR_VALUES_DELIMITER,
                providers.CODE_SERVICE  CODE_SERVICE,
                providers.SUB_TYPE  SUB_TYPE,
                providers.FORM_NAME  FORM_NAME,
                providers.IS_CREDIT_CARD_SUPPORTED  IS_CREDIT_CARD_SUPPORTED,
                providers.IS_EDIT_PAYMENT_SUPPORTED     IS_EDIT_PAYMENT_SUPPORTED,
                providers.ACCOUNT_TYPE                  ACCOUNT_TYPE,
                providers.IS_FEDERAL                    IS_FEDERAL,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.BILLING_ID                    BILLING_ID,
                providers.IS_BANK_DETAILS               IS_BANK_DETAILS,
                providers.MIN_SUM_RESTRICTION           MIN_SUM_RESTRICTION,
                providers.MAX_SUM_RESTRICTION           MAX_SUM_RESTRICTION,
                providers.TRANSIT_ACCOUNT                TRANSIT_ACCOUNT,
                providers.DEPARTMENT_ID                  DEPARTMENT_ID,
                providers.IS_OFFLINE_AVAILABLE           IS_OFFLINE_AVAILABLE,
                providers.INN                           INN,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM SERVICE_PROVIDERS providers JOIN SERVICE_PROVIDER_REGIONS prov_reg ON providers.id = prov_reg.SERVICE_PROVIDER_ID
            WHERE
                prov_reg.region_id = :regionId  AND  prov_reg.SHOW_IN_PROMO_BLOCK = 1
                AND providers.IS_AUTOPAYMENT_SUPPORTED = 1
                AND providers.ACCOUNT_TYPE in ('CARD', 'ALL')
                AND
                (( :isIQWaveAutoPaymentPermit = 1 AND SUBSTR(providers.EXTERNAL_ID, INSTR(providers.EXTERNAL_ID, '|', -1) + 1) = :IQWaveUUID)
                OR ( :isESBAutoPaymentPermit = 1  AND SUBSTR(providers.EXTERNAL_ID, INSTR(providers.EXTERNAL_ID, '|', -1) + 1) <> :IQWaveUUID ))

            AND rownum <= :providerCount
            order by providers.id
    ]]>
    </sql-query>

    <!-- поиск поставщиков услуг мобильного банка (Справочник ПУ МБК в служебном канале ЕРМБ) -->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getMBProviders">
		select provider from com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider as provider
        where provider.mobilebankCode is not null and provider.billing != null
    </query>

   <!--получение списка ключевых полей активных поставщиков по заданной услуге-->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getKeyFieldDescriptionsByProviderList">
        select field from com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider provider
        inner join provider.fieldDescriptions as field
        where provider.state = 'ACTIVE'
            and provider.id in (:providerIds)
            and field.key=true
    </query>

    <!--получение поставщика по его коду в Мобильном Банке-->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findByMobileBankCode">
        select provider from com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider as provider
		where provider.mobilebankCode = :mobilebankCode
	</query>

    <!--получение поставщиков по их кодам в Мобильном Банке-->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getAllByMobileBankCode">
        select provider from com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider as provider
		where provider.mobilebankCode in (:mobilebankCodes)
	</query>

    <!--получение пар "код получателя в Мобильном банке, код подуслуги" для поставщиков с указанными МБ-кодами -->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getSubServiceCodesByMobileBankCode">
        select provider.mobilebankCode, field.defaultValue
        from com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider as provider
        inner join provider.fieldDescriptions as field
        where provider.mobilebankCode in (:mobilebankCodes)
          and field.externalId =:subserviceFieldName
    </query>


    <!-- Получение имени и идентификатора иконки для поставщиков интернет-заказов с соответствующими кодами.
        Опорный элемент: UN_CODE_S_CODE_R_SBOL
        Предикат доступа: “CODE_RECIPIENT_SBOL”=:CODES
        Кардинальность: до 10
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getNameAndImageByCodes">
        <return-scalar column="code" type="string"/>
        <return-scalar column="name" type="string"/>
        <return-scalar column="image_id" type="long"/>
        <return-scalar column="is_fasilitator" type="boolean"/>
        SELECT
            p.CODE_RECIPIENT_SBOL code,
            p.NAME name,
            p.IMAGE_ID image_id,
            p.IS_FASILITATOR is_fasilitator
        FROM SERVICE_PROVIDERS p
        WHERE
            p.CODE_RECIPIENT_SBOL in (:codes) and
            p.STATE = 'ACTIVE' and p.KIND = 'I'
    </sql-query>

    <!--Получение идентификатора иконки поставщика по идентификатору поставщика
        Опорный объект: PK_SERVICE_PROVIDERS
        Предикаты доступа: access("ID"=TO_NUMBER(:ID))
        Кардинальность: 1
    -->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getImageById">
        select provider.imageId from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as provider
        where provider.id = :id
    </query>

    <!-- поиск постащика по коду поставщика в билинговой системе, коду услуги в билинговой системе и uuid адаптера -->
    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findProvider">
		select provider from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as provider
        where provider.code = :code and provider.codeService = :codeService and provider.billing.adapterUUID = :uuid
    </query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findProviderByСodeRecipientSBOL">
		select provider from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase as provider
        where provider.codeRecipientSBOL = :codeRecipientSBOL and provider.codeService = :codeService and provider.billing = :billing
    </query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getCountOfMobileProvider">
        select count (provider.id)
            from com.rssl.phizic.business.dictionaries.providers.MobileProviderCode as provider
            where provider.externalId = :externalId
    </query>

    <!-- получения доп инфы для формы просмотра платежа из поставщика для мапи -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.paymentFormInfo.mobile">
        <return-scalar column="PAYMENT_FORM_INFO_MAPI" type="string"/>
        select providerInfo.PAYMENT_FORM_INFO_MAPI as PAYMENT_FORM_INFO_MAPI from SERVICE_PROVIDER_INFO providerInfo
        where providerInfo.PROVIDER_ID = :providerId
    </sql-query>

    <!-- получения доп инфы для формы просмотра платежа из поставщика для веба -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.paymentFormInfo.internet">
        <return-scalar column="PAYMENT_FORM_INFO_WEB" type="string"/>
        select providerInfo.PAYMENT_FORM_INFO_WEB as PAYMENT_FORM_INFO_WEB from SERVICE_PROVIDER_INFO providerInfo
        where providerInfo.PROVIDER_ID = :providerId
    </sql-query>

    <query name="com.rssl.phizic.einvoicing.ShopProviders.findProviderBySystemName">
        select provider from com.rssl.phizic.business.dictionaries.providers.InternetShopsServiceProvider provider
        where codeRecipientSBOL = :systemName
    </query>

    <query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderService.findGroupRiskById">
        select provider.groupRisk from com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase provider
        where provider.id = :receiverId
    </query>

    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.regionsForProviders">
        <return-scalar column="PROVIDER_ID" type="string"/>
        <return-scalar column="REGION_NAME" type="string"/>
        <![CDATA[
            SELECT
                serv_regions.SERVICE_PROVIDER_ID PROVIDER_ID,
                regions.ID REGION_ID,
                regions.NAME REGION_NAME
            FROM REGIONS JOIN SERVICE_PROVIDER_REGIONS serv_regions on regions.ID = serv_regions.REGION_ID
            WHERE serv_regions.SERVICE_PROVIDER_ID in (:providers)
            ORDER BY PROVIDER_ID, REGION_NAME
        ]]>
    </sql-query>

    <!--
       Поиск мобильного поставщика по номеру телефона.
       Опорный объект: IDX_DEFCODES_PHONE_RANGE
       Предикаты доступа: access(SYS_OP_DESCEND("DEF_CODE_FROM")>=SYS_OP_DESCEND(:PHONE) AND SYS_OP_DESCEND("DEF_CODE_FROM") IS NOT NULL)
       Кардинальность: 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findMobileProviderByPhoneNumber">
        <return alias="providers" class="com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider"/>
        <![CDATA[
            SELECT {providers.*}
                FROM SERVICE_PROVIDERS providers where
                    providers.KIND='B'
                    and providers.billing_id = :iqwBillingId
                    and providers.CODE = (
                        select PROVIDER_CODE from (
                              select DEF_CODE_TO, PROVIDER_CODE from (
                                select DEF_CODE_TO, PROVIDER_CODE  from DEF_CODES
                                  where DEF_CODE_FROM <= :phone order by DEF_CODE_FROM desc
                                  ) where rownum<=1
                                ) where DEF_CODE_TO>=:phone )
        ]]>
    </sql-query>

    <!--
       Поиск мобильного поставщика по номеру телефона по таблице mnp-телефонов.
       Опорный объект: MNP_PHONE_IDX
       Предикаты доступа: access("MNPPHONE"."PHONE_NUMBER"=:PHONE)
                          access("PROVIDERS"."CODE"="MNPPHONE"."PROVIDER_CODE" AND "PROVIDERS"."BILLING_ID"=TO_NUMBER(:IQWBILLINGID))
       Кардинальность: 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findMobileProviderByMNPPhones">
        <return alias="providers" class="com.rssl.phizic.business.dictionaries.providers.BillingServiceProvider"/>
        <![CDATA[
            SELECT {providers.*}
                FROM SERVICE_PROVIDERS providers
                join MNP_PHONES mnpPhone on providers.CODE = mnpPhone.PROVIDER_CODE
                where
                    providers.KIND='B'
                    and providers.billing_id = :iqwBillingId
                    and mnpPhone.PHONE_NUMBER = :phone
        ]]>
    </sql-query>

    <!--
       Получение обертки поставщика услуг по ID

       Опорный объект: PK_SERVICE_PROVIDERS
       Предикаты доступа: access("P"."ID"=TO_NUMBER(:ID))
       Кардинальность: 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getShortcutById">
        <return class="com.rssl.phizic.business.dictionaries.providers.wrappers.ServiceProviderShortcut">

            <return-property name="id"                              column="id"/>
            <return-property name="state"                           column="state"/>
            <return-property name="synchKey"                        column="synchKey"/>
            <return-property name="kind"                            column="kind"/>
            <return-property name="planingForDeactivate"            column="planingForDeactivate"/>
            <return-property name="editPaymentSupported"            column="editPaymentSupported"/>
            <return-property name="versionAPI"                      column="versionAPI"/>

            <return-property name="webPaymentVisibility"            column="webPaymentVisibility"/>
            <return-property name="webPaymentAvailability"          column="webPaymentAvailability"/>
            <return-property name="webAutoPaymentVisibility"        column="webAutoPaymentVisibility"/>
            <return-property name="webAutoPaymentAvailability"      column="webAutoPaymentAvailability"/>

            <return-property name="MAPIPaymentVisibility"           column="MAPIPaymentVisibility"/>
            <return-property name="MAPIPaymentAvailability"         column="MAPIPaymentAvailability"/>
            <return-property name="MAPIAutoPaymentVisibility"       column="MAPIAutoPaymentVisibility"/>
            <return-property name="MAPIAutoPaymentAvailability"     column="MAPIAutoPaymentAvailability"/>

            <return-property name="ATMPaymentVisibility"            column="ATMPaymentVisibility"/>
            <return-property name="ATMPaymentAvailability"          column="ATMPaymentAvailability"/>
            <return-property name="ATMAutoPaymentVisibility"        column="ATMAutoPaymentVisibility"/>
            <return-property name="ATMAutoPaymentAvailability"      column="ATMAutoPaymentAvailability"/>

            <return-property name="ERMBPaymentAvailability"         column="ERMBPaymentAvailability"/>
            <return-property name="ERMBAutoPaymentVisibility"       column="ERMBAutoPaymentVisibility"/>
            <return-property name="ERMBAutoPaymentAvailability"     column="ERMBAutoPaymentAvailability"/>

            <return-property name="socialPaymentVisibility"         column="socialPaymentVisibility"/>
            <return-property name="socialPaymentAvailability"       column="socialPaymentAvailability"/>
            <return-property name="socialAutoPaymentVisibility"     column="socialAutoPaymentVisibility"/>
            <return-property name="socialAutoPaymentAvailability"   column="socialAutoPaymentAvailability"/>
        </return>

        <![CDATA[
            select
                p.ID                                id,
                p.STATE                             state,
                p.PLANING_FOR_DEACTIVATE            planingForDeactivate,
                p.IS_EDIT_PAYMENT_SUPPORTED         editPaymentSupported,
                p.KIND                              kind,
                p.EXTERNAL_ID                       synchKey,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VERSION_API
                    ELSE NULL
                END                                 versionAPI,
                VISIBLE_PAYMENTS_FOR_IB             webPaymentVisibility,
                AVAILABLE_PAYMENTS_FOR_IB           webPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_IB
                    ELSE '0'
                END                                 webAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED
                    ELSE '0'
                END                                 webAutoPaymentAvailability,
                VISIBLE_PAYMENTS_FOR_M_API          MAPIPaymentVisibility,
                AVAILABLE_PAYMENTS_FOR_M_API        MAPIPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_API
                    ELSE '0'
                END                                 MAPIAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_API
                    ELSE '0'
                END                                 MAPIAutoPaymentAvailability,
                p.VISIBLE_PAYMENTS_FOR_ATM_API      ATMPaymentVisibility,
                p.AVAILABLE_PAYMENTS_FOR_ATM_API    ATMPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_ATM
                    ELSE '0'
                END                                 ATMAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_ATM
                    ELSE '0'
                END                                 ATMAutoPaymentAvailability,
                p.AVAILABLE_PAYMENTS_FOR_ERMB       ERMBPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_ERMB
                    ELSE '0'
                END                                 ERMBAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_ERMB
                    ELSE '0'
                END                                 ERMBAutoPaymentAvailability,
                p.VISIBLE_PAYMENTS_FOR_S_API        socialPaymentVisibility,
                p.AVAILABLE_PAYMENTS_FOR_S_API      socialPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_S_API
                    ELSE '0'
                END                                 socialAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_S_API
                    ELSE '0'
                END                                 socialAutoPaymentAvailability
            from SERVICE_PROVIDERS p where p.ID = :id
        ]]>
    </sql-query>

    <!--
       Получение обертки поставщика услуг по UUID

       Опорный объект: I_SERVICE_PROVIDERS_UUID
       Предикаты доступа: access("P"."UUID"=:UUID)
       Кардинальность: 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getShortcutByUUID">
        <return class="com.rssl.phizic.business.dictionaries.providers.wrappers.ServiceProviderShortcut">

            <return-property name="id"                              column="id"/>
            <return-property name="state"                           column="state"/>
            <return-property name="synchKey"                        column="synchKey"/>
            <return-property name="kind"                            column="kind"/>
            <return-property name="planingForDeactivate"            column="planingForDeactivate"/>
            <return-property name="editPaymentSupported"            column="editPaymentSupported"/>
            <return-property name="versionAPI"                      column="versionAPI"/>

            <return-property name="webPaymentVisibility"            column="webPaymentVisibility"/>
            <return-property name="webPaymentAvailability"          column="webPaymentAvailability"/>
            <return-property name="webAutoPaymentVisibility"        column="webAutoPaymentVisibility"/>
            <return-property name="webAutoPaymentAvailability"      column="webAutoPaymentAvailability"/>

            <return-property name="MAPIPaymentVisibility"           column="MAPIPaymentVisibility"/>
            <return-property name="MAPIPaymentAvailability"         column="MAPIPaymentAvailability"/>
            <return-property name="MAPIAutoPaymentVisibility"       column="MAPIAutoPaymentVisibility"/>
            <return-property name="MAPIAutoPaymentAvailability"     column="MAPIAutoPaymentAvailability"/>

            <return-property name="ATMPaymentVisibility"            column="ATMPaymentVisibility"/>
            <return-property name="ATMPaymentAvailability"          column="ATMPaymentAvailability"/>
            <return-property name="ATMAutoPaymentVisibility"        column="ATMAutoPaymentVisibility"/>
            <return-property name="ATMAutoPaymentAvailability"      column="ATMAutoPaymentAvailability"/>

            <return-property name="ERMBPaymentAvailability"         column="ERMBPaymentAvailability"/>
            <return-property name="ERMBAutoPaymentVisibility"       column="ERMBAutoPaymentVisibility"/>
            <return-property name="ERMBAutoPaymentAvailability"     column="ERMBAutoPaymentAvailability"/>

            <return-property name="socialPaymentVisibility"         column="socialPaymentVisibility"/>
            <return-property name="socialPaymentAvailability"       column="socialPaymentAvailability"/>
            <return-property name="socialAutoPaymentVisibility"     column="socialAutoPaymentVisibility"/>
            <return-property name="socialAutoPaymentAvailability"   column="socialAutoPaymentAvailability"/>
        </return>

        <![CDATA[
            select
                p.ID                                id,
                p.STATE                             state,
                p.PLANING_FOR_DEACTIVATE            planingForDeactivate,
                p.IS_EDIT_PAYMENT_SUPPORTED         editPaymentSupported,
                p.KIND                              kind,
                p.EXTERNAL_ID                       synchKey,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VERSION_API
                    ELSE NULL
                END                                 versionAPI,
                VISIBLE_PAYMENTS_FOR_IB             webPaymentVisibility,
                AVAILABLE_PAYMENTS_FOR_IB           webPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_IB
                    ELSE '0'
                END                                 webAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED
                    ELSE '0'
                END                                 webAutoPaymentAvailability,
                VISIBLE_PAYMENTS_FOR_M_API          MAPIPaymentVisibility,
                AVAILABLE_PAYMENTS_FOR_M_API        MAPIPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_API
                    ELSE '0'
                END                                 MAPIAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_API
                    ELSE '0'
                END                                 MAPIAutoPaymentAvailability,
                p.VISIBLE_PAYMENTS_FOR_ATM_API      ATMPaymentVisibility,
                p.AVAILABLE_PAYMENTS_FOR_ATM_API    ATMPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_ATM
                    ELSE '0'
                END                                 ATMAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_ATM
                    ELSE '0'
                END                                 ATMAutoPaymentAvailability,
                p.AVAILABLE_PAYMENTS_FOR_ERMB       ERMBPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_ERMB
                    ELSE '0'
                END                                 ERMBAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_ERMB
                    ELSE '0'
                END                                 ERMBAutoPaymentAvailability,
                p.VISIBLE_PAYMENTS_FOR_S_API        socialPaymentVisibility,
                p.AVAILABLE_PAYMENTS_FOR_S_API      socialPaymentAvailability,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.VISIBLE_AUTOPAYMENTS_FOR_S_API
                    ELSE '0'
                END                                 socialAutoPaymentVisibility,
                CASE
                    WHEN (p.KIND = 'B')
                    THEN p.IS_AUTOPAYMENT_SUPPORTED_S_API
                    ELSE '0'
                END                                 socialAutoPaymentAvailability
            from SERVICE_PROVIDERS p where p.UUID = :uuid
        ]]>
    </sql-query>

    <!--
      Поддерживает ли поставщик определенный тип автоплатежа.

      Опорный объект: DXFK_AUTOPAY_SETTING_TO_PROV
      Предикаты доступа: access("RECIPIENT_ID"=TO_NUMBER(:PROVIDERID))
      Кардинальность: 3
   -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.isSupportAutoPayType">
        select 1 from AUTOPAY_SETTINGS where RECIPIENT_ID = :providerId and TYPE = :type
    </sql-query>

    <!-- Получение идентификатора поставщика-фасилитатора и имени по его коду.
        Опорный объект: UN_CODE_S_CODE_R_SBOL
        Предикаты доступа: access("PROVIDER"."CODE_RECIPIENT_SBOL"=:CODE)
        Кардинальность: 1 (поле CODE_RECIPIENT_SBOL уникально)
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.getFacilitatorIdAndNameByCode">
        <return-scalar column="provider_id" type="string"/>
        <return-scalar column="provider_name" type="string"/>
        SELECT provider.ID provider_id,provider.NAME provider_name
            FROM SERVICE_PROVIDERS provider
        WHERE provider.CODE_RECIPIENT_SBOL = :code
    </sql-query>


    <!--получение поставщика по id
        Опорный объект: PK_SERVICE_PROVIDERS
        Предикаты доступа: access("PROVIDERS"."ID"=TO_NUMBER(:ID))
        Кардинальность : 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findShortProviderById">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort" />
        <![CDATA[
            SELECT
                providers.id                            ID,
                providers.UUID  UUID,
                providers.CODE                          CODE,
                providers.KIND                          KIND,
                providers.EXTERNAL_ID                   EXTERNAL_ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.DESCRIPTION                   DESCRIPTION,
                providers.image_id                      IMAGE_ID,
                providers.IS_AUTOPAYMENT_SUPPORTED      IS_AUTOPAYMENT_SUPPORTED,
                providers.IS_AUTOPAYMENT_SUPPORTED_API  IS_AUTOPAYMENT_SUPPORTED_API,
                providers.IS_AUTOPAYMENT_SUPPORTED_ATM  IS_AUTOPAYMENT_SUPPORTED_ATM,
                providers.AVAILABLE_PAYMENTS_FOR_IB  AVAILABLE_PAYMENTS_FOR_IB,
                providers.AVAILABLE_PAYMENTS_FOR_M_API  AVAILABLE_PAYMENTS_FOR_M_API,
                providers.AVAILABLE_PAYMENTS_FOR_ATM_API  AVAILABLE_PAYMENTS_FOR_ATM_API,
                providers.AVAILABLE_PAYMENTS_FOR_S_API  AVAILABLE_PAYMENTS_FOR_S_API,
                providers.AVAILABLE_PAYMENTS_FOR_ERMB  AVAILABLE_PAYMENTS_FOR_ERMB,
                providers.VERSION_API  VERSION_API,
                providers.IS_TEMPLATE_SUPPORTED  IS_TEMPLATE_SUPPORTED,
                providers.MOBILEBANK_CODE  MOBILEBANK_CODE,
                providers.COMMISSION_MESSAGE  COMMISSION_MESSAGE,
                providers.MAX_COMISSION_AMOUNT  MAX_COMISSION_AMOUNT,
                providers.MIN_COMISSION_AMOUNT  MIN_COMISSION_AMOUNT,
                providers.COMISSION_RATE  COMISSION_RATE,
                providers.IS_GROUND  IS_GROUND,
                providers.ATTR_DELIMITER  ATTR_DELIMITER,
                providers.ATTR_VALUES_DELIMITER  ATTR_VALUES_DELIMITER,
                providers.CODE_SERVICE  CODE_SERVICE,
                providers.SUB_TYPE  SUB_TYPE,
                providers.FORM_NAME  FORM_NAME,
                providers.IS_CREDIT_CARD_SUPPORTED  IS_CREDIT_CARD_SUPPORTED,
                providers.IS_EDIT_PAYMENT_SUPPORTED     IS_EDIT_PAYMENT_SUPPORTED,
                providers.ACCOUNT_TYPE                  ACCOUNT_TYPE,
                providers.IS_FEDERAL                    IS_FEDERAL,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.BILLING_ID                    BILLING_ID,
                providers.IS_BANK_DETAILS               IS_BANK_DETAILS,
                providers.MIN_SUM_RESTRICTION           MIN_SUM_RESTRICTION,
                providers.MAX_SUM_RESTRICTION           MAX_SUM_RESTRICTION,
                providers.TRANSIT_ACCOUNT                TRANSIT_ACCOUNT,
                providers.DEPARTMENT_ID                  DEPARTMENT_ID,
                providers.IS_OFFLINE_AVAILABLE           IS_OFFLINE_AVAILABLE,
                providers.INN                           INN,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM SERVICE_PROVIDERS providers
            WHERE providers.id = :id
        ]]>
	</sql-query>

    <!--Получить список коротких поставщиков услуг, для которых созданы связки
        Опорный элемент: I_FIELD_FORMULAS
        Предикаты доступа:
            5 - access("FIELD"."IDENT_TYPE_ID"=TO_NUMBER(:IDENT_TYPE_ID))
            6 - access("PROVIDERS"."ID"="PROVIDER_ID")
        Кардинальность: количество связок.
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findShortProviderByFieldFormulas">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderForFieldFormulas" />
        <![CDATA[
            with field as (
                select field.provider_id
                from FIELD_FORMULAS field
                where field.IDENT_TYPE_ID = :ident_type_id
                group by field.PROVIDER_ID
            )
            SELECT
                providers.id                            ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.INN                           INN,
                providers.image_id                      IMAGE_ID,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM field
            inner join SERVICE_PROVIDERS providers on providers.id = field.provider_id
        ]]>
	</sql-query>


    <!--получение поставщика по synchKey
        Опорный объект: INDEX_EXT_ID
        Предикаты доступа: access("PROVIDERS"."EXTERNAL_ID"=:SYNCHKEY)
        Кардинальность : 1
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findShortProviderBySynchKey">
        <return class="com.rssl.phizic.business.dictionaries.providers.ServiceProviderShort" />
        <![CDATA[
            SELECT
                providers.id                            ID,
                providers.UUID  UUID,
                providers.CODE                          CODE,
                providers.KIND                          KIND,
                providers.EXTERNAL_ID                   EXTERNAL_ID,
                providers.name                          NAME,
                providers.NAME_SERVICE                  NAME_SERVICE,
                providers.DESCRIPTION                   DESCRIPTION,
                providers.image_id                      IMAGE_ID,
                providers.IS_AUTOPAYMENT_SUPPORTED      IS_AUTOPAYMENT_SUPPORTED,
                providers.IS_AUTOPAYMENT_SUPPORTED_API  IS_AUTOPAYMENT_SUPPORTED_API,
                providers.IS_AUTOPAYMENT_SUPPORTED_ATM  IS_AUTOPAYMENT_SUPPORTED_ATM,
                providers.AVAILABLE_PAYMENTS_FOR_IB  AVAILABLE_PAYMENTS_FOR_IB,
                providers.AVAILABLE_PAYMENTS_FOR_M_API  AVAILABLE_PAYMENTS_FOR_M_API,
                providers.AVAILABLE_PAYMENTS_FOR_ATM_API  AVAILABLE_PAYMENTS_FOR_ATM_API,
                providers.AVAILABLE_PAYMENTS_FOR_S_API  AVAILABLE_PAYMENTS_FOR_S_API,
                providers.AVAILABLE_PAYMENTS_FOR_ERMB  AVAILABLE_PAYMENTS_FOR_ERMB,
                providers.VERSION_API  VERSION_API,
                providers.IS_TEMPLATE_SUPPORTED  IS_TEMPLATE_SUPPORTED,
                providers.MOBILEBANK_CODE  MOBILEBANK_CODE,
                providers.COMMISSION_MESSAGE  COMMISSION_MESSAGE,
                providers.MAX_COMISSION_AMOUNT  MAX_COMISSION_AMOUNT,
                providers.MIN_COMISSION_AMOUNT  MIN_COMISSION_AMOUNT,
                providers.COMISSION_RATE  COMISSION_RATE,
                providers.IS_GROUND  IS_GROUND,
                providers.ATTR_DELIMITER  ATTR_DELIMITER,
                providers.ATTR_VALUES_DELIMITER  ATTR_VALUES_DELIMITER,
                providers.CODE_SERVICE  CODE_SERVICE,
                providers.SUB_TYPE  SUB_TYPE,
                providers.FORM_NAME  FORM_NAME,
                providers.IS_CREDIT_CARD_SUPPORTED  IS_CREDIT_CARD_SUPPORTED,
                providers.IS_EDIT_PAYMENT_SUPPORTED     IS_EDIT_PAYMENT_SUPPORTED,
                providers.ACCOUNT_TYPE                  ACCOUNT_TYPE,
                providers.IS_FEDERAL                    IS_FEDERAL,
                providers.IMAGE_HELP_ID                 IMAGE_HELP_ID,
                providers.BILLING_ID                    BILLING_ID,
                providers.IS_BANK_DETAILS               IS_BANK_DETAILS,
                providers.MIN_SUM_RESTRICTION           MIN_SUM_RESTRICTION,
                providers.MAX_SUM_RESTRICTION           MAX_SUM_RESTRICTION,
                providers.TRANSIT_ACCOUNT                TRANSIT_ACCOUNT,
                providers.DEPARTMENT_ID                  DEPARTMENT_ID,
                providers.IS_OFFLINE_AVAILABLE           IS_OFFLINE_AVAILABLE,
                providers.INN                           INN,
                providers.ACCOUNT                       ACCOUNT,
                providers.STATE                         STATE
            FROM SERVICE_PROVIDERS providers
            WHERE providers.EXTERNAL_ID = :synchKey
        ]]>
	</sql-query>

    <!--
    Опорный объект: SERVICE_PROVIDERS
    Предикаты доступа: фулскан
    Кардинальность: количество поставщиков
    -->
    <sql-query name="com.rssl.phizic.business.dictionaries.providers.ServiceProviderBase.findProviderSortByPriority">
        <return-scalar column="UUID" type="string" />
        <return-scalar column="NAME" type="string" />
        <![CDATA[
            SELECT
                providers.UUID  UUID,
                providers.name  NAME
            FROM SERVICE_PROVIDERS providers
            order by SORT_PRIORITY desc
        ]]>
	</sql-query>


    <filter-def name="provider_filter_by_department"
                condition="(exists(
                                    SELECT
                                        1
                                    FROM
                                        DEPARTMENTS dep
                                    WHERE
                                        dep.id = DEPARTMENT_ID
                                        AND exists(SELECT 1 FROM ALLOWED_DEPARTMENTS ad
                                                         WHERE ad.LOGIN_ID = :employeeLoginId
                                                         AND ad.TB||'|'||ad.OSB||'|'||ad.VSP in (
                                                                                                 dep.TB||'|*|*',
                                                                                                 dep.TB||'|'||dep.OSB||'|*',
                                                                                                 dep.TB||'|'||dep.OSB||'|'||dep.OFFICE,
                                                                                                 '*|*|*'
                                                                                                 )
                                                    )
                                   )
                            )"
           >
		<filter-param name="employeeLoginId" type="long"/>
	</filter-def>

</hibernate-mapping>
