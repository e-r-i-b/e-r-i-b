//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.5-b16-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2008.11.20 at 07:05:24 PM MSK 
//


package com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl;

public class FieldDescriptorImpl implements com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor, com.sun.xml.bind.JAXBObject, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallableObject, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializable, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.ValidatableObject
{

    protected java.lang.String _Type;
    protected boolean has_Required;
    protected boolean _Required;
    protected java.math.BigInteger _Maxlength;
    protected java.lang.String _Description;
    protected java.lang.String _Path;
    protected java.lang.String _Name;
    protected com.rssl.phizic.business.dictionaries.receivers.personal.generated.FormatDescriptor _Format;
    protected com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType _Validators;
    protected java.math.BigInteger _Minlength;
    public final static java.lang.Class version = (com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.class);
    }

    public java.lang.String getType() {
        return _Type;
    }

    public void setType(java.lang.String value) {
        _Type = value;
    }

    public boolean isRequired() {
        return _Required;
    }

    public void setRequired(boolean value) {
        _Required = value;
        has_Required = true;
    }

    public java.math.BigInteger getMaxlength() {
        return _Maxlength;
    }

    public void setMaxlength(java.math.BigInteger value) {
        _Maxlength = value;
    }

    public java.lang.String getDescription() {
        return _Description;
    }

    public void setDescription(java.lang.String value) {
        _Description = value;
    }

    public java.lang.String getPath() {
        return _Path;
    }

    public void setPath(java.lang.String value) {
        _Path = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public com.rssl.phizic.business.dictionaries.receivers.personal.generated.FormatDescriptor getFormat() {
        return _Format;
    }

    public void setFormat(com.rssl.phizic.business.dictionaries.receivers.personal.generated.FormatDescriptor value) {
        _Format = value;
    }

    public com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType getValidators() {
        return _Validators;
    }

    public void setValidators(com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType value) {
        _Validators = value;
    }

    public java.math.BigInteger getMinlength() {
        return _Minlength;
    }

    public void setMinlength(java.math.BigInteger value) {
        _Minlength = value;
    }

    public com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context) {
        return new com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.Unmarshaller(context);
    }

    public void serializeBody(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Format!= null) {
            context.startElement("", "format");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Format), "Format");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Format), "Format");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Format), "Format");
            context.endElement();
        }
        if (_Validators!= null) {
            context.startElement("", "validators");
            context.childAsURIs(((com.sun.xml.bind.JAXBObject) _Validators), "Validators");
            context.endNamespaceDecls();
            context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _Validators), "Validators");
            context.endAttributes();
            context.childAsBody(((com.sun.xml.bind.JAXBObject) _Validators), "Validators");
            context.endElement();
        }
    }

    public void serializeAttributes(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startAttribute("", "description");
        try {
            context.text(((java.lang.String) _Description), "Description");
        } catch (java.lang.Exception e) {
            com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Maxlength!= null) {
            context.startAttribute("", "maxlength");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Maxlength)), "Maxlength");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Minlength!= null) {
            context.startAttribute("", "minlength");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printInteger(((java.math.BigInteger) _Minlength)), "Minlength");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        context.startAttribute("", "name");
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endAttribute();
        if (_Path!= null) {
            context.startAttribute("", "path");
            try {
                context.text(((java.lang.String) _Path), "Path");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (has_Required) {
            context.startAttribute("", "required");
            try {
                context.text(javax.xml.bind.DatatypeConverter.printBoolean(((boolean) _Required)), "Required");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
        if (_Type!= null) {
            context.startAttribute("", "type");
            try {
                context.text(((java.lang.String) _Type), "Type");
            } catch (java.lang.Exception e) {
                com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000b"
+"expandedExpq\u0000~\u0000\u0002xpppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000pp"
+"sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0000ppsr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xq\u0000~\u0000\u0001ppsr\u0000\'com.sun.msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun."
+"msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttribut"
+"esL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001"
+"Z\u0000\u0005valuexp\u0000p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsr\u0000 com.sun.msv.gramma"
+"r.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr\u0000 com.sun.msv.grammar.Attri"
+"buteExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\u0010xq\u0000~\u0000\u0003q\u0000~\u0000\u0014psr"
+"\u00002com.sun.msv.grammar.Expression$AnyStringExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\u0013\u0001q\u0000~\u0000\u001esr\u0000 com.sun.msv.grammar.AnyNameClass\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000co"
+"m.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000"
+"~\u0000\u0003q\u0000~\u0000\u001fq\u0000~\u0000$sr\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq\u0000~\u0000&xq\u0000~"
+"\u0000!t\u0000Scom.rssl.phizic.business.dictionaries.receivers.persona"
+"l.generated.FormatDescriptort\u0000+http://java.sun.com/jaxb/xjc/"
+"dummy-elementssq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psr\u0000\u001bcom.sun.msv.grammar.Da"
+"taExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Datatype;L\u0000\u0006ex"
+"ceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;xq\u0000~\u0000\u0003ppsr\u0000\""
+"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*com.sun.msv"
+".datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.da"
+"tatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.x"
+"sd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000&L\u0000\btypeNameq"
+"\u0000~\u0000&L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/WhiteSpaceProc"
+"essor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNamesr\u00005com.s"
+"un.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000x"
+"r\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp"
+"sr\u00000com.sun.msv.grammar.Expression$NullSetExpression\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001"
+"\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tloca"
+"lNameq\u0000~\u0000&L\u0000\fnamespaceURIq\u0000~\u0000&xpq\u0000~\u00007q\u0000~\u00006sq\u0000~\u0000%t\u0000\u0004typet\u0000)ht"
+"tp://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000$sq\u0000~\u0000%t\u0000\u0006formatt"
+"\u0000\u0000q\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u000fq\u0000~\u0000\u0014p\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u000fpp\u0000sq\u0000~\u0000\rppsq\u0000~\u0000\u0018q"
+"\u0000~\u0000\u0014psq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000\u001eq\u0000~\u0000\"q\u0000~\u0000$sq\u0000~\u0000%t\u0000acom.rssl.phizic.bus"
+"iness.dictionaries.receivers.personal.generated.FieldDescrip"
+"tor.ValidatorsTypeq\u0000~\u0000)sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000/q\u0000~\u0000?q\u0000~\u0000$sq"
+"\u0000~\u0000%t\u0000\nvalidatorsq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\u001bppsq\u0000~\u0000,ppsr\u0000%com.sun.msv.d"
+"atatype.xsd.SimpleURType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\ranySimpleTy"
+"pesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00009q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000Vq\u0000~\u00006sq\u0000~\u0000%t\u0000\u000bdescriptionq\u0000~"
+"\u0000Dsq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000,ppsr\u0000$com.sun.msv.datatype.xsd.I"
+"ntegerType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000+com.sun.msv.datatype.xsd.IntegerDer"
+"ivedType\u0099\u00f1]\u0090&6k\u00be\u0002\u0000\u0001L\u0000\nbaseFacetst\u0000)Lcom/sun/msv/datatype/xsd"
+"/XSDatatypeImpl;xq\u0000~\u00001q\u0000~\u00006t\u0000\u0007integerq\u0000~\u0000:sr\u0000,com.sun.msv.da"
+"tatype.xsd.FractionDigitsFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001I\u0000\u0005scalexr\u0000;com.sun"
+".msv.datatype.xsd.DataTypeWithLexicalConstraintFacetT\u0090\u001c>\u001azb\u00ea"
+"\u0002\u0000\u0000xr\u0000*com.sun.msv.datatype.xsd.DataTypeWithFacet\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0005"
+"Z\u0000\fisFacetFixedZ\u0000\u0012needValueCheckFlagL\u0000\bbaseTypeq\u0000~\u0000aL\u0000\fconcr"
+"eteTypet\u0000\'Lcom/sun/msv/datatype/xsd/ConcreteType;L\u0000\tfacetNam"
+"eq\u0000~\u0000&xq\u0000~\u00003ppq\u0000~\u0000:\u0001\u0000sr\u0000#com.sun.msv.datatype.xsd.NumberType"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\u0007decimalq\u0000~\u0000:q\u0000~\u0000jt\u0000\u000efractionDigits\u0000"
+"\u0000\u0000\u0000q\u0000~\u0000<sq\u0000~\u0000=q\u0000~\u0000cq\u0000~\u00006sq\u0000~\u0000%t\u0000\tmaxlengthq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rpp"
+"sq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000^sq\u0000~\u0000%t\u0000\tminlengthq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\u001bppq\u0000~\u0000Ssq"
+"\u0000~\u0000%t\u0000\u0004nameq\u0000~\u0000Dsq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~\u0000Ssq\u0000~\u0000%t\u0000\u0004pathq\u0000~\u0000Dq"
+"\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014psq\u0000~\u0000,ppsr\u0000$com.sun.msv.datatype.xsd"
+".BooleanType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u00001q\u0000~\u00006t\u0000\u0007booleanq\u0000~\u0000:q\u0000~\u0000<sq\u0000~\u0000="
+"q\u0000~\u0000\u0080q\u0000~\u00006sq\u0000~\u0000%t\u0000\brequiredq\u0000~\u0000Dq\u0000~\u0000$sq\u0000~\u0000\rppsq\u0000~\u0000\u001bq\u0000~\u0000\u0014pq\u0000~"
+"\u0000Ssq\u0000~\u0000%t\u0000\u0004typeq\u0000~\u0000Dq\u0000~\u0000$sr\u0000\"com.sun.msv.grammar.ExpressionP"
+"ool\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionP"
+"ool$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$Clos"
+"edHash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/su"
+"n/msv/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0017\u0001pq\u0000~\u0000pq\u0000~\u0000\u001aq\u0000~\u0000Jq\u0000~\u0000\u0006q\u0000~"
+"\u0000\u000eq\u0000~\u0000Eq\u0000~\u0000\u0015q\u0000~\u0000Gq\u0000~\u0000\u0017q\u0000~\u0000Iq\u0000~\u0000\\q\u0000~\u0000\u0007q\u0000~\u0000{q\u0000~\u0000\u000bq\u0000~\u0000\tq\u0000~\u0000\nq\u0000~"
+"\u0000*q\u0000~\u0000Nq\u0000~\u0000\u0084q\u0000~\u0000\u0005q\u0000~\u0000\fq\u0000~\u0000wq\u0000~\u0000\bx"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context) {
            super(context, "----------------------------");
        }

        protected Unmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  25 :
                        if (("validator" == ___local)&&("" == ___uri)) {
                            _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromEnterElement((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                            return ;
                        }
                        _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromEnterElement((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, ___uri, ___local, ___qname, __atts));
                        return ;
                    case  27 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  24 :
                        if (("validators" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 25;
                            return ;
                        }
                        state = 27;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  21 :
                        if (("format" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, false);
                            state = 22;
                            return ;
                        }
                        state = 24;
                        continue outer;
                    case  15 :
                        attIdx = context.getAttribute("", "required");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText2(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "path");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText3(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText4(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "message");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "maxlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "minlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText7(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Required = javax.xml.bind.DatatypeConverter.parseBoolean(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
                has_Required = true;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Path = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Type = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Description = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Maxlength = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText7(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Minlength = javax.xml.bind.DatatypeConverter.parseInteger(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  25 :
                        _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromLeaveElement((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  26 :
                        if (("validators" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 27;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  23 :
                        if (("format" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 24;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "required");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText2(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "path");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText3(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText4(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        attIdx = context.getAttribute("", "message");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "maxlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "minlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText7(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  25 :
                        _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromEnterAttribute((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 10;
                            return ;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  15 :
                        if (("required" == ___local)&&("" == ___uri)) {
                            state = 16;
                            return ;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        if (("path" == ___local)&&("" == ___uri)) {
                            state = 13;
                            return ;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 19;
                            return ;
                        }
                        state = 21;
                        continue outer;
                    case  22 :
                        if (("message" == ___local)&&("" == ___uri)) {
                            _Format = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FormatDescriptorImpl) spawnChildFromEnterAttribute((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FormatDescriptorImpl.class), 23, ___uri, ___local, ___qname));
                            return ;
                        }
                        break;
                    case  0 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        break;
                    case  3 :
                        if (("maxlength" == ___local)&&("" == ___uri)) {
                            state = 4;
                            return ;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        if (("minlength" == ___local)&&("" == ___uri)) {
                            state = 7;
                            return ;
                        }
                        state = 9;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  2 :
                        if (("description" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  5 :
                        if (("maxlength" == ___local)&&("" == ___uri)) {
                            state = 6;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            state = 12;
                            return ;
                        }
                        break;
                    case  25 :
                        _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromLeaveAttribute((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, ___uri, ___local, ___qname));
                        return ;
                    case  27 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  24 :
                        state = 27;
                        continue outer;
                    case  9 :
                        attIdx = context.getAttribute("", "name");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 12;
                            eatText1(v);
                            continue outer;
                        }
                        break;
                    case  21 :
                        state = 24;
                        continue outer;
                    case  20 :
                        if (("type" == ___local)&&("" == ___uri)) {
                            state = 21;
                            return ;
                        }
                        break;
                    case  15 :
                        attIdx = context.getAttribute("", "required");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 18;
                            eatText2(v);
                            continue outer;
                        }
                        state = 18;
                        continue outer;
                    case  12 :
                        attIdx = context.getAttribute("", "path");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 15;
                            eatText3(v);
                            continue outer;
                        }
                        state = 15;
                        continue outer;
                    case  18 :
                        attIdx = context.getAttribute("", "type");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 21;
                            eatText4(v);
                            continue outer;
                        }
                        state = 21;
                        continue outer;
                    case  17 :
                        if (("required" == ___local)&&("" == ___uri)) {
                            state = 18;
                            return ;
                        }
                        break;
                    case  22 :
                        attIdx = context.getAttribute("", "message");
                        if (attIdx >= 0) {
                            context.consumeAttribute(attIdx);
                            context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "description");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 3;
                            eatText5(v);
                            continue outer;
                        }
                        break;
                    case  14 :
                        if (("path" == ___local)&&("" == ___uri)) {
                            state = 15;
                            return ;
                        }
                        break;
                    case  3 :
                        attIdx = context.getAttribute("", "maxlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 6;
                            eatText6(v);
                            continue outer;
                        }
                        state = 6;
                        continue outer;
                    case  6 :
                        attIdx = context.getAttribute("", "minlength");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            state = 9;
                            eatText7(v);
                            continue outer;
                        }
                        state = 9;
                        continue outer;
                    case  8 :
                        if (("minlength" == ___local)&&("" == ___uri)) {
                            state = 9;
                            return ;
                        }
                        break;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  10 :
                            state = 11;
                            eatText1(value);
                            return ;
                        case  4 :
                            state = 5;
                            eatText6(value);
                            return ;
                        case  25 :
                            _Validators = ((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl) spawnChildFromText((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.class), 26, value));
                            return ;
                        case  19 :
                            state = 20;
                            eatText4(value);
                            return ;
                        case  27 :
                            revertToParentFromText(value);
                            return ;
                        case  24 :
                            state = 27;
                            continue outer;
                        case  13 :
                            state = 14;
                            eatText3(value);
                            return ;
                        case  9 :
                            attIdx = context.getAttribute("", "name");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 12;
                                eatText1(v);
                                continue outer;
                            }
                            break;
                        case  21 :
                            state = 24;
                            continue outer;
                        case  16 :
                            state = 17;
                            eatText2(value);
                            return ;
                        case  1 :
                            state = 2;
                            eatText5(value);
                            return ;
                        case  7 :
                            state = 8;
                            eatText7(value);
                            return ;
                        case  15 :
                            attIdx = context.getAttribute("", "required");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 18;
                                eatText2(v);
                                continue outer;
                            }
                            state = 18;
                            continue outer;
                        case  12 :
                            attIdx = context.getAttribute("", "path");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 15;
                                eatText3(v);
                                continue outer;
                            }
                            state = 15;
                            continue outer;
                        case  18 :
                            attIdx = context.getAttribute("", "type");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 21;
                                eatText4(v);
                                continue outer;
                            }
                            state = 21;
                            continue outer;
                        case  22 :
                            attIdx = context.getAttribute("", "message");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().text(value);
                                return ;
                            }
                            break;
                        case  0 :
                            attIdx = context.getAttribute("", "description");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 3;
                                eatText5(v);
                                continue outer;
                            }
                            break;
                        case  3 :
                            attIdx = context.getAttribute("", "maxlength");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 6;
                                eatText6(v);
                                continue outer;
                            }
                            state = 6;
                            continue outer;
                        case  6 :
                            attIdx = context.getAttribute("", "minlength");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                state = 9;
                                eatText7(v);
                                continue outer;
                            }
                            state = 9;
                            continue outer;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

    }

    public static class ValidatorsTypeImpl implements com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType, com.sun.xml.bind.JAXBObject, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallableObject, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializable, com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.ValidatableObject
    {

        protected com.sun.xml.bind.util.ListImpl _ValidatorDescriptor;
        public final static java.lang.Class version = (com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.JAXBVersion.class);
        private static com.sun.msv.grammar.Grammar schemaFragment;

        private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
            return (com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType.class);
        }

        protected com.sun.xml.bind.util.ListImpl _getValidatorDescriptor() {
            if (_ValidatorDescriptor == null) {
                _ValidatorDescriptor = new com.sun.xml.bind.util.ListImpl(new java.util.ArrayList());
            }
            return _ValidatorDescriptor;
        }

        public java.util.List getValidatorDescriptor() {
            return _getValidatorDescriptor();
        }

        public com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingEventHandler createUnmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context) {
            return new com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.Unmarshaller(context);
        }

        public void serializeBody(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ValidatorDescriptor == null)? 0 :_ValidatorDescriptor.size());
            while (idx1 != len1) {
                context.startElement("", "validator");
                int idx_0 = idx1;
                context.childAsURIs(((com.sun.xml.bind.JAXBObject) _ValidatorDescriptor.get(idx_0 ++)), "ValidatorDescriptor");
                context.endNamespaceDecls();
                int idx_1 = idx1;
                context.childAsAttributes(((com.sun.xml.bind.JAXBObject) _ValidatorDescriptor.get(idx_1 ++)), "ValidatorDescriptor");
                context.endAttributes();
                context.childAsBody(((com.sun.xml.bind.JAXBObject) _ValidatorDescriptor.get(idx1 ++)), "ValidatorDescriptor");
                context.endElement();
            }
        }

        public void serializeAttributes(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ValidatorDescriptor == null)? 0 :_ValidatorDescriptor.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public void serializeURIs(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.XMLSerializer context)
            throws org.xml.sax.SAXException
        {
            int idx1 = 0;
            final int len1 = ((_ValidatorDescriptor == null)? 0 :_ValidatorDescriptor.size());
            while (idx1 != len1) {
                idx1 += 1;
            }
        }

        public java.lang.Class getPrimaryInterface() {
            return (com.rssl.phizic.business.dictionaries.receivers.personal.generated.FieldDescriptor.ValidatorsType.class);
        }

        public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
            if (schemaFragment == null) {
                schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun."
+"msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gramm"
+"ar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expression"
+"\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0002L\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava/lang/Boolean;L\u0000\u000bex"
+"pandedExpq\u0000~\u0000\u0002xpppsr\u0000 com.sun.msv.grammar.OneOrMoreExp\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xr\u0000\u001ccom.sun.msv.grammar.UnaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\u0003expq\u0000~\u0000\u0002x"
+"q\u0000~\u0000\u0003sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005valuexp\u0000psr\u0000\'com.sun"
+".msv.grammar.trex.ElementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLc"
+"om/sun/msv/grammar/NameClass;xr\u0000\u001ecom.sun.msv.grammar.Element"
+"Exp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aignoreUndeclaredAttributesL\u0000\fcontentModelq\u0000"
+"~\u0000\u0002xq\u0000~\u0000\u0003q\u0000~\u0000\np\u0000sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002"
+"\u0000\u0000xq\u0000~\u0000\u0001ppsq\u0000~\u0000\u000bpp\u0000sq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0006q\u0000~\u0000\npsr\u0000 com.sun.msv.gramm"
+"ar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tnameClassq\u0000~\u0000\fxq\u0000~\u0000\u0003"
+"q\u0000~\u0000\npsr\u00002com.sun.msv.grammar.Expression$AnyStringExpression"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003sq\u0000~\u0000\t\u0001q\u0000~\u0000\u0017sr\u0000 com.sun.msv.grammar.AnyName"
+"Class\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000"
+"xpsr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003q\u0000~\u0000\u0018q\u0000~\u0000\u001dsr\u0000#com.sun.msv.grammar.SimpleNameClass"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNamet\u0000\u0012Ljava/lang/String;L\u0000\fnamespaceURIq"
+"\u0000~\u0000\u001fxq\u0000~\u0000\u001at\u0000Vcom.rssl.phizic.business.dictionaries.receivers"
+".personal.generated.ValidatorDescriptort\u0000+http://java.sun.co"
+"m/jaxb/xjc/dummy-elementssq\u0000~\u0000\u0000ppsq\u0000~\u0000\u0014q\u0000~\u0000\npsr\u0000\u001bcom.sun.msv"
+".grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLorg/relaxng/datatype/Dat"
+"atype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/sun/msv/util/StringPair;x"
+"q\u0000~\u0000\u0003ppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000*"
+"com.sun.msv.datatype.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com"
+".sun.msv.datatype.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv"
+".datatype.xsd.XSDatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUriq\u0000~\u0000\u001fL"
+"\u0000\btypeNameq\u0000~\u0000\u001fL\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0005QNa"
+"mesr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Collapse\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpsr\u00000com.sun.msv.grammar.Expression$NullSetExpress"
+"ion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003ppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0t\u001ejB\u008f\u008d"
+"\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u001fL\u0000\fnamespaceURIq\u0000~\u0000\u001fxpq\u0000~\u00000q\u0000~\u0000/sq\u0000~\u0000\u001et"
+"\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-instanceq\u0000~\u0000\u001dsq\u0000~\u0000"
+"\u001et\u0000\tvalidatort\u0000\u0000q\u0000~\u0000\u001dsr\u0000\"com.sun.msv.grammar.ExpressionPool\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool$"
+"ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedHa"
+"sh\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0003\u0000\u0003I\u0000\u0005countB\u0000\rstreamVersionL\u0000\u0006parentt\u0000$Lcom/sun/ms"
+"v/grammar/ExpressionPool;xp\u0000\u0000\u0000\u0006\u0001pq\u0000~\u0000\u0013q\u0000~\u0000\u0005q\u0000~\u0000\u0010q\u0000~\u0000\u0012q\u0000~\u0000\bq\u0000"
+"~\u0000#x"));
            }
            return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
        }

        public class Unmarshaller
            extends com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.AbstractUnmarshallingEventHandlerImpl
        {


            public Unmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context) {
                super(context, "----");
            }

            protected Unmarshaller(com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.runtime.UnmarshallingContext context, int startState) {
                this(context);
                state = startState;
            }

            public java.lang.Object owner() {
                return com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.FieldDescriptorImpl.ValidatorsTypeImpl.this;
            }

            public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            if (("validator" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "template");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().enterElement(___uri, ___local, ___qname, __atts);
                                return ;
                            }
                            if (("class" == ___local)&&("" == ___uri)) {
                                _getValidatorDescriptor().add(((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.ValidatorDescriptorImpl) spawnChildFromEnterElement((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.ValidatorDescriptorImpl.class), 2, ___uri, ___local, ___qname, __atts)));
                                return ;
                            }
                            break;
                        case  3 :
                            if (("validator" == ___local)&&("" == ___uri)) {
                                context.pushAttributes(__atts, false);
                                state = 1;
                                return ;
                            }
                            revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                            return ;
                    }
                    super.enterElement(___uri, ___local, ___qname, __atts);
                    break;
                }
            }

            public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "template");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveElement(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  2 :
                            if (("validator" == ___local)&&("" == ___uri)) {
                                context.popAttributes();
                                state = 3;
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveElement(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveElement(___uri, ___local, ___qname);
                    break;
                }
            }

            public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  1 :
                            if (("template" == ___local)&&("" == ___uri)) {
                                _getValidatorDescriptor().add(((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.ValidatorDescriptorImpl) spawnChildFromEnterAttribute((com.rssl.phizic.business.dictionaries.receivers.personal.generated.impl.ValidatorDescriptorImpl.class), 2, ___uri, ___local, ___qname)));
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.enterAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    switch (state) {
                        case  0 :
                            state = 3;
                            continue outer;
                        case  1 :
                            attIdx = context.getAttribute("", "template");
                            if (attIdx >= 0) {
                                context.consumeAttribute(attIdx);
                                context.getCurrentHandler().leaveAttribute(___uri, ___local, ___qname);
                                return ;
                            }
                            break;
                        case  3 :
                            revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                            return ;
                    }
                    super.leaveAttribute(___uri, ___local, ___qname);
                    break;
                }
            }

            public void handleText(final java.lang.String value)
                throws org.xml.sax.SAXException
            {
                int attIdx;
                outer:
                while (true) {
                    try {
                        switch (state) {
                            case  0 :
                                state = 3;
                                continue outer;
                            case  1 :
                                attIdx = context.getAttribute("", "template");
                                if (attIdx >= 0) {
                                    context.consumeAttribute(attIdx);
                                    context.getCurrentHandler().text(value);
                                    return ;
                                }
                                break;
                            case  3 :
                                revertToParentFromText(value);
                                return ;
                        }
                    } catch (java.lang.RuntimeException e) {
                        handleUnexpectedTextException(value, e);
                    }
                    break;
                }
            }

        }

    }

}
