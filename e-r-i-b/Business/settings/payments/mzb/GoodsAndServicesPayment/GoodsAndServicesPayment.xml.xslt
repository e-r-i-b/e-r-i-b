<?xml version="1.0" encoding="windows-1251"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
	<xsl:output method="xml" version="1.0" encoding="windows-1251" indent="yes"/>
	<xsl:template match="/form-data">
		<payment>
			<payer-account>
				<xsl:value-of select="payerAccountSelect"/>
			</payer-account>

			<receiver-name>
				<xsl:value-of select="receiverName"/>
			</receiver-name>

			<amount>
				<xsl:value-of select="amount"/>
			</amount>
			<xsl:variable name="addressFull" select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='residenceAddress']"/>
			<xsl:variable name="address">
				<xsl:choose>
					<xsl:when test="contains($addressFull, '–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è,')">
						<xsl:value-of select="concat(substring-before($addressFull,'–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è'),'–†–§',substring-after($addressFull,'–†–æ—Å—Å–∏–π—Å–∫–∞—è –§–µ–¥–µ—Ä–∞—Ü–∏—è'))"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$addressFull"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="appointment" select="appointment"/>
			<xsl:variable name="receiverKey" select="receiverKey"/>
			<xsl:variable name="destination">
				<xsl:choose>
					<xsl:when test="/form-data/appointment='cellular-communication'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ —Å–æ—Ç–æ–≤–æ–π —Å–≤—è–∑–∏ (<xsl:value-of select="receiverName"/>) —Ç–µ–ª. <xsl:value-of select="phoneNumber"/> –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°</xsl:when>
					<xsl:when test="/form-data/appointment='telephony'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ —Ç–µ–ª–µ—Ñ–æ–Ω–∏–∏ (<xsl:value-of select="receiverName"/>) —Ç–µ–ª. <xsl:value-of select="phoneNumber"/> –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='ip-telephony'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç (<xsl:value-of select="receiverName"/>) <xsl:for-each select="document(concat(concat(concat('additionalFields.xml?appointment=',appointment),'&amp;receiverKey='),receiverKey))/entity-list/*">, &#160;<xsl:value-of select="./field[@name='description']"/> &#160;<xsl:variable name="fieldName" select="./field[@name='name']"/>&#160;<xsl:value-of select="/form-data/*[name()=$fieldName]"/></xsl:for-each>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='satellite-connection'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ –∑–∞ —É—Å–ª—É–≥–∏ –∫–æ–º–º–µ—Ä—á. —Ç–µ–ª–µ–≤. (<xsl:value-of select="receiverName"/>) <xsl:for-each select="document(concat(concat(concat('additionalFields.xml?appointment=',appointment),'&amp;receiverKey='),receiverKey))/entity-list/*"><xsl:value-of select="./field[@name='description']"/>&#160;<xsl:variable name="fieldName" select="./field[@name='name']"/>&#160;<xsl:value-of select="/form-data/*[name()=$fieldName]"/>&#160;</xsl:for-each>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='credit-repayment'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!,–∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ –∑–∞ –ø–æ–≥–∞—à–µ–Ω–∏–µ –∫—Ä–µ–¥–∏—Ç–∞. –ü–æ–ª—É—á–∞—Ç–µ–ª—å <xsl:value-of select="receiverName"/> <xsl:for-each select="document(concat(concat(concat('additionalFields.xml?appointment=',appointment),'&amp;receiverKey='),receiverKey))/entity-list/*"><xsl:value-of select="./field[@name='description']"/>&#160;<xsl:variable name="fieldName" select="./field[@name='name']"/>&#160;<xsl:value-of select="/form-data/*[name()=$fieldName]"/>&#160;</xsl:for-each>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='payment-system'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–µ —Å—á–µ—Ç–∞ (<xsl:value-of select="receiverName"/>) <xsl:for-each select="document(concat(concat(concat('additionalFields.xml?appointment=',appointment),'&amp;receiverKey='),receiverKey))/entity-list/*">,&#160;<xsl:value-of select="./field[@name='description']"/> <xsl:variable name="fieldName" select="./field[@name='name']"/>&#160;<xsl:value-of select="/form-data/*[name()=$fieldName]"/>&#160;</xsl:for-each>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='gkh-payment'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>, –æ–ø–ª–∞—Ç–∞ —É—Å–ª—É–≥ –ñ–ö–• <xsl:value-of select="month"/>.<xsl:value-of select="year"/>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
					<xsl:when test="/form-data/appointment='electric-payment'">–ø/–ø –ø–æ –∑–∞—è–≤. –∫–ª-—Ç–∞ –æ—Ç !@date@!, –∞–¥—Ä–µ—Å: <xsl:value-of select="$address"/>,–æ–ø–ª–∞—Ç–∞ –∑–∞ —ç–ª–µ–∫—Ç—Ä–æ—ç–Ω–µ—Ä–≥–∏—é <xsl:value-of select="receiverName"/> –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã <xsl:value-of select="month"/>.<xsl:value-of select="year"/>, –±–µ–∑ –Ω–∞–ª–æ–≥–∞ –ù–î–°.</xsl:when>
				</xsl:choose>
			</xsl:variable>
			<extra-parameters>
                <parameter name="amount-currency"
                           value="{amountCurrency}"
                           type="string"
                           />
				 <parameter name="receiver-key"
                           value="{receiverKey}"
                           type="string"
                           />
				<parameter name="from-account-type"
                           value="{fromAccountType}"
                           type="string"
                           />
				<parameter name="from-account-amount"
                           value="{fromAccountAmount}"
                           type="string"
                           />
				<xsl:apply-templates select="/form-data/*[name() != '']"/>
				<parameter name="destination"
						   value="{$destination}"
					 	   type="string"/>
			</extra-parameters>
			<ground>
				<xsl:choose>
					<xsl:when test="/form-data/appointment='cellular-communication'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='credit-repayment'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='satellite-connection'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='ip-telephony'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='telephony'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='payment-system'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='electric-payment'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
					<xsl:when test="/form-data/appointment='gkh-payment'"><xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='surName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='firstName']"/>&#160;<xsl:value-of select="document('currentPerson.xml')/entity-list/entity[@key='person']/field[@name='patrName']"/></xsl:when>
				</xsl:choose>
			</ground>
		</payment>
	</xsl:template>

	<!-- ˝ÚË ÔÓÎˇ ÛÊÂ ‚ÒÚ‡‚ËÎË -->
	<xsl:template match="/form-data/payerAccountSelect">
	</xsl:template>
	<xsl:template match="/form-data/receiverName"/>
	<xsl:template match="/form-data/amount"/>

	<!-- ‰ÓÔ ÔÓÎˇ -->
	<xsl:template match="/form-data/*" priority="-99">
		<parameter name="{name()}" value="{text()}" type="string"/>
	</xsl:template>

</xsl:stylesheet><!-- Stylus Studio meta-information - (c) 2004-2005. Progress Software Corporation. All rights reserved.
<metaInformation>
<scenarios ><scenario default="yes" name="Scenario1" userelativepaths="yes" externalpreview="no" url="form&#x2D;data.xml" htmlbaseurl="" outputurl="" processortype="internal" useresolver="yes" profilemode="0" profiledepth="" profilelength="" urlprofilexml="" commandline="" additionalpath="" additionalclasspath="" postprocessortype="none" postprocesscommandline="" postprocessadditionalpath="" postprocessgeneratedext="" validateoutput="no" validator="internal" customvalidator=""/></scenarios><MapperMetaTag><MapperInfo srcSchemaPathIsRelative="yes" srcSchemaInterpretAsXML="no" destSchemaPath="" destSchemaRoot="" destSchemaPathIsRelative="yes" destSchemaInterpretAsXML="no"/><MapperBlockPosition></MapperBlockPosition><TemplateContext></TemplateContext><MapperFilter side="source"></MapperFilter></MapperMetaTag>
</metaInformation>
-->