<?xml version="1.0" encoding="windows-1251"?>
<payment-list xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="../../PaymentList.xsd"
		title='Список переводов "Оплата покупок и услуг"'
>
	<filter>
		<fields>
			<field name="state" description="Статус"/>
			<field name="state_list" description="Вспомогательный статус"/>
			<field name="minAmount" description="Минимальная сумма" type="money">
				<validators>
					<validator class="com.rssl.common.forms.validators.MoneyFieldValidator"/>
				</validators>
			</field>
			<field name="maxAmount" description="Максимальная сумма" type="money">
				<validators>
					<validator class="com.rssl.common.forms.validators.MoneyFieldValidator"/>
				</validators>
			</field>
			<field name="fromDate" description="Начальная дата" type="date">
				<validators>
					<validator class="com.rssl.common.forms.validators.DateFieldValidator"/>
				</validators>
			</field>
			<field name="toDate" description="Конечная дата" type="date">
				<validators>
					<validator class="com.rssl.common.forms.validators.DateFieldValidator"/>
				</validators>
			</field>
			<field name="payerAccount" description="Счет списания"/>
		</fields>
		<form-validators>
			<form-validator class="com.rssl.common.forms.validators.CompareValidator">
				<message text="Конечная дата должна быть больше либо равна начальной"/>
				<field-ref name="obj1">fromDate</field-ref>
				<field-ref name="obj2">toDate</field-ref>
				<parameter name="operator">le</parameter>
			</form-validator>
		</form-validators>
	</filter>
	<hql-query>
		<returnKey property="id"/>
		<return property="dateCreated"/>
		<return property="chargeOffAccount"/>
		<return property="receiverName"/>
		<return property="chargeOffAmount.decimal"/>
		<return property="chargeOffAmount.currency.code"/>
		<return property="state.code"/>
		<return property="state.category"/>
		<return property="state.description"/>
		<return property="documentNumber"/>
		<![CDATA[
			select payment
				from com.rssl.phizic.business.documents.payments.GoodsAndServicesPayment as payment
			where   payment.owner.id = :loginId
				and (:state is null           or :state = '' or payment.state.code = :state)
				and (:minAmount is null       or payment.chargeOffAmount.decimal >= :minAmount)
				and (:maxAmount is null       or payment.chargeOffAmount.decimal <= :maxAmount)
				and (:fromDate is null        or payment.dateCreated >= :fromDate)
				and (:toDate is null          or payment.dateCreated <= :toDate  )
				and (:payerAccount is null    or :payerAccount = '' or payment.chargeOffAccount = :payerAccount)
				and (:appointment is null     or :appointment ='' or payment.attributes['appointment'].stringValue = :appointment)
		    order by payment.dateCreated asc, payment.id desc
	</hql-query>
</payment-list>
