// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.gate.templates.services.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class ReminderInfo_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_createdDate_QNAME = new QName("", "createdDate");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_dayOfMonth_QNAME = new QName("", "dayOfMonth");
    private static final javax.xml.namespace.QName ns4_int_TYPE_QNAME = SOAPConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns4_myns4__int__java_lang_Integer_Int_Serializer;
    private static final javax.xml.namespace.QName ns1_monthOfQuarter_QNAME = new QName("", "monthOfQuarter");
    private static final javax.xml.namespace.QName ns1_onceDate_QNAME = new QName("", "onceDate");
    private static final javax.xml.namespace.QName ns1_type_QNAME = new QName("", "type");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final int myCREATEDDATE_INDEX = 0;
    private static final int myDAYOFMONTH_INDEX = 1;
    private static final int myMONTHOFQUARTER_INDEX = 2;
    private static final int myONCEDATE_INDEX = 3;
    private static final int myTYPE_INDEX = 4;
    
    public ReminderInfo_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns4_myns4__int__java_lang_Integer_Int_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Integer.class, ns4_int_TYPE_QNAME);
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.ReminderInfo instance = new com.rssl.phizic.gate.templates.services.generated.ReminderInfo();
        com.rssl.phizic.gate.templates.services.generated.ReminderInfo_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_createdDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_createdDate_QNAME, reader, context);
                instance.setCreatedDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_dayOfMonth_QNAME)) {
                member = ns4_myns4__int__java_lang_Integer_Int_Serializer.deserialize(ns1_dayOfMonth_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.ReminderInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDAYOFMONTH_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDayOfMonth((java.lang.Integer)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_monthOfQuarter_QNAME)) {
                member = ns4_myns4__int__java_lang_Integer_Int_Serializer.deserialize(ns1_monthOfQuarter_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.ReminderInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMONTHOFQUARTER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMonthOfQuarter((java.lang.Integer)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_onceDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_onceDate_QNAME, reader, context);
                instance.setOnceDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_type_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_type_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.ReminderInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.ReminderInfo instance = (com.rssl.phizic.gate.templates.services.generated.ReminderInfo)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.ReminderInfo instance = (com.rssl.phizic.gate.templates.services.generated.ReminderInfo)obj;
        
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getCreatedDate(), ns1_createdDate_QNAME, null, writer, context);
        ns4_myns4__int__java_lang_Integer_Int_Serializer.serialize(instance.getDayOfMonth(), ns1_dayOfMonth_QNAME, null, writer, context);
        ns4_myns4__int__java_lang_Integer_Int_Serializer.serialize(instance.getMonthOfQuarter(), ns1_monthOfQuarter_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getOnceDate(), ns1_onceDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getType(), ns1_type_QNAME, null, writer, context);
    }
}
