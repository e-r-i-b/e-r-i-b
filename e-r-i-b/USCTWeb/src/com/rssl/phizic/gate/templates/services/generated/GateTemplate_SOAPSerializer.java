// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.gate.templates.services.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.streaming.XMLReader;
import com.sun.xml.rpc.streaming.XMLReaderUtil;
import com.sun.xml.rpc.streaming.XMLWriter;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;

import javax.xml.namespace.QName;

public class GateTemplate_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_accountNumber_QNAME = new QName("", "accountNumber");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_additionalInfo_QNAME = new QName("", "additionalInfo");
    private static final javax.xml.namespace.QName ns1_additionalOperationChannel_QNAME = new QName("", "additionalOperationChannel");
    private static final javax.xml.namespace.QName ns1_additionalOperationDate_QNAME = new QName("", "additionalOperationDate");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_admissionDate_QNAME = new QName("", "admissionDate");
    private static final javax.xml.namespace.QName ns1_agreementNumber_QNAME = new QName("", "agreementNumber");
    private static final javax.xml.namespace.QName ns1_authorizeCode_QNAME = new QName("", "authorizeCode");
    private static final javax.xml.namespace.QName ns1_authorizeDate_QNAME = new QName("", "authorizeDate");
    private static final javax.xml.namespace.QName ns1_billingClientId_QNAME = new QName("", "billingClientId");
    private static final javax.xml.namespace.QName ns1_billingCode_QNAME = new QName("", "billingCode");
    private static final javax.xml.namespace.QName ns1_chargeOffAccount_QNAME = new QName("", "chargeOffAccount");
    private static final javax.xml.namespace.QName ns1_chargeOffAmount_QNAME = new QName("", "chargeOffAmount");
    private static final javax.xml.namespace.QName ns2_Money_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Money");
    private CombinedSerializer ns2_myMoney_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_chargeOffCard_QNAME = new QName("", "chargeOffCard");
    private static final javax.xml.namespace.QName ns1_chargeOffCardAccount_QNAME = new QName("", "chargeOffCardAccount");
    private static final javax.xml.namespace.QName ns1_chargeOffCardDescription_QNAME = new QName("", "chargeOffCardDescription");
    private static final javax.xml.namespace.QName ns1_chargeOffCardExpireDate_QNAME = new QName("", "chargeOffCardExpireDate");
    private static final javax.xml.namespace.QName ns1_chargeOffCurrency_QNAME = new QName("", "chargeOffCurrency");
    private static final javax.xml.namespace.QName ns2_Currency_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Currency");
    private CombinedSerializer ns2_myCurrency_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_clientCreationChannel_QNAME = new QName("", "clientCreationChannel");
    private static final javax.xml.namespace.QName ns1_clientCreationDate_QNAME = new QName("", "clientCreationDate");
    private static final javax.xml.namespace.QName ns1_clientOperationChannel_QNAME = new QName("", "clientOperationChannel");
    private static final javax.xml.namespace.QName ns1_clientOperationDate_QNAME = new QName("", "clientOperationDate");
    private static final javax.xml.namespace.QName ns1_clientOwner_QNAME = new QName("", "clientOwner");
    private static final javax.xml.namespace.QName ns2_Client_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Client");
    private CombinedSerializer ns2_myClient_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_commission_QNAME = new QName("", "commission");
    private static final javax.xml.namespace.QName ns1_commissionOptions_QNAME = new QName("", "commissionOptions");
    private static final javax.xml.namespace.QName ns2_CommissionOptions_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "CommissionOptions");
    private CombinedSerializer ns2_myCommissionOptions_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_confirmedEmployeeInfo_QNAME = new QName("", "confirmedEmployeeInfo");
    private static final javax.xml.namespace.QName ns2_EmployeeInfo_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "EmployeeInfo");
    private CombinedSerializer ns2_myEmployeeInfo_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_convertionRate_QNAME = new QName("", "convertionRate");
    private static final javax.xml.namespace.QName ns3_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final javax.xml.namespace.QName ns1_corrDepoAccount_QNAME = new QName("", "corrDepoAccount");
    private static final javax.xml.namespace.QName ns1_corrDepoAccountOwner_QNAME = new QName("", "corrDepoAccountOwner");
    private static final javax.xml.namespace.QName ns1_corrDepositary_QNAME = new QName("", "corrDepositary");
    private static final javax.xml.namespace.QName ns1_createdEmployeeInfo_QNAME = new QName("", "createdEmployeeInfo");
    private static final javax.xml.namespace.QName ns1_creditBuyRate_QNAME = new QName("", "creditBuyRate");
    private static final javax.xml.namespace.QName ns2_CurrencyRate_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "CurrencyRate");
    private CombinedSerializer ns2_myCurrencyRate_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_creditSaleRate_QNAME = new QName("", "creditSaleRate");
    private static final javax.xml.namespace.QName ns1_debetBuyRate_QNAME = new QName("", "debetBuyRate");
    private static final javax.xml.namespace.QName ns1_debetSaleRate_QNAME = new QName("", "debetSaleRate");
    private static final javax.xml.namespace.QName ns1_deliveryType_QNAME = new QName("", "deliveryType");
    private static final javax.xml.namespace.QName ns1_depoAccountNumber_QNAME = new QName("", "depoAccountNumber");
    private static final javax.xml.namespace.QName ns1_depoExternalId_QNAME = new QName("", "depoExternalId");
    private static final javax.xml.namespace.QName ns1_destinationAmount_QNAME = new QName("", "destinationAmount");
    private static final javax.xml.namespace.QName ns1_destinationCurrency_QNAME = new QName("", "destinationCurrency");
    private static final javax.xml.namespace.QName ns1_divisionNumber_QNAME = new QName("", "divisionNumber");
    private static final javax.xml.namespace.QName ns1_divisionType_QNAME = new QName("", "divisionType");
    private static final javax.xml.namespace.QName ns1_documentNumber_QNAME = new QName("", "documentNumber");
    private static final javax.xml.namespace.QName ns1_executionDate_QNAME = new QName("", "executionDate");
    private static final javax.xml.namespace.QName ns1_extendedAttributes_QNAME = new QName("", "extendedAttributes");
    private static final javax.xml.namespace.QName ns5_map_TYPE_QNAME = InternalEncodingConstants.QNAME_TYPE_MAP;
    private CombinedSerializer ns5_myns5_map__MapInterfaceSerializer;
    private static final javax.xml.namespace.QName ns1_extendedFields_QNAME = new QName("", "extendedFields");
    private static final javax.xml.namespace.QName ns5_list_TYPE_QNAME = InternalEncodingConstants.QNAME_TYPE_LIST;
    private CombinedSerializer ns5_myns5_list__CollectionInterfaceSerializer;
    private static final javax.xml.namespace.QName ns1_externalId_QNAME = new QName("", "externalId");
    private static final javax.xml.namespace.QName ns1_formType_QNAME = new QName("", "formType");
    private static final javax.xml.namespace.QName ns1_ground_QNAME = new QName("", "ground");
    private static final javax.xml.namespace.QName ns1_id_QNAME = new QName("", "id");
    private static final javax.xml.namespace.QName ns4_long_TYPE_QNAME = SOAPConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns4_myns4__long__java_lang_Long_Long_Serializer;
    private static final javax.xml.namespace.QName ns1_idFromPaymentSystem_QNAME = new QName("", "idFromPaymentSystem");
    private static final javax.xml.namespace.QName ns1_idSpacing_QNAME = new QName("", "idSpacing");
    private static final javax.xml.namespace.QName ns1_inputSumType_QNAME = new QName("", "inputSumType");
    private static final javax.xml.namespace.QName ns1_insideCode_QNAME = new QName("", "insideCode");
    private static final javax.xml.namespace.QName ns1_loanExternalId_QNAME = new QName("", "loanExternalId");
    private static final javax.xml.namespace.QName ns1_mbOperCode_QNAME = new QName("", "mbOperCode");
    private static final javax.xml.namespace.QName ns1_multiBlockReceiverPointCode_QNAME = new QName("", "multiBlockReceiverPointCode");
    private static final javax.xml.namespace.QName ns1_nextState_QNAME = new QName("", "nextState");
    private static final javax.xml.namespace.QName ns1_notVisibleBankDetails_QNAME = new QName("", "notVisibleBankDetails");
    private static final javax.xml.namespace.QName ns3_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer ns3_myns3__boolean__boolean_Boolean_Serializer;
    private static final javax.xml.namespace.QName ns1_office_QNAME = new QName("", "office");
    private static final javax.xml.namespace.QName ns2_Office_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Office");
    private CombinedSerializer ns2_myOffice_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_operType_QNAME = new QName("", "operType");
    private static final javax.xml.namespace.QName ns1_operationCode_QNAME = new QName("", "operationCode");
    private static final javax.xml.namespace.QName ns1_operationDesc_QNAME = new QName("", "operationDesc");
    private static final javax.xml.namespace.QName ns1_operationReason_QNAME = new QName("", "operationReason");
    private static final javax.xml.namespace.QName ns1_operationSubType_QNAME = new QName("", "operationSubType");
    private static final javax.xml.namespace.QName ns1_operationUID_QNAME = new QName("", "operationUID");
    private static final javax.xml.namespace.QName ns1_receiverAccount_QNAME = new QName("", "receiverAccount");
    private static final javax.xml.namespace.QName ns1_receiverBank_QNAME = new QName("", "receiverBank");
    private static final javax.xml.namespace.QName ns2_ResidentBank_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "ResidentBank");
    private CombinedSerializer ns2_myResidentBank_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_receiverCard_QNAME = new QName("", "receiverCard");
    private static final javax.xml.namespace.QName ns1_receiverCardExpireDate_QNAME = new QName("", "receiverCardExpireDate");
    private static final javax.xml.namespace.QName ns1_receiverCardType_QNAME = new QName("", "receiverCardType");
    private static final javax.xml.namespace.QName ns1_receiverFirstName_QNAME = new QName("", "receiverFirstName");
    private static final javax.xml.namespace.QName ns1_receiverINN_QNAME = new QName("", "receiverINN");
    private static final javax.xml.namespace.QName ns1_receiverInternalId_QNAME = new QName("", "receiverInternalId");
    private static final javax.xml.namespace.QName ns1_receiverKPP_QNAME = new QName("", "receiverKPP");
    private static final javax.xml.namespace.QName ns1_receiverName_QNAME = new QName("", "receiverName");
    private static final javax.xml.namespace.QName ns1_receiverNameForBill_QNAME = new QName("", "receiverNameForBill");
    private static final javax.xml.namespace.QName ns1_receiverOfficeCode_QNAME = new QName("", "receiverOfficeCode");
    private static final javax.xml.namespace.QName ns2_Code_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Code");
    private CombinedSerializer ns2_myCode_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_receiverPatrName_QNAME = new QName("", "receiverPatrName");
    private static final javax.xml.namespace.QName ns1_receiverPhone_QNAME = new QName("", "receiverPhone");
    private static final javax.xml.namespace.QName ns1_receiverPointCode_QNAME = new QName("", "receiverPointCode");
    private static final javax.xml.namespace.QName ns1_receiverSurName_QNAME = new QName("", "receiverSurName");
    private static final javax.xml.namespace.QName ns1_receiverTransitAccount_QNAME = new QName("", "receiverTransitAccount");
    private static final javax.xml.namespace.QName ns1_receiverTransitBank_QNAME = new QName("", "receiverTransitBank");
    private static final javax.xml.namespace.QName ns1_registerNumber_QNAME = new QName("", "registerNumber");
    private static final javax.xml.namespace.QName ns1_registerString_QNAME = new QName("", "registerString");
    private static final javax.xml.namespace.QName ns1_registrationNumber_QNAME = new QName("", "registrationNumber");
    private static final javax.xml.namespace.QName ns1_reminderInfo_QNAME = new QName("", "reminderInfo");
    private static final javax.xml.namespace.QName ns2_ReminderInfo_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "ReminderInfo");
    private CombinedSerializer ns2_myReminderInfo_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_salesCheck_QNAME = new QName("", "salesCheck");
    private static final javax.xml.namespace.QName ns1_securityCount_QNAME = new QName("", "securityCount");
    private static final javax.xml.namespace.QName ns1_sendNodeNumber_QNAME = new QName("", "sendNodeNumber");
    private static final javax.xml.namespace.QName ns1_service_QNAME = new QName("", "service");
    private static final javax.xml.namespace.QName ns2_Service_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "Service");
    private CombinedSerializer ns2_myService_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_spacingDate_QNAME = new QName("", "spacingDate");
    private static final javax.xml.namespace.QName ns1_state_QNAME = new QName("", "state");
    private static final javax.xml.namespace.QName ns2_State_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "State");
    private CombinedSerializer ns2_myState_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_template_QNAME = new QName("", "template");
    private static final javax.xml.namespace.QName ns1_templateInfo_QNAME = new QName("", "templateInfo");
    private static final javax.xml.namespace.QName ns2_TemplateInfo_TYPE_QNAME = new QName("http://generated.services.templates.gate.phizic.rssl.com", "TemplateInfo");
    private CombinedSerializer ns2_myTemplateInfo_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_type_QNAME = new QName("", "type");
    private static final javax.xml.namespace.QName ns1_writeDownOperations_QNAME = new QName("", "writeDownOperations");
    private static final int myACCOUNTNUMBER_INDEX = 0;
    private static final int myADDITIONALINFO_INDEX = 1;
    private static final int myADDITIONALOPERATIONCHANNEL_INDEX = 2;
    private static final int myADDITIONALOPERATIONDATE_INDEX = 3;
    private static final int myADMISSIONDATE_INDEX = 4;
    private static final int myAGREEMENTNUMBER_INDEX = 5;
    private static final int myAUTHORIZECODE_INDEX = 6;
    private static final int myAUTHORIZEDATE_INDEX = 7;
    private static final int myBILLINGCLIENTID_INDEX = 8;
    private static final int myBILLINGCODE_INDEX = 9;
    private static final int myCHARGEOFFACCOUNT_INDEX = 10;
    private static final int myCHARGEOFFAMOUNT_INDEX = 11;
    private static final int myCHARGEOFFCARD_INDEX = 12;
    private static final int myCHARGEOFFCARDACCOUNT_INDEX = 13;
    private static final int myCHARGEOFFCARDDESCRIPTION_INDEX = 14;
    private static final int myCHARGEOFFCARDEXPIREDATE_INDEX = 15;
    private static final int myCHARGEOFFCURRENCY_INDEX = 16;
    private static final int myCLIENTCREATIONCHANNEL_INDEX = 17;
    private static final int myCLIENTCREATIONDATE_INDEX = 18;
    private static final int myCLIENTOPERATIONCHANNEL_INDEX = 19;
    private static final int myCLIENTOPERATIONDATE_INDEX = 20;
    private static final int myCLIENTOWNER_INDEX = 21;
    private static final int myCOMMISSION_INDEX = 22;
    private static final int myCOMMISSIONOPTIONS_INDEX = 23;
    private static final int myCONFIRMEDEMPLOYEEINFO_INDEX = 24;
    private static final int myCONVERTIONRATE_INDEX = 25;
    private static final int myCORRDEPOACCOUNT_INDEX = 26;
    private static final int myCORRDEPOACCOUNTOWNER_INDEX = 27;
    private static final int myCORRDEPOSITARY_INDEX = 28;
    private static final int myCREATEDEMPLOYEEINFO_INDEX = 29;
    private static final int myCREDITBUYRATE_INDEX = 30;
    private static final int myCREDITSALERATE_INDEX = 31;
    private static final int myDEBETBUYRATE_INDEX = 32;
    private static final int myDEBETSALERATE_INDEX = 33;
    private static final int myDELIVERYTYPE_INDEX = 34;
    private static final int myDEPOACCOUNTNUMBER_INDEX = 35;
    private static final int myDEPOEXTERNALID_INDEX = 36;
    private static final int myDESTINATIONAMOUNT_INDEX = 37;
    private static final int myDESTINATIONCURRENCY_INDEX = 38;
    private static final int myDIVISIONNUMBER_INDEX = 39;
    private static final int myDIVISIONTYPE_INDEX = 40;
    private static final int myDOCUMENTNUMBER_INDEX = 41;
    private static final int myEXECUTIONDATE_INDEX = 42;
    private static final int myEXTENDEDATTRIBUTES_INDEX = 43;
    private static final int myEXTENDEDFIELDS_INDEX = 44;
    private static final int myEXTERNALID_INDEX = 45;
    private static final int myFORMTYPE_INDEX = 46;
    private static final int myGROUND_INDEX = 47;
    private static final int myID_INDEX = 48;
    private static final int myIDFROMPAYMENTSYSTEM_INDEX = 49;
    private static final int myIDSPACING_INDEX = 50;
    private static final int myINPUTSUMTYPE_INDEX = 51;
    private static final int myINSIDECODE_INDEX = 52;
    private static final int myLOANEXTERNALID_INDEX = 53;
    private static final int myMBOPERCODE_INDEX = 54;
    private static final int myMULTIBLOCKRECEIVERPOINTCODE_INDEX = 55;
    private static final int myNEXTSTATE_INDEX = 56;
    private static final int myNOTVISIBLEBANKDETAILS_INDEX = 57;
    private static final int myOFFICE_INDEX = 58;
    private static final int myOPERTYPE_INDEX = 59;
    private static final int myOPERATIONCODE_INDEX = 60;
    private static final int myOPERATIONDESC_INDEX = 61;
    private static final int myOPERATIONREASON_INDEX = 62;
    private static final int myOPERATIONSUBTYPE_INDEX = 63;
    private static final int myOPERATIONUID_INDEX = 64;
    private static final int myRECEIVERACCOUNT_INDEX = 65;
    private static final int myRECEIVERBANK_INDEX = 66;
    private static final int myRECEIVERCARD_INDEX = 67;
    private static final int myRECEIVERCARDEXPIREDATE_INDEX = 68;
    private static final int myRECEIVERCARDTYPE_INDEX = 69;
    private static final int myRECEIVERFIRSTNAME_INDEX = 70;
    private static final int myRECEIVERINN_INDEX = 71;
    private static final int myRECEIVERINTERNALID_INDEX = 72;
    private static final int myRECEIVERKPP_INDEX = 73;
    private static final int myRECEIVERNAME_INDEX = 74;
    private static final int myRECEIVERNAMEFORBILL_INDEX = 75;
    private static final int myRECEIVEROFFICECODE_INDEX = 76;
    private static final int myRECEIVERPATRNAME_INDEX = 77;
    private static final int myRECEIVERPHONE_INDEX = 78;
    private static final int myRECEIVERPOINTCODE_INDEX = 79;
    private static final int myRECEIVERSURNAME_INDEX = 80;
    private static final int myRECEIVERTRANSITACCOUNT_INDEX = 81;
    private static final int myRECEIVERTRANSITBANK_INDEX = 82;
    private static final int myREGISTERNUMBER_INDEX = 83;
    private static final int myREGISTERSTRING_INDEX = 84;
    private static final int myREGISTRATIONNUMBER_INDEX = 85;
    private static final int myREMINDERINFO_INDEX = 86;
    private static final int mySALESCHECK_INDEX = 87;
    private static final int mySECURITYCOUNT_INDEX = 88;
    private static final int mySENDNODENUMBER_INDEX = 89;
    private static final int mySERVICE_INDEX = 90;
    private static final int mySPACINGDATE_INDEX = 91;
    private static final int mySTATE_INDEX = 92;
    private static final int myTEMPLATE_INDEX = 93;
    private static final int myTEMPLATEINFO_INDEX = 94;
    private static final int myTYPE_INDEX = 95;
    private static final int myWRITEDOWNOPERATIONS_INDEX = 96;
    
    public GateTemplate_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns2_myMoney_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Money.class, ns2_Money_TYPE_QNAME);
        ns2_myCurrency_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Currency.class, ns2_Currency_TYPE_QNAME);
        ns2_myClient_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Client.class, ns2_Client_TYPE_QNAME);
        ns2_myCommissionOptions_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.CommissionOptions.class, ns2_CommissionOptions_TYPE_QNAME);
        ns2_myEmployeeInfo_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.EmployeeInfo.class, ns2_EmployeeInfo_TYPE_QNAME);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.math.BigDecimal.class, ns3_decimal_TYPE_QNAME);
        ns2_myCurrencyRate_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.CurrencyRate.class, ns2_CurrencyRate_TYPE_QNAME);
        ns5_myns5_map__MapInterfaceSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Map.class, ns5_map_TYPE_QNAME);
        ns5_myns5_list__CollectionInterfaceSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.List.class, ns5_list_TYPE_QNAME);
        ns4_myns4__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Long.class, ns4_long_TYPE_QNAME);
        ns3_myns3__boolean__boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, boolean.class, ns3_boolean_TYPE_QNAME);
        ns2_myOffice_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Office.class, ns2_Office_TYPE_QNAME);
        ns2_myResidentBank_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.ResidentBank.class, ns2_ResidentBank_TYPE_QNAME);
        ns2_myCode_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Code.class, ns2_Code_TYPE_QNAME);
        ns2_myReminderInfo_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.ReminderInfo.class, ns2_ReminderInfo_TYPE_QNAME);
        ns2_myService_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.Service.class, ns2_Service_TYPE_QNAME);
        ns2_myState_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.State.class, ns2_State_TYPE_QNAME);
        ns2_myTemplateInfo_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.gate.templates.services.generated.TemplateInfo.class, ns2_TemplateInfo_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.GateTemplate instance = new com.rssl.phizic.gate.templates.services.generated.GateTemplate();
        com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_accountNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_accountNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myACCOUNTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAccountNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_additionalInfo_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_additionalInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myADDITIONALINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAdditionalInfo((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_additionalOperationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_additionalOperationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myADDITIONALOPERATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAdditionalOperationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_additionalOperationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_additionalOperationDate_QNAME, reader, context);
                instance.setAdditionalOperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_admissionDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_admissionDate_QNAME, reader, context);
                instance.setAdmissionDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_agreementNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_agreementNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAGREEMENTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAgreementNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authorizeCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_authorizeCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAUTHORIZECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAuthorizeCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authorizeDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_authorizeDate_QNAME, reader, context);
                instance.setAuthorizeDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_billingClientId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_billingClientId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBILLINGCLIENTID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBillingClientId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_billingCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_billingCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBILLINGCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBillingCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_chargeOffAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffAmount((com.rssl.phizic.gate.templates.services.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCard_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffCard_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCARD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCard((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCardAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffCardAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCARDACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCardAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCardDescription_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffCardDescription_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCARDDESCRIPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCardDescription((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCardExpireDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_chargeOffCardExpireDate_QNAME, reader, context);
                instance.setChargeOffCardExpireDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCurrency_QNAME)) {
                member = ns2_myCurrency_SOAPSerializer.deserialize(ns1_chargeOffCurrency_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCURRENCY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCurrency((com.rssl.phizic.gate.templates.services.generated.Currency)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientCreationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_clientCreationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTCREATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientCreationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientCreationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_clientCreationDate_QNAME, reader, context);
                instance.setClientCreationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientOperationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_clientOperationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTOPERATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientOperationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientOperationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_clientOperationDate_QNAME, reader, context);
                instance.setClientOperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientOwner_QNAME)) {
                member = ns2_myClient_SOAPSerializer.deserialize(ns1_clientOwner_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTOWNER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientOwner((com.rssl.phizic.gate.templates.services.generated.Client)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_commission_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_commission_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMMISSION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCommission((com.rssl.phizic.gate.templates.services.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_commissionOptions_QNAME)) {
                member = ns2_myCommissionOptions_SOAPSerializer.deserialize(ns1_commissionOptions_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMMISSIONOPTIONS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCommissionOptions((com.rssl.phizic.gate.templates.services.generated.CommissionOptions)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmedEmployeeInfo_QNAME)) {
                member = ns2_myEmployeeInfo_SOAPSerializer.deserialize(ns1_confirmedEmployeeInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONFIRMEDEMPLOYEEINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConfirmedEmployeeInfo((com.rssl.phizic.gate.templates.services.generated.EmployeeInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_convertionRate_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_convertionRate_QNAME, reader, context);
                instance.setConvertionRate((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_corrDepoAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_corrDepoAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCORRDEPOACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCorrDepoAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_corrDepoAccountOwner_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_corrDepoAccountOwner_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCORRDEPOACCOUNTOWNER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCorrDepoAccountOwner((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_corrDepositary_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_corrDepositary_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCORRDEPOSITARY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCorrDepositary((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_createdEmployeeInfo_QNAME)) {
                member = ns2_myEmployeeInfo_SOAPSerializer.deserialize(ns1_createdEmployeeInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREATEDEMPLOYEEINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreatedEmployeeInfo((com.rssl.phizic.gate.templates.services.generated.EmployeeInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_creditBuyRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_creditBuyRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREDITBUYRATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreditBuyRate((com.rssl.phizic.gate.templates.services.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_creditSaleRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_creditSaleRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREDITSALERATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreditSaleRate((com.rssl.phizic.gate.templates.services.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_debetBuyRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_debetBuyRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEBETBUYRATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDebetBuyRate((com.rssl.phizic.gate.templates.services.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_debetSaleRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_debetSaleRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEBETSALERATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDebetSaleRate((com.rssl.phizic.gate.templates.services.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_deliveryType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_deliveryType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDELIVERYTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDeliveryType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_depoAccountNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_depoAccountNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPOACCOUNTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepoAccountNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_depoExternalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_depoExternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPOEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepoExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_destinationAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_destinationAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDESTINATIONAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDestinationAmount((com.rssl.phizic.gate.templates.services.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_destinationCurrency_QNAME)) {
                member = ns2_myCurrency_SOAPSerializer.deserialize(ns1_destinationCurrency_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDESTINATIONCURRENCY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDestinationCurrency((com.rssl.phizic.gate.templates.services.generated.Currency)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_divisionNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_divisionNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDIVISIONNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDivisionNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_divisionType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_divisionType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDIVISIONTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDivisionType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_documentNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_documentNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDOCUMENTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDocumentNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_executionDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_executionDate_QNAME, reader, context);
                instance.setExecutionDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_extendedAttributes_QNAME)) {
                member = ns5_myns5_map__MapInterfaceSerializer.deserialize(ns1_extendedAttributes_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTENDEDATTRIBUTES_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExtendedAttributes((java.util.Map)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_extendedFields_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_extendedFields_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTENDEDFIELDS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExtendedFields((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_externalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_externalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_formType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_formType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFORMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFormType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ground_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_ground_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myGROUND_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setGround((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_id_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_id_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_idFromPaymentSystem_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_idFromPaymentSystem_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myIDFROMPAYMENTSYSTEM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIdFromPaymentSystem((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_idSpacing_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_idSpacing_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myIDSPACING_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIdSpacing((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_inputSumType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_inputSumType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINPUTSUMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInputSumType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_insideCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_insideCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINSIDECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInsideCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_loanExternalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_loanExternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myLOANEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setLoanExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_mbOperCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_mbOperCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMBOPERCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMbOperCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_multiBlockReceiverPointCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_multiBlockReceiverPointCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMULTIBLOCKRECEIVERPOINTCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMultiBlockReceiverPointCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_nextState_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_nextState_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myNEXTSTATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setNextState((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_notVisibleBankDetails_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_notVisibleBankDetails_QNAME, reader, context);
                instance.setNotVisibleBankDetails(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_office_QNAME)) {
                member = ns2_myOffice_SOAPSerializer.deserialize(ns1_office_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOFFICE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOffice((com.rssl.phizic.gate.templates.services.generated.Office)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationDesc_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationDesc_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONDESC_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationDesc((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationReason_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationReason_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONREASON_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationReason((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationSubType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationSubType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONSUBTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationSubType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationUID_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationUID_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONUID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationUID((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverBank_QNAME)) {
                member = ns2_myResidentBank_SOAPSerializer.deserialize(ns1_receiverBank_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERBANK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverBank((com.rssl.phizic.gate.templates.services.generated.ResidentBank)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCard_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverCard_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERCARD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverCard((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCardExpireDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_receiverCardExpireDate_QNAME, reader, context);
                instance.setReceiverCardExpireDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCardType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverCardType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERCARDTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverCardType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverFirstName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverFirstName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERFIRSTNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverFirstName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverINN_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverINN_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERINN_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverINN((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverInternalId_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_receiverInternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERINTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverInternalId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverKPP_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverKPP_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERKPP_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverKPP((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverNameForBill_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverNameForBill_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERNAMEFORBILL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverNameForBill((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverOfficeCode_QNAME)) {
                member = ns2_myCode_SOAPSerializer.deserialize(ns1_receiverOfficeCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVEROFFICECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverOfficeCode((com.rssl.phizic.gate.templates.services.generated.Code)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPatrName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPatrName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPATRNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPatrName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPhone_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPhone_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPHONE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPhone((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPointCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPointCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPOINTCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPointCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverSurName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverSurName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERSURNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverSurName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverTransitAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverTransitAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERTRANSITACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverTransitAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverTransitBank_QNAME)) {
                member = ns2_myResidentBank_SOAPSerializer.deserialize(ns1_receiverTransitBank_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERTRANSITBANK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverTransitBank((com.rssl.phizic.gate.templates.services.generated.ResidentBank)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_registerNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_registerNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGISTERNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegisterNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_registerString_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_registerString_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGISTERSTRING_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegisterString((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_registrationNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_registrationNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGISTRATIONNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegistrationNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_reminderInfo_QNAME)) {
                member = ns2_myReminderInfo_SOAPSerializer.deserialize(ns1_reminderInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREMINDERINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReminderInfo((com.rssl.phizic.gate.templates.services.generated.ReminderInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_salesCheck_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_salesCheck_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySALESCHECK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSalesCheck((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_securityCount_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_securityCount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySECURITYCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSecurityCount((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_sendNodeNumber_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_sendNodeNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySENDNODENUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSendNodeNumber((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_service_QNAME)) {
                member = ns2_myService_SOAPSerializer.deserialize(ns1_service_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySERVICE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setService((com.rssl.phizic.gate.templates.services.generated.Service)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_spacingDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_spacingDate_QNAME, reader, context);
                instance.setSpacingDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_state_QNAME)) {
                member = ns2_myState_SOAPSerializer.deserialize(ns1_state_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySTATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setState((com.rssl.phizic.gate.templates.services.generated.State)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_template_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_template_QNAME, reader, context);
                instance.setTemplate(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_templateInfo_QNAME)) {
                member = ns2_myTemplateInfo_SOAPSerializer.deserialize(ns1_templateInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTEMPLATEINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTemplateInfo((com.rssl.phizic.gate.templates.services.generated.TemplateInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_type_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_type_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_writeDownOperations_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_writeDownOperations_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.gate.templates.services.generated.GateTemplate_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWRITEDOWNOPERATIONS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWriteDownOperations((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.GateTemplate instance = (com.rssl.phizic.gate.templates.services.generated.GateTemplate)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.gate.templates.services.generated.GateTemplate instance = (com.rssl.phizic.gate.templates.services.generated.GateTemplate)obj;
        
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAccountNumber(), ns1_accountNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAdditionalInfo(), ns1_additionalInfo_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAdditionalOperationChannel(), ns1_additionalOperationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAdditionalOperationDate(), ns1_additionalOperationDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAdmissionDate(), ns1_admissionDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAgreementNumber(), ns1_agreementNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAuthorizeCode(), ns1_authorizeCode_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAuthorizeDate(), ns1_authorizeDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBillingClientId(), ns1_billingClientId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBillingCode(), ns1_billingCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffAccount(), ns1_chargeOffAccount_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getChargeOffAmount(), ns1_chargeOffAmount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffCard(), ns1_chargeOffCard_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffCardAccount(), ns1_chargeOffCardAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffCardDescription(), ns1_chargeOffCardDescription_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getChargeOffCardExpireDate(), ns1_chargeOffCardExpireDate_QNAME, null, writer, context);
        ns2_myCurrency_SOAPSerializer.serialize(instance.getChargeOffCurrency(), ns1_chargeOffCurrency_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClientCreationChannel(), ns1_clientCreationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getClientCreationDate(), ns1_clientCreationDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClientOperationChannel(), ns1_clientOperationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getClientOperationDate(), ns1_clientOperationDate_QNAME, null, writer, context);
        ns2_myClient_SOAPSerializer.serialize(instance.getClientOwner(), ns1_clientOwner_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getCommission(), ns1_commission_QNAME, null, writer, context);
        ns2_myCommissionOptions_SOAPSerializer.serialize(instance.getCommissionOptions(), ns1_commissionOptions_QNAME, null, writer, context);
        ns2_myEmployeeInfo_SOAPSerializer.serialize(instance.getConfirmedEmployeeInfo(), ns1_confirmedEmployeeInfo_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getConvertionRate(), ns1_convertionRate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCorrDepoAccount(), ns1_corrDepoAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCorrDepoAccountOwner(), ns1_corrDepoAccountOwner_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCorrDepositary(), ns1_corrDepositary_QNAME, null, writer, context);
        ns2_myEmployeeInfo_SOAPSerializer.serialize(instance.getCreatedEmployeeInfo(), ns1_createdEmployeeInfo_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getCreditBuyRate(), ns1_creditBuyRate_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getCreditSaleRate(), ns1_creditSaleRate_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getDebetBuyRate(), ns1_debetBuyRate_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getDebetSaleRate(), ns1_debetSaleRate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDeliveryType(), ns1_deliveryType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDepoAccountNumber(), ns1_depoAccountNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDepoExternalId(), ns1_depoExternalId_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getDestinationAmount(), ns1_destinationAmount_QNAME, null, writer, context);
        ns2_myCurrency_SOAPSerializer.serialize(instance.getDestinationCurrency(), ns1_destinationCurrency_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDivisionNumber(), ns1_divisionNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDivisionType(), ns1_divisionType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDocumentNumber(), ns1_documentNumber_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getExecutionDate(), ns1_executionDate_QNAME, null, writer, context);
        ns5_myns5_map__MapInterfaceSerializer.serialize(instance.getExtendedAttributes(), ns1_extendedAttributes_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getExtendedFields(), ns1_extendedFields_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getExternalId(), ns1_externalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getFormType(), ns1_formType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getGround(), ns1_ground_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getId(), ns1_id_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getIdFromPaymentSystem(), ns1_idFromPaymentSystem_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getIdSpacing(), ns1_idSpacing_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getInputSumType(), ns1_inputSumType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getInsideCode(), ns1_insideCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getLoanExternalId(), ns1_loanExternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getMbOperCode(), ns1_mbOperCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getMultiBlockReceiverPointCode(), ns1_multiBlockReceiverPointCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getNextState(), ns1_nextState_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isNotVisibleBankDetails()), ns1_notVisibleBankDetails_QNAME, null, writer, context);
        ns2_myOffice_SOAPSerializer.serialize(instance.getOffice(), ns1_office_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperType(), ns1_operType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationCode(), ns1_operationCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationDesc(), ns1_operationDesc_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationReason(), ns1_operationReason_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationSubType(), ns1_operationSubType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationUID(), ns1_operationUID_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverAccount(), ns1_receiverAccount_QNAME, null, writer, context);
        ns2_myResidentBank_SOAPSerializer.serialize(instance.getReceiverBank(), ns1_receiverBank_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverCard(), ns1_receiverCard_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getReceiverCardExpireDate(), ns1_receiverCardExpireDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverCardType(), ns1_receiverCardType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverFirstName(), ns1_receiverFirstName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverINN(), ns1_receiverINN_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getReceiverInternalId(), ns1_receiverInternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverKPP(), ns1_receiverKPP_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverName(), ns1_receiverName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverNameForBill(), ns1_receiverNameForBill_QNAME, null, writer, context);
        ns2_myCode_SOAPSerializer.serialize(instance.getReceiverOfficeCode(), ns1_receiverOfficeCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPatrName(), ns1_receiverPatrName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPhone(), ns1_receiverPhone_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPointCode(), ns1_receiverPointCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverSurName(), ns1_receiverSurName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverTransitAccount(), ns1_receiverTransitAccount_QNAME, null, writer, context);
        ns2_myResidentBank_SOAPSerializer.serialize(instance.getReceiverTransitBank(), ns1_receiverTransitBank_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRegisterNumber(), ns1_registerNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRegisterString(), ns1_registerString_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRegistrationNumber(), ns1_registrationNumber_QNAME, null, writer, context);
        ns2_myReminderInfo_SOAPSerializer.serialize(instance.getReminderInfo(), ns1_reminderInfo_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getSalesCheck(), ns1_salesCheck_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getSecurityCount(), ns1_securityCount_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getSendNodeNumber(), ns1_sendNodeNumber_QNAME, null, writer, context);
        ns2_myService_SOAPSerializer.serialize(instance.getService(), ns1_service_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getSpacingDate(), ns1_spacingDate_QNAME, null, writer, context);
        ns2_myState_SOAPSerializer.serialize(instance.getState(), ns1_state_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isTemplate()), ns1_template_QNAME, null, writer, context);
        ns2_myTemplateInfo_SOAPSerializer.serialize(instance.getTemplateInfo(), ns1_templateInfo_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getType(), ns1_type_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getWriteDownOperations(), ns1_writeDownOperations_QNAME, null, writer, context);
    }
}
