// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.cache.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class SecurityAccount_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_bankId_QNAME = new QName("", "bankId");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_bankName_QNAME = new QName("", "bankName");
    private static final javax.xml.namespace.QName ns1_bankPostAddr_QNAME = new QName("", "bankPostAddr");
    private static final javax.xml.namespace.QName ns1_blankType_QNAME = new QName("", "blankType");
    private static final javax.xml.namespace.QName ns1_composeDt_QNAME = new QName("", "composeDt");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_docDt_QNAME = new QName("", "docDt");
    private static final javax.xml.namespace.QName ns1_docNum_QNAME = new QName("", "docNum");
    private static final javax.xml.namespace.QName ns1_id_QNAME = new QName("", "id");
    private static final javax.xml.namespace.QName ns1_incomeAmt_QNAME = new QName("", "incomeAmt");
    private static final javax.xml.namespace.QName ns2_Money_TYPE_QNAME = new QName("http://generated.cache.services.gate.web.phizic.rssl.com", "Money");
    private CombinedSerializer ns2_myMoney_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_incomeRate_QNAME = new QName("", "incomeRate");
    private static final javax.xml.namespace.QName ns3_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final javax.xml.namespace.QName ns1_issuerBankId_QNAME = new QName("", "issuerBankId");
    private static final javax.xml.namespace.QName ns1_issuerBankName_QNAME = new QName("", "issuerBankName");
    private static final javax.xml.namespace.QName ns1_nominalAmount_QNAME = new QName("", "nominalAmount");
    private static final javax.xml.namespace.QName ns1_onStorageInBank_QNAME = new QName("", "onStorageInBank");
    private static final javax.xml.namespace.QName ns3_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer ns3_myns3__boolean__boolean_Boolean_Serializer;
    private static final javax.xml.namespace.QName ns1_serialNumber_QNAME = new QName("", "serialNumber");
    private static final javax.xml.namespace.QName ns1_termDays_QNAME = new QName("", "termDays");
    private static final javax.xml.namespace.QName ns4_long_TYPE_QNAME = SOAPConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns4_myns4__long__java_lang_Long_Long_Serializer;
    private static final javax.xml.namespace.QName ns1_termFinishDt_QNAME = new QName("", "termFinishDt");
    private static final javax.xml.namespace.QName ns1_termLimitDt_QNAME = new QName("", "termLimitDt");
    private static final javax.xml.namespace.QName ns1_termStartDt_QNAME = new QName("", "termStartDt");
    private static final javax.xml.namespace.QName ns1_termType_QNAME = new QName("", "termType");
    private static final int myBANKID_INDEX = 0;
    private static final int myBANKNAME_INDEX = 1;
    private static final int myBANKPOSTADDR_INDEX = 2;
    private static final int myBLANKTYPE_INDEX = 3;
    private static final int myCOMPOSEDT_INDEX = 4;
    private static final int myDOCDT_INDEX = 5;
    private static final int myDOCNUM_INDEX = 6;
    private static final int myID_INDEX = 7;
    private static final int myINCOMEAMT_INDEX = 8;
    private static final int myINCOMERATE_INDEX = 9;
    private static final int myISSUERBANKID_INDEX = 10;
    private static final int myISSUERBANKNAME_INDEX = 11;
    private static final int myNOMINALAMOUNT_INDEX = 12;
    private static final int myONSTORAGEINBANK_INDEX = 13;
    private static final int mySERIALNUMBER_INDEX = 14;
    private static final int myTERMDAYS_INDEX = 15;
    private static final int myTERMFINISHDT_INDEX = 16;
    private static final int myTERMLIMITDT_INDEX = 17;
    private static final int myTERMSTARTDT_INDEX = 18;
    private static final int myTERMTYPE_INDEX = 19;
    
    public SecurityAccount_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns2_myMoney_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.cache.generated.Money.class, ns2_Money_TYPE_QNAME);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.math.BigDecimal.class, ns3_decimal_TYPE_QNAME);
        ns3_myns3__boolean__boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, boolean.class, ns3_boolean_TYPE_QNAME);
        ns4_myns4__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Long.class, ns4_long_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount instance = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount();
        com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_bankId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_bankId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBANKID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBankId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_bankName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_bankName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBANKNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBankName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_bankPostAddr_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_bankPostAddr_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBANKPOSTADDR_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBankPostAddr((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_blankType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_blankType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBLANKTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBlankType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_composeDt_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_composeDt_QNAME, reader, context);
                instance.setComposeDt((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_docDt_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_docDt_QNAME, reader, context);
                instance.setDocDt((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_docNum_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_docNum_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDOCNUM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDocNum((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_id_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_id_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_incomeAmt_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_incomeAmt_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINCOMEAMT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIncomeAmt((com.rssl.phizic.web.gate.services.cache.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_incomeRate_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_incomeRate_QNAME, reader, context);
                instance.setIncomeRate((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_issuerBankId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_issuerBankId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myISSUERBANKID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIssuerBankId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_issuerBankName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_issuerBankName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myISSUERBANKNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIssuerBankName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_nominalAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_nominalAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myNOMINALAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setNominalAmount((com.rssl.phizic.web.gate.services.cache.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_onStorageInBank_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_onStorageInBank_QNAME, reader, context);
                instance.setOnStorageInBank(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_serialNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_serialNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySERIALNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSerialNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_termDays_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_termDays_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTERMDAYS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTermDays((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_termFinishDt_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_termFinishDt_QNAME, reader, context);
                instance.setTermFinishDt((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_termLimitDt_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_termLimitDt_QNAME, reader, context);
                instance.setTermLimitDt((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_termStartDt_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_termStartDt_QNAME, reader, context);
                instance.setTermStartDt((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_termType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_termType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTERMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTermType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount instance = (com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount instance = (com.rssl.phizic.web.gate.services.cache.generated.SecurityAccount)obj;
        
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBankId(), ns1_bankId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBankName(), ns1_bankName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBankPostAddr(), ns1_bankPostAddr_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBlankType(), ns1_blankType_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getComposeDt(), ns1_composeDt_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getDocDt(), ns1_docDt_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDocNum(), ns1_docNum_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getId(), ns1_id_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getIncomeAmt(), ns1_incomeAmt_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getIncomeRate(), ns1_incomeRate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getIssuerBankId(), ns1_issuerBankId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getIssuerBankName(), ns1_issuerBankName_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getNominalAmount(), ns1_nominalAmount_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isOnStorageInBank()), ns1_onStorageInBank_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getSerialNumber(), ns1_serialNumber_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getTermDays(), ns1_termDays_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getTermFinishDt(), ns1_termFinishDt_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getTermLimitDt(), ns1_termLimitDt_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getTermStartDt(), ns1_termStartDt_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTermType(), ns1_termType_QNAME, null, writer, context);
    }
}
