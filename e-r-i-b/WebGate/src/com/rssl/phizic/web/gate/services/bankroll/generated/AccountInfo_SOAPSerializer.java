// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.bankroll.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class AccountInfo_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_accountId_QNAME = new QName("", "accountId");
    private static final javax.xml.namespace.QName ns3_long_TYPE_QNAME = SchemaConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns3_myns3__long__long_Long_Serializer;
    private static final javax.xml.namespace.QName ns1_agreementNumber_QNAME = new QName("", "agreementNumber");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_clearBalance_QNAME = new QName("", "clearBalance");
    private static final javax.xml.namespace.QName ns3_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final javax.xml.namespace.QName ns1_closeDate_QNAME = new QName("", "closeDate");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_creditCrossAgencyAllowed_QNAME = new QName("", "creditCrossAgencyAllowed");
    private static final javax.xml.namespace.QName ns4_boolean_TYPE_QNAME = SOAPConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer;
    private static final javax.xml.namespace.QName ns1_debitCrossAgencyAllowed_QNAME = new QName("", "debitCrossAgencyAllowed");
    private static final javax.xml.namespace.QName ns1_interestTransferAccount_QNAME = new QName("", "interestTransferAccount");
    private static final javax.xml.namespace.QName ns1_interestTransferCard_QNAME = new QName("", "interestTransferCard");
    private static final javax.xml.namespace.QName ns1_lastTransactionDate_QNAME = new QName("", "lastTransactionDate");
    private static final javax.xml.namespace.QName ns1_maxBalance_QNAME = new QName("", "maxBalance");
    private static final javax.xml.namespace.QName ns1_passbook_QNAME = new QName("", "passbook");
    private static final javax.xml.namespace.QName ns1_period_QNAME = new QName("", "period");
    private static final javax.xml.namespace.QName ns2_DateSpan_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "DateSpan");
    private CombinedSerializer ns2_myDateSpan_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_prolongationAllowed_QNAME = new QName("", "prolongationAllowed");
    private static final int myACCOUNTID_INDEX = 0;
    private static final int myAGREEMENTNUMBER_INDEX = 1;
    private static final int myCLEARBALANCE_INDEX = 2;
    private static final int myCLOSEDATE_INDEX = 3;
    private static final int myCREDITCROSSAGENCYALLOWED_INDEX = 4;
    private static final int myDEBITCROSSAGENCYALLOWED_INDEX = 5;
    private static final int myINTERESTTRANSFERACCOUNT_INDEX = 6;
    private static final int myINTERESTTRANSFERCARD_INDEX = 7;
    private static final int myLASTTRANSACTIONDATE_INDEX = 8;
    private static final int myMAXBALANCE_INDEX = 9;
    private static final int myPASSBOOK_INDEX = 10;
    private static final int myPERIOD_INDEX = 11;
    private static final int myPROLONGATIONALLOWED_INDEX = 12;
    
    public AccountInfo_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3__long__long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, long.class, ns3_long_TYPE_QNAME);
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.math.BigDecimal.class, ns3_decimal_TYPE_QNAME);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Boolean.class, ns4_boolean_TYPE_QNAME);
        ns2_myDateSpan_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.DateSpan.class, ns2_DateSpan_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo instance = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo();
        com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_accountId_QNAME)) {
                member = ns3_myns3__long__long_Long_Serializer.deserialize(ns1_accountId_QNAME, reader, context);
                instance.setAccountId(((Long)member).longValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_agreementNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_agreementNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAGREEMENTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAgreementNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clearBalance_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_clearBalance_QNAME, reader, context);
                instance.setClearBalance((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_closeDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_closeDate_QNAME, reader, context);
                instance.setCloseDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_creditCrossAgencyAllowed_QNAME)) {
                member = ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_creditCrossAgencyAllowed_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREDITCROSSAGENCYALLOWED_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreditCrossAgencyAllowed((java.lang.Boolean)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_debitCrossAgencyAllowed_QNAME)) {
                member = ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_debitCrossAgencyAllowed_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEBITCROSSAGENCYALLOWED_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDebitCrossAgencyAllowed((java.lang.Boolean)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_interestTransferAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_interestTransferAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINTERESTTRANSFERACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInterestTransferAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_interestTransferCard_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_interestTransferCard_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINTERESTTRANSFERCARD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInterestTransferCard((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_lastTransactionDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_lastTransactionDate_QNAME, reader, context);
                instance.setLastTransactionDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_maxBalance_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_maxBalance_QNAME, reader, context);
                instance.setMaxBalance((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_passbook_QNAME)) {
                member = ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_passbook_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPASSBOOK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPassbook((java.lang.Boolean)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_period_QNAME)) {
                member = ns2_myDateSpan_SOAPSerializer.deserialize(ns1_period_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPERIOD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPeriod((com.rssl.phizic.web.gate.services.bankroll.generated.DateSpan)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_prolongationAllowed_QNAME)) {
                member = ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.deserialize(ns1_prolongationAllowed_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPROLONGATIONALLOWED_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setProlongationAllowed((java.lang.Boolean)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo instance = (com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo instance = (com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo)obj;
        
        ns3_myns3__long__long_Long_Serializer.serialize(new Long(instance.getAccountId()), ns1_accountId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAgreementNumber(), ns1_agreementNumber_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getClearBalance(), ns1_clearBalance_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getCloseDate(), ns1_closeDate_QNAME, null, writer, context);
        ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getCreditCrossAgencyAllowed(), ns1_creditCrossAgencyAllowed_QNAME, null, writer, context);
        ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getDebitCrossAgencyAllowed(), ns1_debitCrossAgencyAllowed_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getInterestTransferAccount(), ns1_interestTransferAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getInterestTransferCard(), ns1_interestTransferCard_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getLastTransactionDate(), ns1_lastTransactionDate_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getMaxBalance(), ns1_maxBalance_QNAME, null, writer, context);
        ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getPassbook(), ns1_passbook_QNAME, null, writer, context);
        ns2_myDateSpan_SOAPSerializer.serialize(instance.getPeriod(), ns1_period_QNAME, null, writer, context);
        ns4_myns4__boolean__java_lang_Boolean_Boolean_Serializer.serialize(instance.getProlongationAllowed(), ns1_prolongationAllowed_QNAME, null, writer, context);
    }
}
