// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.util.calendar.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class GateDocument_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_account_QNAME = new QName("", "account");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_accountAction_QNAME = new QName("", "accountAction");
    private static final javax.xml.namespace.QName ns3_int_TYPE_QNAME = SchemaConstants.QNAME_TYPE_INT;
    private CombinedSerializer ns3_myns3__int__int_Int_Serializer;
    private static final javax.xml.namespace.QName ns1_additionalOperationChannel_QNAME = new QName("", "additionalOperationChannel");
    private static final javax.xml.namespace.QName ns1_additionalOperationDate_QNAME = new QName("", "additionalOperationDate");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_admissionDate_QNAME = new QName("", "admissionDate");
    private static final javax.xml.namespace.QName ns1_amount_QNAME = new QName("", "amount");
    private static final javax.xml.namespace.QName ns2_Money_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "Money");
    private CombinedSerializer ns2_myMoney_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_approvedAmount_QNAME = new QName("", "approvedAmount");
    private static final javax.xml.namespace.QName ns1_approvedDuration_QNAME = new QName("", "approvedDuration");
    private static final javax.xml.namespace.QName ns2_DateSpan_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "DateSpan");
    private CombinedSerializer ns2_myDateSpan_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_authorizeCode_QNAME = new QName("", "authorizeCode");
    private static final javax.xml.namespace.QName ns1_autoInvoiceId_QNAME = new QName("", "autoInvoiceId");
    private static final javax.xml.namespace.QName ns1_autoSubscriptionId_QNAME = new QName("", "autoSubscriptionId");
    private static final javax.xml.namespace.QName ns1_automaticRenewal_QNAME = new QName("", "automaticRenewal");
    private static final javax.xml.namespace.QName ns3_boolean_TYPE_QNAME = SchemaConstants.QNAME_TYPE_BOOLEAN;
    private CombinedSerializer ns3_myns3__boolean__boolean_Boolean_Serializer;
    private static final javax.xml.namespace.QName ns1_billingClientId_QNAME = new QName("", "billingClientId");
    private static final javax.xml.namespace.QName ns1_billingCode_QNAME = new QName("", "billingCode");
    private static final javax.xml.namespace.QName ns1_blockingReason_QNAME = new QName("", "blockingReason");
    private static final javax.xml.namespace.QName ns1_cardExpireDate_QNAME = new QName("", "cardExpireDate");
    private static final javax.xml.namespace.QName ns1_cardExternalId_QNAME = new QName("", "cardExternalId");
    private static final javax.xml.namespace.QName ns1_cardNumber_QNAME = new QName("", "cardNumber");
    private static final javax.xml.namespace.QName ns1_chargeOffAccount_QNAME = new QName("", "chargeOffAccount");
    private static final javax.xml.namespace.QName ns1_chargeOffAmount_QNAME = new QName("", "chargeOffAmount");
    private static final javax.xml.namespace.QName ns1_chargeOffCard_QNAME = new QName("", "chargeOffCard");
    private static final javax.xml.namespace.QName ns1_chargeOffCardDescription_QNAME = new QName("", "chargeOffCardDescription");
    private static final javax.xml.namespace.QName ns1_chargeOffCardExpireDate_QNAME = new QName("", "chargeOffCardExpireDate");
    private static final javax.xml.namespace.QName ns1_chargeOffCurrency_QNAME = new QName("", "chargeOffCurrency");
    private static final javax.xml.namespace.QName ns2_Currency_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "Currency");
    private CombinedSerializer ns2_myCurrency_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_chargeOffDate_QNAME = new QName("", "chargeOffDate");
    private static final javax.xml.namespace.QName ns1_claimNumber_QNAME = new QName("", "claimNumber");
    private static final javax.xml.namespace.QName ns1_clientCreationChannel_QNAME = new QName("", "clientCreationChannel");
    private static final javax.xml.namespace.QName ns1_clientCreationDate_QNAME = new QName("", "clientCreationDate");
    private static final javax.xml.namespace.QName ns1_clientOperationChannel_QNAME = new QName("", "clientOperationChannel");
    private static final javax.xml.namespace.QName ns1_clientOperationDate_QNAME = new QName("", "clientOperationDate");
    private static final javax.xml.namespace.QName ns1_closedAccount_QNAME = new QName("", "closedAccount");
    private static final javax.xml.namespace.QName ns1_closingDate_QNAME = new QName("", "closingDate");
    private static final javax.xml.namespace.QName ns1_codeATM_QNAME = new QName("", "codeATM");
    private static final javax.xml.namespace.QName ns1_codeService_QNAME = new QName("", "codeService");
    private static final javax.xml.namespace.QName ns1_commission_QNAME = new QName("", "commission");
    private static final javax.xml.namespace.QName ns1_commissionOptions_QNAME = new QName("", "commissionOptions");
    private static final javax.xml.namespace.QName ns2_CommissionOptions_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "CommissionOptions");
    private CombinedSerializer ns2_myCommissionOptions_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_conditions_QNAME = new QName("", "conditions");
    private static final javax.xml.namespace.QName ns1_conditionsId_QNAME = new QName("", "conditionsId");
    private static final javax.xml.namespace.QName ns1_confirmedEmployeeInfo_QNAME = new QName("", "confirmedEmployeeInfo");
    private static final javax.xml.namespace.QName ns2_EmployeeInfo_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "EmployeeInfo");
    private CombinedSerializer ns2_myEmployeeInfo_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_connectChargeOffResourceToMobileBank_QNAME = new QName("", "connectChargeOffResourceToMobileBank");
    private static final javax.xml.namespace.QName ns1_convertionRate_QNAME = new QName("", "convertionRate");
    private static final javax.xml.namespace.QName ns3_decimal_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DECIMAL;
    private CombinedSerializer ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer;
    private static final javax.xml.namespace.QName ns1_createdEmployeeInfo_QNAME = new QName("", "createdEmployeeInfo");
    private static final javax.xml.namespace.QName ns1_creditBuyRate_QNAME = new QName("", "creditBuyRate");
    private static final javax.xml.namespace.QName ns2_CurrencyRate_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "CurrencyRate");
    private CombinedSerializer ns2_myCurrencyRate_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_creditSaleRate_QNAME = new QName("", "creditSaleRate");
    private static final javax.xml.namespace.QName ns1_dateAccepted_QNAME = new QName("", "dateAccepted");
    private static final javax.xml.namespace.QName ns1_dateCreated_QNAME = new QName("", "dateCreated");
    private static final javax.xml.namespace.QName ns1_debetBuyRate_QNAME = new QName("", "debetBuyRate");
    private static final javax.xml.namespace.QName ns1_debetSaleRate_QNAME = new QName("", "debetSaleRate");
    private static final javax.xml.namespace.QName ns1_depositAccount_QNAME = new QName("", "depositAccount");
    private static final javax.xml.namespace.QName ns1_depositConditionsId_QNAME = new QName("", "depositConditionsId");
    private static final javax.xml.namespace.QName ns1_destinationAccount_QNAME = new QName("", "destinationAccount");
    private static final javax.xml.namespace.QName ns1_destinationAmount_QNAME = new QName("", "destinationAmount");
    private static final javax.xml.namespace.QName ns1_destinationCurrency_QNAME = new QName("", "destinationCurrency");
    private static final javax.xml.namespace.QName ns1_documentNumber_QNAME = new QName("", "documentNumber");
    private static final javax.xml.namespace.QName ns1_duration_QNAME = new QName("", "duration");
    private static final javax.xml.namespace.QName ns1_editedDocument_QNAME = new QName("", "editedDocument");
    private static final javax.xml.namespace.QName ns2_GateDocument_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "GateDocument");
    private CombinedSerializer ns2_myGateDocument_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_email_QNAME = new QName("", "email");
    private static final javax.xml.namespace.QName ns1_endDate_QNAME = new QName("", "endDate");
    private static final javax.xml.namespace.QName ns1_executionDate_QNAME = new QName("", "executionDate");
    private static final javax.xml.namespace.QName ns1_executionEventType_QNAME = new QName("", "executionEventType");
    private static final javax.xml.namespace.QName ns1_extendedFields_QNAME = new QName("", "extendedFields");
    private static final javax.xml.namespace.QName ns5_list_TYPE_QNAME = InternalEncodingConstants.QNAME_TYPE_LIST;
    private CombinedSerializer ns5_myns5_list__CollectionInterfaceSerializer;
    private static final javax.xml.namespace.QName ns1_externalDepositId_QNAME = new QName("", "externalDepositId");
    private static final javax.xml.namespace.QName ns1_externalId_QNAME = new QName("", "externalId");
    private static final javax.xml.namespace.QName ns1_externalOwnerId_QNAME = new QName("", "externalOwnerId");
    private static final javax.xml.namespace.QName ns1_floorLimit_QNAME = new QName("", "floorLimit");
    private static final javax.xml.namespace.QName ns1_formType_QNAME = new QName("", "formType");
    private static final javax.xml.namespace.QName ns1_friendlyName_QNAME = new QName("", "friendlyName");
    private static final javax.xml.namespace.QName ns1_ground_QNAME = new QName("", "ground");
    private static final javax.xml.namespace.QName ns1_guarantorClaimsIterator_QNAME = new QName("", "guarantorClaimsIterator");
    private static final javax.xml.namespace.QName ns1_id_QNAME = new QName("", "id");
    private static final javax.xml.namespace.QName ns4_long_TYPE_QNAME = SOAPConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns4_myns4__long__java_lang_Long_Long_Serializer;
    private static final javax.xml.namespace.QName ns1_idFromPaymentSystem_QNAME = new QName("", "idFromPaymentSystem");
    private static final javax.xml.namespace.QName ns1_inputSumType_QNAME = new QName("", "inputSumType");
    private static final javax.xml.namespace.QName ns1_internalOwnerId_QNAME = new QName("", "internalOwnerId");
    private static final javax.xml.namespace.QName ns1_loanAmount_QNAME = new QName("", "loanAmount");
    private static final javax.xml.namespace.QName ns1_multiBlockReceiverPointCode_QNAME = new QName("", "multiBlockReceiverPointCode");
    private static final javax.xml.namespace.QName ns1_nextState_QNAME = new QName("", "nextState");
    private static final javax.xml.namespace.QName ns1_notVisibleBankDetails_QNAME = new QName("", "notVisibleBankDetails");
    private static final javax.xml.namespace.QName ns1_number_QNAME = new QName("", "number");
    private static final javax.xml.namespace.QName ns1_objectAmount_QNAME = new QName("", "objectAmount");
    private static final javax.xml.namespace.QName ns1_office_QNAME = new QName("", "office");
    private static final javax.xml.namespace.QName ns2_Office_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "Office");
    private CombinedSerializer ns2_myOffice_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_officeExternalId_QNAME = new QName("", "officeExternalId");
    private static final javax.xml.namespace.QName ns1_operationCode_QNAME = new QName("", "operationCode");
    private static final javax.xml.namespace.QName ns1_payDay_QNAME = new QName("", "payDay");
    private static final javax.xml.namespace.QName ns1_payerId_QNAME = new QName("", "payerId");
    private static final javax.xml.namespace.QName ns1_payerName_QNAME = new QName("", "payerName");
    private static final javax.xml.namespace.QName ns1_percent_QNAME = new QName("", "percent");
    private static final javax.xml.namespace.QName ns1_period_QNAME = new QName("", "period");
    private static final javax.xml.namespace.QName ns1_phoneNumber_QNAME = new QName("", "phoneNumber");
    private static final javax.xml.namespace.QName ns1_priority_QNAME = new QName("", "priority");
    private static final javax.xml.namespace.QName ns1_questionnaireIterator_QNAME = new QName("", "questionnaireIterator");
    private static final javax.xml.namespace.QName ns1_receiverAccount_QNAME = new QName("", "receiverAccount");
    private static final javax.xml.namespace.QName ns1_receiverAlias_QNAME = new QName("", "receiverAlias");
    private static final javax.xml.namespace.QName ns1_receiverBank_QNAME = new QName("", "receiverBank");
    private static final javax.xml.namespace.QName ns2_ResidentBank_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "ResidentBank");
    private CombinedSerializer ns2_myResidentBank_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_receiverBankName_QNAME = new QName("", "receiverBankName");
    private static final javax.xml.namespace.QName ns1_receiverBornDate_QNAME = new QName("", "receiverBornDate");
    private static final javax.xml.namespace.QName ns1_receiverCard_QNAME = new QName("", "receiverCard");
    private static final javax.xml.namespace.QName ns1_receiverCardExpireDate_QNAME = new QName("", "receiverCardExpireDate");
    private static final javax.xml.namespace.QName ns1_receiverCardType_QNAME = new QName("", "receiverCardType");
    private static final javax.xml.namespace.QName ns1_receiverCountryCode_QNAME = new QName("", "receiverCountryCode");
    private static final javax.xml.namespace.QName ns1_receiverFirstName_QNAME = new QName("", "receiverFirstName");
    private static final javax.xml.namespace.QName ns1_receiverINN_QNAME = new QName("", "receiverINN");
    private static final javax.xml.namespace.QName ns1_receiverInternalId_QNAME = new QName("", "receiverInternalId");
    private static final javax.xml.namespace.QName ns1_receiverKPP_QNAME = new QName("", "receiverKPP");
    private static final javax.xml.namespace.QName ns1_receiverName_QNAME = new QName("", "receiverName");
    private static final javax.xml.namespace.QName ns1_receiverNameForBill_QNAME = new QName("", "receiverNameForBill");
    private static final javax.xml.namespace.QName ns1_receiverOfficeCode_QNAME = new QName("", "receiverOfficeCode");
    private static final javax.xml.namespace.QName ns2_Code_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "Code");
    private CombinedSerializer ns2_myCode_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_receiverPatrName_QNAME = new QName("", "receiverPatrName");
    private static final javax.xml.namespace.QName ns1_receiverPhone_QNAME = new QName("", "receiverPhone");
    private static final javax.xml.namespace.QName ns1_receiverPointCode_QNAME = new QName("", "receiverPointCode");
    private static final javax.xml.namespace.QName ns1_receiverSWIFT_QNAME = new QName("", "receiverSWIFT");
    private static final javax.xml.namespace.QName ns1_receiverSurName_QNAME = new QName("", "receiverSurName");
    private static final javax.xml.namespace.QName ns1_receiverTransitAccount_QNAME = new QName("", "receiverTransitAccount");
    private static final javax.xml.namespace.QName ns1_receiverTransitBank_QNAME = new QName("", "receiverTransitBank");
    private static final javax.xml.namespace.QName ns1_registerNumber_QNAME = new QName("", "registerNumber");
    private static final javax.xml.namespace.QName ns1_registerString_QNAME = new QName("", "registerString");
    private static final javax.xml.namespace.QName ns1_reportStatus_QNAME = new QName("", "reportStatus");
    private static final javax.xml.namespace.QName ns1_requisite_QNAME = new QName("", "requisite");
    private static final javax.xml.namespace.QName ns1_salesCheck_QNAME = new QName("", "salesCheck");
    private static final javax.xml.namespace.QName ns1_selfAmount_QNAME = new QName("", "selfAmount");
    private static final javax.xml.namespace.QName ns1_service_QNAME = new QName("", "service");
    private static final javax.xml.namespace.QName ns2_ServiceImpl_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "ServiceImpl");
    private CombinedSerializer ns2_myServiceImpl_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_startDate_QNAME = new QName("", "startDate");
    private static final javax.xml.namespace.QName ns1_state_QNAME = new QName("", "state");
    private static final javax.xml.namespace.QName ns2_State_TYPE_QNAME = new QName("http://generated.calendar.util.services.gate.web.phizic.rssl.com", "State");
    private CombinedSerializer ns2_myState_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_sumType_QNAME = new QName("", "sumType");
    private static final javax.xml.namespace.QName ns1_taxDocumentDate_QNAME = new QName("", "taxDocumentDate");
    private static final javax.xml.namespace.QName ns1_taxDocumentNumber_QNAME = new QName("", "taxDocumentNumber");
    private static final javax.xml.namespace.QName ns1_taxGround_QNAME = new QName("", "taxGround");
    private static final javax.xml.namespace.QName ns1_taxKBK_QNAME = new QName("", "taxKBK");
    private static final javax.xml.namespace.QName ns1_taxOKATO_QNAME = new QName("", "taxOKATO");
    private static final javax.xml.namespace.QName ns1_taxPaymentStatus_QNAME = new QName("", "taxPaymentStatus");
    private static final javax.xml.namespace.QName ns1_taxPaymentType_QNAME = new QName("", "taxPaymentType");
    private static final javax.xml.namespace.QName ns1_taxPeriod_QNAME = new QName("", "taxPeriod");
    private static final javax.xml.namespace.QName ns1_template_QNAME = new QName("", "template");
    private static final javax.xml.namespace.QName ns1_totalAmountLimit_QNAME = new QName("", "totalAmountLimit");
    private static final javax.xml.namespace.QName ns1_totalAmountPeriod_QNAME = new QName("", "totalAmountPeriod");
    private static final javax.xml.namespace.QName ns1_transferAccount_QNAME = new QName("", "transferAccount");
    private static final javax.xml.namespace.QName ns1_transferPayment_QNAME = new QName("", "transferPayment");
    private static final javax.xml.namespace.QName ns1_transitAccount_QNAME = new QName("", "transitAccount");
    private static final javax.xml.namespace.QName ns1_type_QNAME = new QName("", "type");
    private static final javax.xml.namespace.QName ns1_visitDate_QNAME = new QName("", "visitDate");
    private static final javax.xml.namespace.QName ns1_withdrawExternalId_QNAME = new QName("", "withdrawExternalId");
    private static final javax.xml.namespace.QName ns1_withdrawInternalId_QNAME = new QName("", "withdrawInternalId");
    private static final javax.xml.namespace.QName ns1_withdrawMode_QNAME = new QName("", "withdrawMode");
    private static final javax.xml.namespace.QName ns1_withdrawType_QNAME = new QName("", "withdrawType");
    private static final javax.xml.namespace.QName ns1_writeDownOperations_QNAME = new QName("", "writeDownOperations");
    private static final int myACCOUNT_INDEX = 0;
    private static final int myACCOUNTACTION_INDEX = 1;
    private static final int myADDITIONALOPERATIONCHANNEL_INDEX = 2;
    private static final int myADDITIONALOPERATIONDATE_INDEX = 3;
    private static final int myADMISSIONDATE_INDEX = 4;
    private static final int myAMOUNT_INDEX = 5;
    private static final int myAPPROVEDAMOUNT_INDEX = 6;
    private static final int myAPPROVEDDURATION_INDEX = 7;
    private static final int myAUTHORIZECODE_INDEX = 8;
    private static final int myAUTOINVOICEID_INDEX = 9;
    private static final int myAUTOSUBSCRIPTIONID_INDEX = 10;
    private static final int myAUTOMATICRENEWAL_INDEX = 11;
    private static final int myBILLINGCLIENTID_INDEX = 12;
    private static final int myBILLINGCODE_INDEX = 13;
    private static final int myBLOCKINGREASON_INDEX = 14;
    private static final int myCARDEXPIREDATE_INDEX = 15;
    private static final int myCARDEXTERNALID_INDEX = 16;
    private static final int myCARDNUMBER_INDEX = 17;
    private static final int myCHARGEOFFACCOUNT_INDEX = 18;
    private static final int myCHARGEOFFAMOUNT_INDEX = 19;
    private static final int myCHARGEOFFCARD_INDEX = 20;
    private static final int myCHARGEOFFCARDDESCRIPTION_INDEX = 21;
    private static final int myCHARGEOFFCARDEXPIREDATE_INDEX = 22;
    private static final int myCHARGEOFFCURRENCY_INDEX = 23;
    private static final int myCHARGEOFFDATE_INDEX = 24;
    private static final int myCLAIMNUMBER_INDEX = 25;
    private static final int myCLIENTCREATIONCHANNEL_INDEX = 26;
    private static final int myCLIENTCREATIONDATE_INDEX = 27;
    private static final int myCLIENTOPERATIONCHANNEL_INDEX = 28;
    private static final int myCLIENTOPERATIONDATE_INDEX = 29;
    private static final int myCLOSEDACCOUNT_INDEX = 30;
    private static final int myCLOSINGDATE_INDEX = 31;
    private static final int myCODEATM_INDEX = 32;
    private static final int myCODESERVICE_INDEX = 33;
    private static final int myCOMMISSION_INDEX = 34;
    private static final int myCOMMISSIONOPTIONS_INDEX = 35;
    private static final int myCONDITIONS_INDEX = 36;
    private static final int myCONDITIONSID_INDEX = 37;
    private static final int myCONFIRMEDEMPLOYEEINFO_INDEX = 38;
    private static final int myCONNECTCHARGEOFFRESOURCETOMOBILEBANK_INDEX = 39;
    private static final int myCONVERTIONRATE_INDEX = 40;
    private static final int myCREATEDEMPLOYEEINFO_INDEX = 41;
    private static final int myCREDITBUYRATE_INDEX = 42;
    private static final int myCREDITSALERATE_INDEX = 43;
    private static final int myDATEACCEPTED_INDEX = 44;
    private static final int myDATECREATED_INDEX = 45;
    private static final int myDEBETBUYRATE_INDEX = 46;
    private static final int myDEBETSALERATE_INDEX = 47;
    private static final int myDEPOSITACCOUNT_INDEX = 48;
    private static final int myDEPOSITCONDITIONSID_INDEX = 49;
    private static final int myDESTINATIONACCOUNT_INDEX = 50;
    private static final int myDESTINATIONAMOUNT_INDEX = 51;
    private static final int myDESTINATIONCURRENCY_INDEX = 52;
    private static final int myDOCUMENTNUMBER_INDEX = 53;
    private static final int myDURATION_INDEX = 54;
    private static final int myEDITEDDOCUMENT_INDEX = 55;
    private static final int myEMAIL_INDEX = 56;
    private static final int myENDDATE_INDEX = 57;
    private static final int myEXECUTIONDATE_INDEX = 58;
    private static final int myEXECUTIONEVENTTYPE_INDEX = 59;
    private static final int myEXTENDEDFIELDS_INDEX = 60;
    private static final int myEXTERNALDEPOSITID_INDEX = 61;
    private static final int myEXTERNALID_INDEX = 62;
    private static final int myEXTERNALOWNERID_INDEX = 63;
    private static final int myFLOORLIMIT_INDEX = 64;
    private static final int myFORMTYPE_INDEX = 65;
    private static final int myFRIENDLYNAME_INDEX = 66;
    private static final int myGROUND_INDEX = 67;
    private static final int myGUARANTORCLAIMSITERATOR_INDEX = 68;
    private static final int myID_INDEX = 69;
    private static final int myIDFROMPAYMENTSYSTEM_INDEX = 70;
    private static final int myINPUTSUMTYPE_INDEX = 71;
    private static final int myINTERNALOWNERID_INDEX = 72;
    private static final int myLOANAMOUNT_INDEX = 73;
    private static final int myMULTIBLOCKRECEIVERPOINTCODE_INDEX = 74;
    private static final int myNEXTSTATE_INDEX = 75;
    private static final int myNOTVISIBLEBANKDETAILS_INDEX = 76;
    private static final int myNUMBER_INDEX = 77;
    private static final int myOBJECTAMOUNT_INDEX = 78;
    private static final int myOFFICE_INDEX = 79;
    private static final int myOFFICEEXTERNALID_INDEX = 80;
    private static final int myOPERATIONCODE_INDEX = 81;
    private static final int myPAYDAY_INDEX = 82;
    private static final int myPAYERID_INDEX = 83;
    private static final int myPAYERNAME_INDEX = 84;
    private static final int myPERCENT_INDEX = 85;
    private static final int myPERIOD_INDEX = 86;
    private static final int myPHONENUMBER_INDEX = 87;
    private static final int myPRIORITY_INDEX = 88;
    private static final int myQUESTIONNAIREITERATOR_INDEX = 89;
    private static final int myRECEIVERACCOUNT_INDEX = 90;
    private static final int myRECEIVERALIAS_INDEX = 91;
    private static final int myRECEIVERBANK_INDEX = 92;
    private static final int myRECEIVERBANKNAME_INDEX = 93;
    private static final int myRECEIVERBORNDATE_INDEX = 94;
    private static final int myRECEIVERCARD_INDEX = 95;
    private static final int myRECEIVERCARDEXPIREDATE_INDEX = 96;
    private static final int myRECEIVERCARDTYPE_INDEX = 97;
    private static final int myRECEIVERCOUNTRYCODE_INDEX = 98;
    private static final int myRECEIVERFIRSTNAME_INDEX = 99;
    private static final int myRECEIVERINN_INDEX = 100;
    private static final int myRECEIVERINTERNALID_INDEX = 101;
    private static final int myRECEIVERKPP_INDEX = 102;
    private static final int myRECEIVERNAME_INDEX = 103;
    private static final int myRECEIVERNAMEFORBILL_INDEX = 104;
    private static final int myRECEIVEROFFICECODE_INDEX = 105;
    private static final int myRECEIVERPATRNAME_INDEX = 106;
    private static final int myRECEIVERPHONE_INDEX = 107;
    private static final int myRECEIVERPOINTCODE_INDEX = 108;
    private static final int myRECEIVERSWIFT_INDEX = 109;
    private static final int myRECEIVERSURNAME_INDEX = 110;
    private static final int myRECEIVERTRANSITACCOUNT_INDEX = 111;
    private static final int myRECEIVERTRANSITBANK_INDEX = 112;
    private static final int myREGISTERNUMBER_INDEX = 113;
    private static final int myREGISTERSTRING_INDEX = 114;
    private static final int myREPORTSTATUS_INDEX = 115;
    private static final int myREQUISITE_INDEX = 116;
    private static final int mySALESCHECK_INDEX = 117;
    private static final int mySELFAMOUNT_INDEX = 118;
    private static final int mySERVICE_INDEX = 119;
    private static final int mySTARTDATE_INDEX = 120;
    private static final int mySTATE_INDEX = 121;
    private static final int mySUMTYPE_INDEX = 122;
    private static final int myTAXDOCUMENTDATE_INDEX = 123;
    private static final int myTAXDOCUMENTNUMBER_INDEX = 124;
    private static final int myTAXGROUND_INDEX = 125;
    private static final int myTAXKBK_INDEX = 126;
    private static final int myTAXOKATO_INDEX = 127;
    private static final int myTAXPAYMENTSTATUS_INDEX = 128;
    private static final int myTAXPAYMENTTYPE_INDEX = 129;
    private static final int myTAXPERIOD_INDEX = 130;
    private static final int myTEMPLATE_INDEX = 131;
    private static final int myTOTALAMOUNTLIMIT_INDEX = 132;
    private static final int myTOTALAMOUNTPERIOD_INDEX = 133;
    private static final int myTRANSFERACCOUNT_INDEX = 134;
    private static final int myTRANSFERPAYMENT_INDEX = 135;
    private static final int myTRANSITACCOUNT_INDEX = 136;
    private static final int myTYPE_INDEX = 137;
    private static final int myVISITDATE_INDEX = 138;
    private static final int myWITHDRAWEXTERNALID_INDEX = 139;
    private static final int myWITHDRAWINTERNALID_INDEX = 140;
    private static final int myWITHDRAWMODE_INDEX = 141;
    private static final int myWITHDRAWTYPE_INDEX = 142;
    private static final int myWRITEDOWNOPERATIONS_INDEX = 143;
    
    public GateDocument_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3__int__int_Int_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, int.class, ns3_int_TYPE_QNAME);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns2_myMoney_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.Money.class, ns2_Money_TYPE_QNAME);
        ns2_myDateSpan_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.DateSpan.class, ns2_DateSpan_TYPE_QNAME);
        ns3_myns3__boolean__boolean_Boolean_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, boolean.class, ns3_boolean_TYPE_QNAME);
        ns2_myCurrency_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.Currency.class, ns2_Currency_TYPE_QNAME);
        ns2_myCommissionOptions_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.CommissionOptions.class, ns2_CommissionOptions_TYPE_QNAME);
        ns2_myEmployeeInfo_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.EmployeeInfo.class, ns2_EmployeeInfo_TYPE_QNAME);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.math.BigDecimal.class, ns3_decimal_TYPE_QNAME);
        ns2_myCurrencyRate_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.CurrencyRate.class, ns2_CurrencyRate_TYPE_QNAME);
        ns2_myGateDocument_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument.class, ns2_GateDocument_TYPE_QNAME);
        ns5_myns5_list__CollectionInterfaceSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.List.class, ns5_list_TYPE_QNAME);
        ns4_myns4__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Long.class, ns4_long_TYPE_QNAME);
        ns2_myOffice_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.Office.class, ns2_Office_TYPE_QNAME);
        ns2_myResidentBank_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.ResidentBank.class, ns2_ResidentBank_TYPE_QNAME);
        ns2_myCode_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.Code.class, ns2_Code_TYPE_QNAME);
        ns2_myServiceImpl_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.ServiceImpl.class, ns2_ServiceImpl_TYPE_QNAME);
        ns2_myState_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.util.calendar.generated.State.class, ns2_State_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument instance = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument();
        com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_account_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_account_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_accountAction_QNAME)) {
                member = ns3_myns3__int__int_Int_Serializer.deserialize(ns1_accountAction_QNAME, reader, context);
                instance.setAccountAction(((java.lang.Integer)member).intValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_additionalOperationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_additionalOperationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myADDITIONALOPERATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAdditionalOperationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_additionalOperationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_additionalOperationDate_QNAME, reader, context);
                instance.setAdditionalOperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_admissionDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_admissionDate_QNAME, reader, context);
                instance.setAdmissionDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_amount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_amount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_approvedAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_approvedAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAPPROVEDAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setApprovedAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_approvedDuration_QNAME)) {
                member = ns2_myDateSpan_SOAPSerializer.deserialize(ns1_approvedDuration_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAPPROVEDDURATION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setApprovedDuration((com.rssl.phizic.web.gate.services.util.calendar.generated.DateSpan)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authorizeCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_authorizeCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAUTHORIZECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAuthorizeCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_autoInvoiceId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_autoInvoiceId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAUTOINVOICEID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAutoInvoiceId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_autoSubscriptionId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_autoSubscriptionId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAUTOSUBSCRIPTIONID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAutoSubscriptionId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_automaticRenewal_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_automaticRenewal_QNAME, reader, context);
                instance.setAutomaticRenewal(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_billingClientId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_billingClientId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBILLINGCLIENTID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBillingClientId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_billingCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_billingCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBILLINGCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBillingCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_blockingReason_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_blockingReason_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myBLOCKINGREASON_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setBlockingReason((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_cardExpireDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_cardExpireDate_QNAME, reader, context);
                instance.setCardExpireDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_cardExternalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_cardExternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCARDEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCardExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_cardNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_cardNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCARDNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCardNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_chargeOffAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCard_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffCard_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCARD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCard((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCardDescription_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_chargeOffCardDescription_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCARDDESCRIPTION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCardDescription((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCardExpireDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_chargeOffCardExpireDate_QNAME, reader, context);
                instance.setChargeOffCardExpireDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffCurrency_QNAME)) {
                member = ns2_myCurrency_SOAPSerializer.deserialize(ns1_chargeOffCurrency_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCHARGEOFFCURRENCY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setChargeOffCurrency((com.rssl.phizic.web.gate.services.util.calendar.generated.Currency)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_chargeOffDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_chargeOffDate_QNAME, reader, context);
                instance.setChargeOffDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_claimNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_claimNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLAIMNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClaimNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientCreationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_clientCreationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTCREATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientCreationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientCreationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_clientCreationDate_QNAME, reader, context);
                instance.setClientCreationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientOperationChannel_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_clientOperationChannel_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTOPERATIONCHANNEL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientOperationChannel((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientOperationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_clientOperationDate_QNAME, reader, context);
                instance.setClientOperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_closedAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_closedAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLOSEDACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClosedAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_closingDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_closingDate_QNAME, reader, context);
                instance.setClosingDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_codeATM_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_codeATM_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCODEATM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCodeATM((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_codeService_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_codeService_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCODESERVICE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCodeService((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_commission_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_commission_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMMISSION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCommission((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_commissionOptions_QNAME)) {
                member = ns2_myCommissionOptions_SOAPSerializer.deserialize(ns1_commissionOptions_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCOMMISSIONOPTIONS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCommissionOptions((com.rssl.phizic.web.gate.services.util.calendar.generated.CommissionOptions)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_conditions_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_conditions_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONDITIONS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConditions((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_conditionsId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_conditionsId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONDITIONSID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConditionsId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmedEmployeeInfo_QNAME)) {
                member = ns2_myEmployeeInfo_SOAPSerializer.deserialize(ns1_confirmedEmployeeInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONFIRMEDEMPLOYEEINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConfirmedEmployeeInfo((com.rssl.phizic.web.gate.services.util.calendar.generated.EmployeeInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_connectChargeOffResourceToMobileBank_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_connectChargeOffResourceToMobileBank_QNAME, reader, context);
                instance.setConnectChargeOffResourceToMobileBank(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_convertionRate_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_convertionRate_QNAME, reader, context);
                instance.setConvertionRate((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_createdEmployeeInfo_QNAME)) {
                member = ns2_myEmployeeInfo_SOAPSerializer.deserialize(ns1_createdEmployeeInfo_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREATEDEMPLOYEEINFO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreatedEmployeeInfo((com.rssl.phizic.web.gate.services.util.calendar.generated.EmployeeInfo)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_creditBuyRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_creditBuyRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREDITBUYRATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreditBuyRate((com.rssl.phizic.web.gate.services.util.calendar.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_creditSaleRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_creditSaleRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCREDITSALERATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCreditSaleRate((com.rssl.phizic.web.gate.services.util.calendar.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_dateAccepted_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_dateAccepted_QNAME, reader, context);
                instance.setDateAccepted((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_dateCreated_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_dateCreated_QNAME, reader, context);
                instance.setDateCreated((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_debetBuyRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_debetBuyRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEBETBUYRATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDebetBuyRate((com.rssl.phizic.web.gate.services.util.calendar.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_debetSaleRate_QNAME)) {
                member = ns2_myCurrencyRate_SOAPSerializer.deserialize(ns1_debetSaleRate_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEBETSALERATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDebetSaleRate((com.rssl.phizic.web.gate.services.util.calendar.generated.CurrencyRate)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_depositAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_depositAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPOSITACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepositAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_depositConditionsId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_depositConditionsId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDEPOSITCONDITIONSID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDepositConditionsId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_destinationAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_destinationAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDESTINATIONACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDestinationAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_destinationAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_destinationAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDESTINATIONAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDestinationAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_destinationCurrency_QNAME)) {
                member = ns2_myCurrency_SOAPSerializer.deserialize(ns1_destinationCurrency_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDESTINATIONCURRENCY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDestinationCurrency((com.rssl.phizic.web.gate.services.util.calendar.generated.Currency)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_documentNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_documentNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDOCUMENTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDocumentNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_duration_QNAME)) {
                member = ns2_myDateSpan_SOAPSerializer.deserialize(ns1_duration_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myDURATION_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setDuration((com.rssl.phizic.web.gate.services.util.calendar.generated.DateSpan)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_editedDocument_QNAME)) {
                member = ns2_myGateDocument_SOAPSerializer.deserialize(ns1_editedDocument_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEDITEDDOCUMENT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setEditedDocument((com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_email_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_email_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEMAIL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setEmail((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_endDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_endDate_QNAME, reader, context);
                instance.setEndDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_executionDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_executionDate_QNAME, reader, context);
                instance.setExecutionDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_executionEventType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_executionEventType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXECUTIONEVENTTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExecutionEventType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_extendedFields_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_extendedFields_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTENDEDFIELDS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExtendedFields((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_externalDepositId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_externalDepositId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTERNALDEPOSITID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExternalDepositId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_externalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_externalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_externalOwnerId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_externalOwnerId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myEXTERNALOWNERID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setExternalOwnerId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_floorLimit_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_floorLimit_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFLOORLIMIT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFloorLimit((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_formType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_formType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFORMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFormType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_friendlyName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_friendlyName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myFRIENDLYNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setFriendlyName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ground_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_ground_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myGROUND_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setGround((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_guarantorClaimsIterator_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_guarantorClaimsIterator_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myGUARANTORCLAIMSITERATOR_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setGuarantorClaimsIterator((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_id_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_id_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_idFromPaymentSystem_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_idFromPaymentSystem_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myIDFROMPAYMENTSYSTEM_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setIdFromPaymentSystem((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_inputSumType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_inputSumType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINPUTSUMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInputSumType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_internalOwnerId_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_internalOwnerId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myINTERNALOWNERID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setInternalOwnerId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_loanAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_loanAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myLOANAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setLoanAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_multiBlockReceiverPointCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_multiBlockReceiverPointCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myMULTIBLOCKRECEIVERPOINTCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setMultiBlockReceiverPointCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_nextState_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_nextState_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myNEXTSTATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setNextState((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_notVisibleBankDetails_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_notVisibleBankDetails_QNAME, reader, context);
                instance.setNotVisibleBankDetails(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_number_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_number_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_objectAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_objectAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOBJECTAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setObjectAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_office_QNAME)) {
                member = ns2_myOffice_SOAPSerializer.deserialize(ns1_office_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOFFICE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOffice((com.rssl.phizic.web.gate.services.util.calendar.generated.Office)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_officeExternalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_officeExternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOFFICEEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOfficeExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_operationCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myOPERATIONCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setOperationCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_payDay_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_payDay_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPAYDAY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPayDay((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_payerId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_payerId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPAYERID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPayerId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_payerName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_payerName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPAYERNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPayerName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_percent_QNAME)) {
                member = ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.deserialize(ns1_percent_QNAME, reader, context);
                instance.setPercent((java.math.BigDecimal)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_period_QNAME)) {
                member = ns2_myDateSpan_SOAPSerializer.deserialize(ns1_period_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPERIOD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPeriod((com.rssl.phizic.web.gate.services.util.calendar.generated.DateSpan)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_phoneNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_phoneNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPHONENUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPhoneNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_priority_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_priority_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPRIORITY_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPriority((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_questionnaireIterator_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_questionnaireIterator_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myQUESTIONNAIREITERATOR_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setQuestionnaireIterator((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverAlias_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverAlias_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERALIAS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverAlias((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverBank_QNAME)) {
                member = ns2_myResidentBank_SOAPSerializer.deserialize(ns1_receiverBank_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERBANK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverBank((com.rssl.phizic.web.gate.services.util.calendar.generated.ResidentBank)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverBankName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverBankName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERBANKNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverBankName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverBornDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_receiverBornDate_QNAME, reader, context);
                instance.setReceiverBornDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCard_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverCard_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERCARD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverCard((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCardExpireDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_receiverCardExpireDate_QNAME, reader, context);
                instance.setReceiverCardExpireDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCardType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverCardType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERCARDTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverCardType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverCountryCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverCountryCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERCOUNTRYCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverCountryCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverFirstName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverFirstName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERFIRSTNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverFirstName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverINN_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverINN_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERINN_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverINN((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverInternalId_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_receiverInternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERINTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverInternalId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverKPP_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverKPP_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERKPP_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverKPP((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverNameForBill_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverNameForBill_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERNAMEFORBILL_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverNameForBill((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverOfficeCode_QNAME)) {
                member = ns2_myCode_SOAPSerializer.deserialize(ns1_receiverOfficeCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVEROFFICECODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverOfficeCode((com.rssl.phizic.web.gate.services.util.calendar.generated.Code)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPatrName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPatrName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPATRNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPatrName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPhone_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPhone_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPHONE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPhone((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverPointCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverPointCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERPOINTCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverPointCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverSWIFT_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverSWIFT_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERSWIFT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverSWIFT((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverSurName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverSurName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERSURNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverSurName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverTransitAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_receiverTransitAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERTRANSITACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverTransitAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_receiverTransitBank_QNAME)) {
                member = ns2_myResidentBank_SOAPSerializer.deserialize(ns1_receiverTransitBank_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myRECEIVERTRANSITBANK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReceiverTransitBank((com.rssl.phizic.web.gate.services.util.calendar.generated.ResidentBank)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_registerNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_registerNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGISTERNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegisterNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_registerString_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_registerString_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREGISTERSTRING_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRegisterString((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_reportStatus_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_reportStatus_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREPORTSTATUS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setReportStatus((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_requisite_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_requisite_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myREQUISITE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setRequisite((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_salesCheck_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_salesCheck_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySALESCHECK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSalesCheck((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_selfAmount_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_selfAmount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySELFAMOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSelfAmount((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_service_QNAME)) {
                member = ns2_myServiceImpl_SOAPSerializer.deserialize(ns1_service_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySERVICE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setService((com.rssl.phizic.web.gate.services.util.calendar.generated.ServiceImpl)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_startDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_startDate_QNAME, reader, context);
                instance.setStartDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_state_QNAME)) {
                member = ns2_myState_SOAPSerializer.deserialize(ns1_state_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySTATE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setState((com.rssl.phizic.web.gate.services.util.calendar.generated.State)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_sumType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_sumType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, mySUMTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setSumType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxDocumentDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_taxDocumentDate_QNAME, reader, context);
                instance.setTaxDocumentDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxDocumentNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxDocumentNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXDOCUMENTNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxDocumentNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxGround_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxGround_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXGROUND_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxGround((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxKBK_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxKBK_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXKBK_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxKBK((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxOKATO_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxOKATO_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXOKATO_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxOKATO((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxPaymentStatus_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxPaymentStatus_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXPAYMENTSTATUS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxPaymentStatus((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxPaymentType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxPaymentType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXPAYMENTTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxPaymentType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_taxPeriod_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_taxPeriod_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTAXPERIOD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTaxPeriod((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_template_QNAME)) {
                member = ns3_myns3__boolean__boolean_Boolean_Serializer.deserialize(ns1_template_QNAME, reader, context);
                instance.setTemplate(((Boolean)member).booleanValue());
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_totalAmountLimit_QNAME)) {
                member = ns2_myMoney_SOAPSerializer.deserialize(ns1_totalAmountLimit_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTOTALAMOUNTLIMIT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTotalAmountLimit((com.rssl.phizic.web.gate.services.util.calendar.generated.Money)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_totalAmountPeriod_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_totalAmountPeriod_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTOTALAMOUNTPERIOD_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTotalAmountPeriod((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_transferAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_transferAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSFERACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransferAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_transferPayment_QNAME)) {
                member = ns2_myGateDocument_SOAPSerializer.deserialize(ns1_transferPayment_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSFERPAYMENT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransferPayment((com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_transitAccount_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_transitAccount_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTRANSITACCOUNT_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setTransitAccount((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_type_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_type_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_visitDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_visitDate_QNAME, reader, context);
                instance.setVisitDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_withdrawExternalId_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_withdrawExternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWITHDRAWEXTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWithdrawExternalId((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_withdrawInternalId_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_withdrawInternalId_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWITHDRAWINTERNALID_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWithdrawInternalId((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_withdrawMode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_withdrawMode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWITHDRAWMODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWithdrawMode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_withdrawType_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_withdrawType_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWITHDRAWTYPE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWithdrawType((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_writeDownOperations_QNAME)) {
                member = ns5_myns5_list__CollectionInterfaceSerializer.deserialize(ns1_writeDownOperations_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myWRITEDOWNOPERATIONS_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setWriteDownOperations((java.util.List)member);
                }
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument instance = (com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument instance = (com.rssl.phizic.web.gate.services.util.calendar.generated.GateDocument)obj;
        
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAccount(), ns1_account_QNAME, null, writer, context);
        ns3_myns3__int__int_Int_Serializer.serialize(new java.lang.Integer(instance.getAccountAction()), ns1_accountAction_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAdditionalOperationChannel(), ns1_additionalOperationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAdditionalOperationDate(), ns1_additionalOperationDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAdmissionDate(), ns1_admissionDate_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getAmount(), ns1_amount_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getApprovedAmount(), ns1_approvedAmount_QNAME, null, writer, context);
        ns2_myDateSpan_SOAPSerializer.serialize(instance.getApprovedDuration(), ns1_approvedDuration_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAuthorizeCode(), ns1_authorizeCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAutoInvoiceId(), ns1_autoInvoiceId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAutoSubscriptionId(), ns1_autoSubscriptionId_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isAutomaticRenewal()), ns1_automaticRenewal_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBillingClientId(), ns1_billingClientId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBillingCode(), ns1_billingCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getBlockingReason(), ns1_blockingReason_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getCardExpireDate(), ns1_cardExpireDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCardExternalId(), ns1_cardExternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCardNumber(), ns1_cardNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffAccount(), ns1_chargeOffAccount_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getChargeOffAmount(), ns1_chargeOffAmount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffCard(), ns1_chargeOffCard_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getChargeOffCardDescription(), ns1_chargeOffCardDescription_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getChargeOffCardExpireDate(), ns1_chargeOffCardExpireDate_QNAME, null, writer, context);
        ns2_myCurrency_SOAPSerializer.serialize(instance.getChargeOffCurrency(), ns1_chargeOffCurrency_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getChargeOffDate(), ns1_chargeOffDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClaimNumber(), ns1_claimNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClientCreationChannel(), ns1_clientCreationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getClientCreationDate(), ns1_clientCreationDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClientOperationChannel(), ns1_clientOperationChannel_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getClientOperationDate(), ns1_clientOperationDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClosedAccount(), ns1_closedAccount_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getClosingDate(), ns1_closingDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCodeATM(), ns1_codeATM_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCodeService(), ns1_codeService_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getCommission(), ns1_commission_QNAME, null, writer, context);
        ns2_myCommissionOptions_SOAPSerializer.serialize(instance.getCommissionOptions(), ns1_commissionOptions_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getConditions(), ns1_conditions_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getConditionsId(), ns1_conditionsId_QNAME, null, writer, context);
        ns2_myEmployeeInfo_SOAPSerializer.serialize(instance.getConfirmedEmployeeInfo(), ns1_confirmedEmployeeInfo_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isConnectChargeOffResourceToMobileBank()), ns1_connectChargeOffResourceToMobileBank_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getConvertionRate(), ns1_convertionRate_QNAME, null, writer, context);
        ns2_myEmployeeInfo_SOAPSerializer.serialize(instance.getCreatedEmployeeInfo(), ns1_createdEmployeeInfo_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getCreditBuyRate(), ns1_creditBuyRate_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getCreditSaleRate(), ns1_creditSaleRate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getDateAccepted(), ns1_dateAccepted_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getDateCreated(), ns1_dateCreated_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getDebetBuyRate(), ns1_debetBuyRate_QNAME, null, writer, context);
        ns2_myCurrencyRate_SOAPSerializer.serialize(instance.getDebetSaleRate(), ns1_debetSaleRate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDepositAccount(), ns1_depositAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDepositConditionsId(), ns1_depositConditionsId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDestinationAccount(), ns1_destinationAccount_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getDestinationAmount(), ns1_destinationAmount_QNAME, null, writer, context);
        ns2_myCurrency_SOAPSerializer.serialize(instance.getDestinationCurrency(), ns1_destinationCurrency_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getDocumentNumber(), ns1_documentNumber_QNAME, null, writer, context);
        ns2_myDateSpan_SOAPSerializer.serialize(instance.getDuration(), ns1_duration_QNAME, null, writer, context);
        ns2_myGateDocument_SOAPSerializer.serialize(instance.getEditedDocument(), ns1_editedDocument_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getEmail(), ns1_email_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getEndDate(), ns1_endDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getExecutionDate(), ns1_executionDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getExecutionEventType(), ns1_executionEventType_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getExtendedFields(), ns1_extendedFields_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getExternalDepositId(), ns1_externalDepositId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getExternalId(), ns1_externalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getExternalOwnerId(), ns1_externalOwnerId_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getFloorLimit(), ns1_floorLimit_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getFormType(), ns1_formType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getFriendlyName(), ns1_friendlyName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getGround(), ns1_ground_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getGuarantorClaimsIterator(), ns1_guarantorClaimsIterator_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getId(), ns1_id_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getIdFromPaymentSystem(), ns1_idFromPaymentSystem_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getInputSumType(), ns1_inputSumType_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getInternalOwnerId(), ns1_internalOwnerId_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getLoanAmount(), ns1_loanAmount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getMultiBlockReceiverPointCode(), ns1_multiBlockReceiverPointCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getNextState(), ns1_nextState_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isNotVisibleBankDetails()), ns1_notVisibleBankDetails_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getNumber(), ns1_number_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getObjectAmount(), ns1_objectAmount_QNAME, null, writer, context);
        ns2_myOffice_SOAPSerializer.serialize(instance.getOffice(), ns1_office_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOfficeExternalId(), ns1_officeExternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getOperationCode(), ns1_operationCode_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getPayDay(), ns1_payDay_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPayerId(), ns1_payerId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPayerName(), ns1_payerName_QNAME, null, writer, context);
        ns3_myns3_decimal__java_math_BigDecimal_Decimal_Serializer.serialize(instance.getPercent(), ns1_percent_QNAME, null, writer, context);
        ns2_myDateSpan_SOAPSerializer.serialize(instance.getPeriod(), ns1_period_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPhoneNumber(), ns1_phoneNumber_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getPriority(), ns1_priority_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getQuestionnaireIterator(), ns1_questionnaireIterator_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverAccount(), ns1_receiverAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverAlias(), ns1_receiverAlias_QNAME, null, writer, context);
        ns2_myResidentBank_SOAPSerializer.serialize(instance.getReceiverBank(), ns1_receiverBank_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverBankName(), ns1_receiverBankName_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getReceiverBornDate(), ns1_receiverBornDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverCard(), ns1_receiverCard_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getReceiverCardExpireDate(), ns1_receiverCardExpireDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverCardType(), ns1_receiverCardType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverCountryCode(), ns1_receiverCountryCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverFirstName(), ns1_receiverFirstName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverINN(), ns1_receiverINN_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getReceiverInternalId(), ns1_receiverInternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverKPP(), ns1_receiverKPP_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverName(), ns1_receiverName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverNameForBill(), ns1_receiverNameForBill_QNAME, null, writer, context);
        ns2_myCode_SOAPSerializer.serialize(instance.getReceiverOfficeCode(), ns1_receiverOfficeCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPatrName(), ns1_receiverPatrName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPhone(), ns1_receiverPhone_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverPointCode(), ns1_receiverPointCode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverSWIFT(), ns1_receiverSWIFT_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverSurName(), ns1_receiverSurName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReceiverTransitAccount(), ns1_receiverTransitAccount_QNAME, null, writer, context);
        ns2_myResidentBank_SOAPSerializer.serialize(instance.getReceiverTransitBank(), ns1_receiverTransitBank_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRegisterNumber(), ns1_registerNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRegisterString(), ns1_registerString_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getReportStatus(), ns1_reportStatus_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getRequisite(), ns1_requisite_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getSalesCheck(), ns1_salesCheck_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getSelfAmount(), ns1_selfAmount_QNAME, null, writer, context);
        ns2_myServiceImpl_SOAPSerializer.serialize(instance.getService(), ns1_service_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getStartDate(), ns1_startDate_QNAME, null, writer, context);
        ns2_myState_SOAPSerializer.serialize(instance.getState(), ns1_state_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getSumType(), ns1_sumType_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getTaxDocumentDate(), ns1_taxDocumentDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxDocumentNumber(), ns1_taxDocumentNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxGround(), ns1_taxGround_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxKBK(), ns1_taxKBK_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxOKATO(), ns1_taxOKATO_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxPaymentStatus(), ns1_taxPaymentStatus_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxPaymentType(), ns1_taxPaymentType_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTaxPeriod(), ns1_taxPeriod_QNAME, null, writer, context);
        ns3_myns3__boolean__boolean_Boolean_Serializer.serialize(new Boolean(instance.isTemplate()), ns1_template_QNAME, null, writer, context);
        ns2_myMoney_SOAPSerializer.serialize(instance.getTotalAmountLimit(), ns1_totalAmountLimit_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTotalAmountPeriod(), ns1_totalAmountPeriod_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTransferAccount(), ns1_transferAccount_QNAME, null, writer, context);
        ns2_myGateDocument_SOAPSerializer.serialize(instance.getTransferPayment(), ns1_transferPayment_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getTransitAccount(), ns1_transitAccount_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getType(), ns1_type_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getVisitDate(), ns1_visitDate_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getWithdrawExternalId(), ns1_withdrawExternalId_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getWithdrawInternalId(), ns1_withdrawInternalId_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getWithdrawMode(), ns1_withdrawMode_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getWithdrawType(), ns1_withdrawType_QNAME, null, writer, context);
        ns5_myns5_list__CollectionInterfaceSerializer.serialize(instance.getWriteDownOperations(), ns1_writeDownOperations_QNAME, null, writer, context);
    }
}
