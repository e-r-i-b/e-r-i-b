// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.bankroll.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;

public class CardUseData_SOAPSerializer extends ObjectSerializerBase implements Initializable {
    private static final javax.xml.namespace.QName ns1_authCode_QNAME = new QName("", "authCode");
    private static final javax.xml.namespace.QName ns3_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns3_myns3_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_authDate_QNAME = new QName("", "authDate");
    private static final javax.xml.namespace.QName ns3_dateTime_TYPE_QNAME = SchemaConstants.QNAME_TYPE_DATE_TIME;
    private CombinedSerializer ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer;
    private static final javax.xml.namespace.QName ns1_authTime_QNAME = new QName("", "authTime");
    private static final javax.xml.namespace.QName ns1_cardNumber_QNAME = new QName("", "cardNumber");
    private static final javax.xml.namespace.QName ns1_clientName_QNAME = new QName("", "clientName");
    private static final javax.xml.namespace.QName ns1_confirmClerkName_QNAME = new QName("", "confirmClerkName");
    private static final javax.xml.namespace.QName ns1_confirmClerkNumber_QNAME = new QName("", "confirmClerkNumber");
    private static final javax.xml.namespace.QName ns4_long_TYPE_QNAME = SOAPConstants.QNAME_TYPE_LONG;
    private CombinedSerializer ns4_myns4__long__java_lang_Long_Long_Serializer;
    private static final javax.xml.namespace.QName ns1_confirmDate_QNAME = new QName("", "confirmDate");
    private static final javax.xml.namespace.QName ns1_confirmTime_QNAME = new QName("", "confirmTime");
    private static final javax.xml.namespace.QName ns1_experationDate_QNAME = new QName("", "experationDate");
    private static final javax.xml.namespace.QName ns1_operationDate_QNAME = new QName("", "operationDate");
    private static final javax.xml.namespace.QName ns1_operationTime_QNAME = new QName("", "operationTime");
    private static final javax.xml.namespace.QName ns1_paymasterName_QNAME = new QName("", "paymasterName");
    private static final javax.xml.namespace.QName ns1_paymasterNumber_QNAME = new QName("", "paymasterNumber");
    private static final javax.xml.namespace.QName ns1_paymentDate_QNAME = new QName("", "paymentDate");
    private static final javax.xml.namespace.QName ns1_paymentTime_QNAME = new QName("", "paymentTime");
    private static final int myAUTHCODE_INDEX = 0;
    private static final int myAUTHDATE_INDEX = 1;
    private static final int myAUTHTIME_INDEX = 2;
    private static final int myCARDNUMBER_INDEX = 3;
    private static final int myCLIENTNAME_INDEX = 4;
    private static final int myCONFIRMCLERKNAME_INDEX = 5;
    private static final int myCONFIRMCLERKNUMBER_INDEX = 6;
    private static final int myCONFIRMDATE_INDEX = 7;
    private static final int myCONFIRMTIME_INDEX = 8;
    private static final int myEXPERATIONDATE_INDEX = 9;
    private static final int myOPERATIONDATE_INDEX = 10;
    private static final int myOPERATIONTIME_INDEX = 11;
    private static final int myPAYMASTERNAME_INDEX = 12;
    private static final int myPAYMASTERNUMBER_INDEX = 13;
    private static final int myPAYMENTDATE_INDEX = 14;
    private static final int myPAYMENTTIME_INDEX = 15;
    
    public CardUseData_SOAPSerializer(QName type, boolean encodeType, boolean isNullable, String encodingStyle) {
        super(type, encodeType, isNullable, encodingStyle);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws java.lang.Exception {
        ns3_myns3_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.String.class, ns3_string_TYPE_QNAME);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.util.Calendar.class, ns3_dateTime_TYPE_QNAME);
        ns4_myns4__long__java_lang_Long_Long_Serializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, java.lang.Long.class, ns4_long_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(SOAPDeserializationState state, XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData instance = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData();
        com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder builder = null;
        java.lang.Object member;
        boolean isComplete = true;
        javax.xml.namespace.QName elementName;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authCode_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_authCode_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myAUTHCODE_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setAuthCode((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_authDate_QNAME, reader, context);
                instance.setAuthDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_authTime_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_authTime_QNAME, reader, context);
                instance.setAuthTime((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_cardNumber_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_cardNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCARDNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setCardNumber((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_clientName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_clientName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCLIENTNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setClientName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmClerkName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_confirmClerkName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONFIRMCLERKNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConfirmClerkName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmClerkNumber_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_confirmClerkNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myCONFIRMCLERKNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setConfirmClerkNumber((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_confirmDate_QNAME, reader, context);
                instance.setConfirmDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_confirmTime_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_confirmTime_QNAME, reader, context);
                instance.setConfirmTime((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_experationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_experationDate_QNAME, reader, context);
                instance.setExperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_operationDate_QNAME, reader, context);
                instance.setOperationDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_operationTime_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_operationTime_QNAME, reader, context);
                instance.setOperationTime((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_paymasterName_QNAME)) {
                member = ns3_myns3_string__java_lang_String_String_Serializer.deserialize(ns1_paymasterName_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPAYMASTERNAME_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPaymasterName((java.lang.String)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_paymasterNumber_QNAME)) {
                member = ns4_myns4__long__java_lang_Long_Long_Serializer.deserialize(ns1_paymasterNumber_QNAME, reader, context);
                if (member instanceof SOAPDeserializationState) {
                    if (builder == null) {
                        builder = new com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData_SOAPBuilder();
                    }
                    state = registerWithMemberState(instance, state, member, myPAYMASTERNUMBER_INDEX, builder);
                    isComplete = false;
                } else {
                    instance.setPaymasterNumber((java.lang.Long)member);
                }
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_paymentDate_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_paymentDate_QNAME, reader, context);
                instance.setPaymentDate((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_paymentTime_QNAME)) {
                member = ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.deserialize(ns1_paymentTime_QNAME, reader, context);
                instance.setPaymentTime((java.util.Calendar)member);
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (isComplete ? (java.lang.Object)instance : (java.lang.Object)state);
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData instance = (com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData)obj;
        
    }
    
    public void doSerializeInstance(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData instance = (com.rssl.phizic.web.gate.services.bankroll.generated.CardUseData)obj;
        
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getAuthCode(), ns1_authCode_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAuthDate(), ns1_authDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getAuthTime(), ns1_authTime_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getCardNumber(), ns1_cardNumber_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getClientName(), ns1_clientName_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getConfirmClerkName(), ns1_confirmClerkName_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getConfirmClerkNumber(), ns1_confirmClerkNumber_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getConfirmDate(), ns1_confirmDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getConfirmTime(), ns1_confirmTime_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getExperationDate(), ns1_experationDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getOperationDate(), ns1_operationDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getOperationTime(), ns1_operationTime_QNAME, null, writer, context);
        ns3_myns3_string__java_lang_String_String_Serializer.serialize(instance.getPaymasterName(), ns1_paymasterName_QNAME, null, writer, context);
        ns4_myns4__long__java_lang_Long_Long_Serializer.serialize(instance.getPaymasterNumber(), ns1_paymasterNumber_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getPaymentDate(), ns1_paymentDate_QNAME, null, writer, context);
        ns3_myns3_dateTime__java_util_Calendar_DateTimeCalendar_Serializer.serialize(instance.getPaymentTime(), ns1_paymentTime_QNAME, null, writer, context);
    }
}
