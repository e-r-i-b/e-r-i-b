// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.currency.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.server.StreamingHandlerState;
import com.sun.xml.rpc.soap.message.InternalSOAPMessage;
import com.sun.xml.rpc.soap.message.SOAPBlockInfo;
import com.sun.xml.rpc.soap.message.SOAPFaultInfo;
import com.sun.xml.rpc.soap.message.SOAPHeaderBlockInfo;
import com.sun.xml.rpc.soap.streaming.SOAPNamespaceConstants;
import com.sun.xml.rpc.soap.streaming.SOAPProtocolViolationException;
import com.sun.xml.rpc.streaming.XMLReader;

import java.lang.reflect.Method;
import javax.xml.namespace.QName;

public class CurrencyRateService_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public CurrencyRateService_Tie() throws Exception {
        super(new com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateServiceImpl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: convert2
     */
    private void invoke_convert2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_RequestStruct myCurrencyRateService_convert2_RequestStruct = null;
        Object myCurrencyRateService_convert2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyRateService_convert2_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyRateService_convert2_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_RequestStruct)((SOAPDeserializationState)myCurrencyRateService_convert2_RequestStructObj).getInstance();
        } else {
            myCurrencyRateService_convert2_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_RequestStruct)myCurrencyRateService_convert2_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRate result = 
                ((com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService) getTarget()).convert2(myCurrencyRateService_convert2_RequestStruct.getMoney_1(), myCurrencyRateService_convert2_RequestStruct.getCurrency_2(), myCurrencyRateService_convert2_RequestStruct.getOffice_3(), myCurrencyRateService_convert2_RequestStruct.getString_4());
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_ResponseStruct myCurrencyRateService_convert2_ResponseStruct =
                new com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyRateService_convert2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_convert2_convert2Response_QNAME);
            bodyBlock.setValue(myCurrencyRateService_convert2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyRateService_convert2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getRate
     */
    private void invoke_getRate(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_RequestStruct myCurrencyRateService_getRate_RequestStruct = null;
        Object myCurrencyRateService_getRate_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyRateService_getRate_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyRateService_getRate_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_RequestStruct)((SOAPDeserializationState)myCurrencyRateService_getRate_RequestStructObj).getInstance();
        } else {
            myCurrencyRateService_getRate_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_RequestStruct)myCurrencyRateService_getRate_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRate result = 
                ((com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService) getTarget()).getRate(myCurrencyRateService_getRate_RequestStruct.getCurrency_1(), myCurrencyRateService_getRate_RequestStruct.getCurrency_2(), myCurrencyRateService_getRate_RequestStruct.getString_3(), myCurrencyRateService_getRate_RequestStruct.getOffice_4(), myCurrencyRateService_getRate_RequestStruct.getString_5());
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_ResponseStruct myCurrencyRateService_getRate_ResponseStruct =
                new com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyRateService_getRate_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getRate_getRateResponse_QNAME);
            bodyBlock.setValue(myCurrencyRateService_getRate_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyRateService_getRate_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: convert
     */
    private void invoke_convert(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_RequestStruct myCurrencyRateService_convert_RequestStruct = null;
        Object myCurrencyRateService_convert_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myCurrencyRateService_convert_RequestStructObj instanceof SOAPDeserializationState) {
            myCurrencyRateService_convert_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_RequestStruct)((SOAPDeserializationState)myCurrencyRateService_convert_RequestStructObj).getInstance();
        } else {
            myCurrencyRateService_convert_RequestStruct = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_RequestStruct)myCurrencyRateService_convert_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRate result = 
                ((com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService) getTarget()).convert(myCurrencyRateService_convert_RequestStruct.getCurrency_1(), myCurrencyRateService_convert_RequestStruct.getMoney_2(), myCurrencyRateService_convert_RequestStruct.getOffice_3(), myCurrencyRateService_convert_RequestStruct.getString_4());
            com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_ResponseStruct myCurrencyRateService_convert_ResponseStruct =
                new com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myCurrencyRateService_convert_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_convert_convertResponse_QNAME);
            bodyBlock.setValue(myCurrencyRateService_convert_ResponseStruct);
            bodyBlock.setSerializer(ns1_myCurrencyRateService_convert_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_convert2_convert2_QNAME)) {
            state.getRequest().setOperationCode(convert2_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getRate_getRate_QNAME)) {
            state.getRequest().setOperationCode(getRate_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_convert_convert_QNAME)) {
            state.getRequest().setOperationCode(convert_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case convert2_OPCODE:
                deserialize_convert2(bodyReader, deserializationContext, state);
                break;
            case getRate_OPCODE:
                deserialize_getRate(bodyReader, deserializationContext, state);
                break;
            case convert_OPCODE:
                deserialize_convert(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the convert2 operation.
     */
    private void deserialize_convert2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyRateService_convert2_RequestStructObj =
            ns1_myCurrencyRateService_convert2_RequestStruct_SOAPSerializer.deserialize(ns1_convert2_convert2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_convert2_convert2_QNAME);
        bodyBlock.setValue(myCurrencyRateService_convert2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getRate operation.
     */
    private void deserialize_getRate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyRateService_getRate_RequestStructObj =
            ns1_myCurrencyRateService_getRate_RequestStruct_SOAPSerializer.deserialize(ns1_getRate_getRate_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getRate_getRate_QNAME);
        bodyBlock.setValue(myCurrencyRateService_getRate_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the convert operation.
     */
    private void deserialize_convert(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myCurrencyRateService_convert_RequestStructObj =
            ns1_myCurrencyRateService_convert_RequestStruct_SOAPSerializer.deserialize(ns1_convert_convert_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_convert_convert_QNAME);
        bodyBlock.setValue(myCurrencyRateService_convert_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case convert2_OPCODE:
                invoke_convert2(state);
                break;
            case getRate_OPCODE:
                invoke_getRate(state);
                break;
            case convert_OPCODE:
                invoke_convert(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_convert2_convert2_QNAME)) {
            return convert2_OPCODE;
        }
        if (name.equals(ns1_getRate_getRate_QNAME)) {
            return getRate_OPCODE;
        }
        if (name.equals(ns1_convert_convert_QNAME)) {
            return convert_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case convert2_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.currency.generated.Money.class,com.rssl.phizic.web.gate.services.currency.generated.Currency.class,com.rssl.phizic.web.gate.services.currency.generated.Office.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService.class).getMethod("convert2", carray);
                }
                break;
            
            case getRate_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.currency.generated.Currency.class,com.rssl.phizic.web.gate.services.currency.generated.Currency.class,java.lang.String.class,com.rssl.phizic.web.gate.services.currency.generated.Office.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService.class).getMethod("getRate", carray);
                }
                break;
            
            case convert_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.currency.generated.Currency.class,com.rssl.phizic.web.gate.services.currency.generated.Money.class,com.rssl.phizic.web.gate.services.currency.generated.Office.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService.class).getMethod("convert", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[3];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 3 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myCurrencyRateService_convert2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_RequestStruct.class, ns1_convert2_TYPE_QNAME);
        ns1_myCurrencyRateService_getRate_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_RequestStruct.class, ns1_getRate_TYPE_QNAME);
        ns1_myCurrencyRateService_getRate_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_getRate_ResponseStruct.class, ns1_getRateResponse_TYPE_QNAME);
        ns1_myCurrencyRateService_convert_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_RequestStruct.class, ns1_convert_TYPE_QNAME);
        ns1_myCurrencyRateService_convert2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert2_ResponseStruct.class, ns1_convert2Response_TYPE_QNAME);
        ns1_myCurrencyRateService_convert_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.currency.generated.CurrencyRateService_convert_ResponseStruct.class, ns1_convertResponse_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "CurrencyRateServicePort");
    private static final int convert2_OPCODE = 0;
    private static final int getRate_OPCODE = 1;
    private static final int convert_OPCODE = 2;
    private static final javax.xml.namespace.QName ns1_convert2_convert2_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert2");
    private static final javax.xml.namespace.QName ns1_convert2_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert2");
    private CombinedSerializer ns1_myCurrencyRateService_convert2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_convert2_convert2Response_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert2Response");
    private static final javax.xml.namespace.QName ns1_convert2Response_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert2Response");
    private CombinedSerializer ns1_myCurrencyRateService_convert2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getRate_getRate_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "getRate");
    private static final javax.xml.namespace.QName ns1_getRate_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "getRate");
    private CombinedSerializer ns1_myCurrencyRateService_getRate_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getRate_getRateResponse_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "getRateResponse");
    private static final javax.xml.namespace.QName ns1_getRateResponse_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "getRateResponse");
    private CombinedSerializer ns1_myCurrencyRateService_getRate_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_convert_convert_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert");
    private static final javax.xml.namespace.QName ns1_convert_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convert");
    private CombinedSerializer ns1_myCurrencyRateService_convert_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_convert_convertResponse_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convertResponse");
    private static final javax.xml.namespace.QName ns1_convertResponse_TYPE_QNAME = new QName("http://generated.currency.services.gate.web.phizic.rssl.com", "convertResponse");
    private CombinedSerializer ns1_myCurrencyRateService_convert_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.currency.services.gate.web.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
