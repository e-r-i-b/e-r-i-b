// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.clients.generated;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class ClientService_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public ClientService_Tie() throws Exception {
        super(new com.rssl.phizic.web.gate.services.clients.generated.ClientServiceImpl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: getClientsByTemplate
     */
    private void invoke_getClientsByTemplate(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_RequestStruct myClientService_getClientsByTemplate_RequestStruct = null;
        Object myClientService_getClientsByTemplate_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myClientService_getClientsByTemplate_RequestStructObj instanceof SOAPDeserializationState) {
            myClientService_getClientsByTemplate_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_RequestStruct)((SOAPDeserializationState)myClientService_getClientsByTemplate_RequestStructObj).getInstance();
        } else {
            myClientService_getClientsByTemplate_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_RequestStruct)myClientService_getClientsByTemplate_RequestStructObj;
        }
        
        try {
            java.util.List result = 
                ((com.rssl.phizic.web.gate.services.clients.generated.ClientService) getTarget()).getClientsByTemplate(myClientService_getClientsByTemplate_RequestStruct.getClient_1(), myClientService_getClientsByTemplate_RequestStruct.getOffice_2(), myClientService_getClientsByTemplate_RequestStruct.getInt_3(), myClientService_getClientsByTemplate_RequestStruct.getInt_4());
            com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_ResponseStruct myClientService_getClientsByTemplate_ResponseStruct =
                new com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myClientService_getClientsByTemplate_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientsByTemplate_getClientsByTemplateResponse_QNAME);
            bodyBlock.setValue(myClientService_getClientsByTemplate_ResponseStruct);
            bodyBlock.setSerializer(ns1_myClientService_getClientsByTemplate_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getClientById
     */
    private void invoke_getClientById(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_RequestStruct myClientService_getClientById_RequestStruct = null;
        Object myClientService_getClientById_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myClientService_getClientById_RequestStructObj instanceof SOAPDeserializationState) {
            myClientService_getClientById_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_RequestStruct)((SOAPDeserializationState)myClientService_getClientById_RequestStructObj).getInstance();
        } else {
            myClientService_getClientById_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_RequestStruct)myClientService_getClientById_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.clients.generated.Client result = 
                ((com.rssl.phizic.web.gate.services.clients.generated.ClientService) getTarget()).getClientById(myClientService_getClientById_RequestStruct.getString_1());
            com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_ResponseStruct myClientService_getClientById_ResponseStruct =
                new com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myClientService_getClientById_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientById_getClientByIdResponse_QNAME);
            bodyBlock.setValue(myClientService_getClientById_ResponseStruct);
            bodyBlock.setSerializer(ns1_myClientService_getClientById_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getClientByCardNumber
     */
    private void invoke_getClientByCardNumber(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_RequestStruct myClientService_getClientByCardNumber_RequestStruct = null;
        Object myClientService_getClientByCardNumber_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myClientService_getClientByCardNumber_RequestStructObj instanceof SOAPDeserializationState) {
            myClientService_getClientByCardNumber_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_RequestStruct)((SOAPDeserializationState)myClientService_getClientByCardNumber_RequestStructObj).getInstance();
        } else {
            myClientService_getClientByCardNumber_RequestStruct = (com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_RequestStruct)myClientService_getClientByCardNumber_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.clients.generated.Client result = 
                ((com.rssl.phizic.web.gate.services.clients.generated.ClientService) getTarget()).getClientByCardNumber(myClientService_getClientByCardNumber_RequestStruct.getString_1(), myClientService_getClientByCardNumber_RequestStruct.getString_2());
            com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_ResponseStruct myClientService_getClientByCardNumber_ResponseStruct =
                new com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myClientService_getClientByCardNumber_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientByCardNumber_getClientByCardNumberResponse_QNAME);
            bodyBlock.setValue(myClientService_getClientByCardNumber_ResponseStruct);
            bodyBlock.setSerializer(ns1_myClientService_getClientByCardNumber_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_getClientsByTemplate_getClientsByTemplate_QNAME)) {
            state.getRequest().setOperationCode(getClientsByTemplate_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getClientById_getClientById_QNAME)) {
            state.getRequest().setOperationCode(getClientById_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getClientByCardNumber_getClientByCardNumber_QNAME)) {
            state.getRequest().setOperationCode(getClientByCardNumber_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case getClientsByTemplate_OPCODE:
                deserialize_getClientsByTemplate(bodyReader, deserializationContext, state);
                break;
            case getClientById_OPCODE:
                deserialize_getClientById(bodyReader, deserializationContext, state);
                break;
            case getClientByCardNumber_OPCODE:
                deserialize_getClientByCardNumber(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the getClientsByTemplate operation.
     */
    private void deserialize_getClientsByTemplate(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myClientService_getClientsByTemplate_RequestStructObj =
            ns1_myClientService_getClientsByTemplate_RequestStruct_SOAPSerializer.deserialize(ns1_getClientsByTemplate_getClientsByTemplate_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientsByTemplate_getClientsByTemplate_QNAME);
        bodyBlock.setValue(myClientService_getClientsByTemplate_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getClientById operation.
     */
    private void deserialize_getClientById(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myClientService_getClientById_RequestStructObj =
            ns1_myClientService_getClientById_RequestStruct_SOAPSerializer.deserialize(ns1_getClientById_getClientById_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientById_getClientById_QNAME);
        bodyBlock.setValue(myClientService_getClientById_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getClientByCardNumber operation.
     */
    private void deserialize_getClientByCardNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myClientService_getClientByCardNumber_RequestStructObj =
            ns1_myClientService_getClientByCardNumber_RequestStruct_SOAPSerializer.deserialize(ns1_getClientByCardNumber_getClientByCardNumber_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientByCardNumber_getClientByCardNumber_QNAME);
        bodyBlock.setValue(myClientService_getClientByCardNumber_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case getClientsByTemplate_OPCODE:
                invoke_getClientsByTemplate(state);
                break;
            case getClientById_OPCODE:
                invoke_getClientById(state);
                break;
            case getClientByCardNumber_OPCODE:
                invoke_getClientByCardNumber(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_getClientsByTemplate_getClientsByTemplate_QNAME)) {
            return getClientsByTemplate_OPCODE;
        }
        if (name.equals(ns1_getClientById_getClientById_QNAME)) {
            return getClientById_OPCODE;
        }
        if (name.equals(ns1_getClientByCardNumber_getClientByCardNumber_QNAME)) {
            return getClientByCardNumber_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case getClientsByTemplate_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.clients.generated.Client.class,com.rssl.phizic.web.gate.services.clients.generated.Office.class,Integer.TYPE,Integer.TYPE };
                    theMethod = (com.rssl.phizic.web.gate.services.clients.generated.ClientService.class).getMethod("getClientsByTemplate", carray);
                }
                break;
            
            case getClientById_OPCODE:
                {
                    Class[] carray = { java.lang.String.class };
                    theMethod = (com.rssl.phizic.web.gate.services.clients.generated.ClientService.class).getMethod("getClientById", carray);
                }
                break;
            
            case getClientByCardNumber_OPCODE:
                {
                    Class[] carray = { java.lang.String.class,java.lang.String.class };
                    theMethod = (com.rssl.phizic.web.gate.services.clients.generated.ClientService.class).getMethod("getClientByCardNumber", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[3];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 3 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myClientService_getClientById_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_RequestStruct.class, ns1_getClientById_TYPE_QNAME);
        ns1_myClientService_getClientById_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientById_ResponseStruct.class, ns1_getClientByIdResponse_TYPE_QNAME);
        ns1_myClientService_getClientsByTemplate_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_RequestStruct.class, ns1_getClientsByTemplate_TYPE_QNAME);
        ns1_myClientService_getClientByCardNumber_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_ResponseStruct.class, ns1_getClientByCardNumberResponse_TYPE_QNAME);
        ns1_myClientService_getClientsByTemplate_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientsByTemplate_ResponseStruct.class, ns1_getClientsByTemplateResponse_TYPE_QNAME);
        ns1_myClientService_getClientByCardNumber_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.clients.generated.ClientService_getClientByCardNumber_RequestStruct.class, ns1_getClientByCardNumber_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "ClientServicePort");
    private static final int getClientsByTemplate_OPCODE = 0;
    private static final int getClientById_OPCODE = 1;
    private static final int getClientByCardNumber_OPCODE = 2;
    private static final javax.xml.namespace.QName ns1_getClientsByTemplate_getClientsByTemplate_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientsByTemplate");
    private static final javax.xml.namespace.QName ns1_getClientsByTemplate_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientsByTemplate");
    private CombinedSerializer ns1_myClientService_getClientsByTemplate_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientsByTemplate_getClientsByTemplateResponse_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientsByTemplateResponse");
    private static final javax.xml.namespace.QName ns1_getClientsByTemplateResponse_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientsByTemplateResponse");
    private CombinedSerializer ns1_myClientService_getClientsByTemplate_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientById_getClientById_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientById");
    private static final javax.xml.namespace.QName ns1_getClientById_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientById");
    private CombinedSerializer ns1_myClientService_getClientById_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientById_getClientByIdResponse_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByIdResponse");
    private static final javax.xml.namespace.QName ns1_getClientByIdResponse_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByIdResponse");
    private CombinedSerializer ns1_myClientService_getClientById_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientByCardNumber_getClientByCardNumber_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByCardNumber");
    private static final javax.xml.namespace.QName ns1_getClientByCardNumber_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByCardNumber");
    private CombinedSerializer ns1_myClientService_getClientByCardNumber_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientByCardNumber_getClientByCardNumberResponse_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByCardNumberResponse");
    private static final javax.xml.namespace.QName ns1_getClientByCardNumberResponse_TYPE_QNAME = new QName("http://generated.clients.services.gate.web.phizic.rssl.com", "getClientByCardNumberResponse");
    private CombinedSerializer ns1_myClientService_getClientByCardNumber_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.clients.services.gate.web.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
