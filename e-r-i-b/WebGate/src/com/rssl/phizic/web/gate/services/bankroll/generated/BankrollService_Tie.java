// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.web.gate.services.bankroll.generated;

import com.sun.xml.rpc.server.http.MessageContextProperties;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.soap.streaming.*;
import com.sun.xml.rpc.soap.message.*;
import com.sun.xml.rpc.soap.SOAPVersion;
import com.sun.xml.rpc.soap.SOAPEncodingConstants;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.rmi.RemoteException;
import java.util.Iterator;
import java.lang.reflect.*;
import java.lang.Class;
import com.sun.xml.rpc.server.*;
import javax.xml.rpc.handler.HandlerInfo;
import com.sun.xml.rpc.client.HandlerChainImpl;

public class BankrollService_Tie
    extends com.sun.xml.rpc.server.TieBase implements SerializerConstants {
    
    
    
    public BankrollService_Tie() throws Exception {
        super(new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollServiceImpl_SerializerRegistry().getRegistry());
        initialize(internalTypeMappingRegistry);
    }
    
    /*
     * This method does the actual method invocation for operation: getAccount
     */
    private void invoke_getAccount(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_RequestStruct myBankrollService_getAccount_RequestStruct = null;
        Object myBankrollService_getAccount_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccount_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccount_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccount_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccount_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_RequestStruct)myBankrollService_getAccount_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccount(myBankrollService_getAccount_RequestStruct.getArrayOfString_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_ResponseStruct myBankrollService_getAccount_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccount_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccount_getAccountResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAccount_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccount_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateCardOperation
     */
    private void invoke___forGenerateCardOperation(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_RequestStruct myBankrollService___forGenerateCardOperation_RequestStruct = null;
        Object myBankrollService___forGenerateCardOperation_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateCardOperation_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateCardOperation_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateCardOperation_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateCardOperation_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_RequestStruct)myBankrollService___forGenerateCardOperation_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.CardOperation result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateCardOperation();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_ResponseStruct myBankrollService___forGenerateCardOperation_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateCardOperation_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateCardOperation___forGenerateCardOperationResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateCardOperation_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateCardOperation_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccountByNumber
     */
    private void invoke_getAccountByNumber(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_RequestStruct myBankrollService_getAccountByNumber_RequestStruct = null;
        Object myBankrollService_getAccountByNumber_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccountByNumber_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccountByNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccountByNumber_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccountByNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_RequestStruct)myBankrollService_getAccountByNumber_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccountByNumber(myBankrollService_getAccountByNumber_RequestStruct.getArrayOfPair_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_ResponseStruct myBankrollService_getAccountByNumber_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccountByNumber_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountByNumber_getAccountByNumberResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAccountByNumber_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccountByNumber_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateOverdraftInfo
     */
    private void invoke___forGenerateOverdraftInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_RequestStruct myBankrollService___forGenerateOverdraftInfo_RequestStruct = null;
        Object myBankrollService___forGenerateOverdraftInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateOverdraftInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateOverdraftInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateOverdraftInfo_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateOverdraftInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_RequestStruct)myBankrollService___forGenerateOverdraftInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.OverdraftInfo result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateOverdraftInfo();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_ResponseStruct myBankrollService___forGenerateOverdraftInfo_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateOverdraftInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfoResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateOverdraftInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateOverdraftInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardAbstract
     */
    private void invoke_getCardAbstract(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_RequestStruct myBankrollService_getCardAbstract_RequestStruct = null;
        Object myBankrollService_getCardAbstract_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getCardAbstract_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getCardAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_RequestStruct)((SOAPDeserializationState)myBankrollService_getCardAbstract_RequestStructObj).getInstance();
        } else {
            myBankrollService_getCardAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_RequestStruct)myBankrollService_getCardAbstract_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getCardAbstract(myBankrollService_getCardAbstract_RequestStruct.getLong_1(), myBankrollService_getCardAbstract_RequestStruct.getArrayOfCard_2());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_ResponseStruct myBankrollService_getCardAbstract_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getCardAbstract_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAbstract_getCardAbstractResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getCardAbstract_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getCardAbstract_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccountExtendedAbstract
     */
    private void invoke_getAccountExtendedAbstract(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_RequestStruct myBankrollService_getAccountExtendedAbstract_RequestStruct = null;
        Object myBankrollService_getAccountExtendedAbstract_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccountExtendedAbstract_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccountExtendedAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccountExtendedAbstract_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccountExtendedAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_RequestStruct)myBankrollService_getAccountExtendedAbstract_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.AccountAbstract result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccountExtendedAbstract(myBankrollService_getAccountExtendedAbstract_RequestStruct.getAccount_1(), myBankrollService_getAccountExtendedAbstract_RequestStruct.getCalendar_2(), myBankrollService_getAccountExtendedAbstract_RequestStruct.getCalendar_3());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_ResponseStruct myBankrollService_getAccountExtendedAbstract_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccountExtendedAbstract_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountExtendedAbstract_getAccountExtendedAbstractResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAccountExtendedAbstract_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccountExtendedAbstract_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardAbstract2
     */
    private void invoke_getCardAbstract2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_RequestStruct myBankrollService_getCardAbstract2_RequestStruct = null;
        Object myBankrollService_getCardAbstract2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getCardAbstract2_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getCardAbstract2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_RequestStruct)((SOAPDeserializationState)myBankrollService_getCardAbstract2_RequestStructObj).getInstance();
        } else {
            myBankrollService_getCardAbstract2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_RequestStruct)myBankrollService_getCardAbstract2_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.CardAbstract result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getCardAbstract2(myBankrollService_getCardAbstract2_RequestStruct.getCard_1(), myBankrollService_getCardAbstract2_RequestStruct.getCalendar_2(), myBankrollService_getCardAbstract2_RequestStruct.getCalendar_3(), myBankrollService_getCardAbstract2_RequestStruct.getBoolean_4());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_ResponseStruct myBankrollService_getCardAbstract2_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getCardAbstract2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAbstract2_getCardAbstract2Response_QNAME);
            bodyBlock.setValue(myBankrollService_getCardAbstract2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getCardAbstract2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getOwnerInfoByCardNumber
     */
    private void invoke_getOwnerInfoByCardNumber(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_RequestStruct myBankrollService_getOwnerInfoByCardNumber_RequestStruct = null;
        Object myBankrollService_getOwnerInfoByCardNumber_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getOwnerInfoByCardNumber_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getOwnerInfoByCardNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_RequestStruct)((SOAPDeserializationState)myBankrollService_getOwnerInfoByCardNumber_RequestStructObj).getInstance();
        } else {
            myBankrollService_getOwnerInfoByCardNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_RequestStruct)myBankrollService_getOwnerInfoByCardNumber_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getOwnerInfoByCardNumber(myBankrollService_getOwnerInfoByCardNumber_RequestStruct.getArrayOfPair_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_ResponseStruct myBankrollService_getOwnerInfoByCardNumber_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getOwnerInfoByCardNumber_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumberResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getOwnerInfoByCardNumber_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getOwnerInfoByCardNumber_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAdditionalCards
     */
    private void invoke_getAdditionalCards(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_RequestStruct myBankrollService_getAdditionalCards_RequestStruct = null;
        Object myBankrollService_getAdditionalCards_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAdditionalCards_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAdditionalCards_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_RequestStruct)((SOAPDeserializationState)myBankrollService_getAdditionalCards_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAdditionalCards_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_RequestStruct)myBankrollService_getAdditionalCards_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAdditionalCards(myBankrollService_getAdditionalCards_RequestStruct.getArrayOfCard_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_ResponseStruct myBankrollService_getAdditionalCards_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAdditionalCards_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAdditionalCards_getAdditionalCardsResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAdditionalCards_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAdditionalCards_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateIKFLException
     */
    private void invoke___forGenerateIKFLException(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_RequestStruct myBankrollService___forGenerateIKFLException_RequestStruct = null;
        Object myBankrollService___forGenerateIKFLException_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateIKFLException_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateIKFLException_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateIKFLException_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateIKFLException_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_RequestStruct)myBankrollService___forGenerateIKFLException_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.IKFLException result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateIKFLException();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_ResponseStruct myBankrollService___forGenerateIKFLException_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateIKFLException_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateIKFLException___forGenerateIKFLExceptionResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateIKFLException_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateIKFLException_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCard
     */
    private void invoke_getCard(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_RequestStruct myBankrollService_getCard_RequestStruct = null;
        Object myBankrollService_getCard_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getCard_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getCard_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_RequestStruct)((SOAPDeserializationState)myBankrollService_getCard_RequestStructObj).getInstance();
        } else {
            myBankrollService_getCard_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_RequestStruct)myBankrollService_getCard_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getCard(myBankrollService_getCard_RequestStruct.getArrayOfString_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_ResponseStruct myBankrollService_getCard_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getCard_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCard_getCardResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getCard_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getCard_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateAccountInfo
     */
    private void invoke___forGenerateAccountInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_RequestStruct myBankrollService___forGenerateAccountInfo_RequestStruct = null;
        Object myBankrollService___forGenerateAccountInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateAccountInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateAccountInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateAccountInfo_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateAccountInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_RequestStruct)myBankrollService___forGenerateAccountInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.AccountInfo result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateAccountInfo();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_ResponseStruct myBankrollService___forGenerateAccountInfo_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateAccountInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateAccountInfo___forGenerateAccountInfoResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateAccountInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateAccountInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateClientDocument
     */
    private void invoke___forGenerateClientDocument(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_RequestStruct myBankrollService___forGenerateClientDocument_RequestStruct = null;
        Object myBankrollService___forGenerateClientDocument_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateClientDocument_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateClientDocument_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateClientDocument_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateClientDocument_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_RequestStruct)myBankrollService___forGenerateClientDocument_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.ClientDocument result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateClientDocument();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_ResponseStruct myBankrollService___forGenerateClientDocument_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateClientDocument_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateClientDocument___forGenerateClientDocumentResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateClientDocument_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateClientDocument_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardByNumber
     */
    private void invoke_getCardByNumber(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_RequestStruct myBankrollService_getCardByNumber_RequestStruct = null;
        Object myBankrollService_getCardByNumber_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getCardByNumber_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getCardByNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_RequestStruct)((SOAPDeserializationState)myBankrollService_getCardByNumber_RequestStructObj).getInstance();
        } else {
            myBankrollService_getCardByNumber_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_RequestStruct)myBankrollService_getCardByNumber_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getCardByNumber(myBankrollService_getCardByNumber_RequestStruct.getClient_1(), myBankrollService_getCardByNumber_RequestStruct.getArrayOfPair_2());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_ResponseStruct myBankrollService_getCardByNumber_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getCardByNumber_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardByNumber_getCardByNumberResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getCardByNumber_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getCardByNumber_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccountAbstract2
     */
    private void invoke_getAccountAbstract2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_RequestStruct myBankrollService_getAccountAbstract2_RequestStruct = null;
        Object myBankrollService_getAccountAbstract2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccountAbstract2_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccountAbstract2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccountAbstract2_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccountAbstract2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_RequestStruct)myBankrollService_getAccountAbstract2_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.AccountAbstract result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccountAbstract2(myBankrollService_getAccountAbstract2_RequestStruct.getAccount_1(), myBankrollService_getAccountAbstract2_RequestStruct.getCalendar_2(), myBankrollService_getAccountAbstract2_RequestStruct.getCalendar_3(), myBankrollService_getAccountAbstract2_RequestStruct.getBoolean_4());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_ResponseStruct myBankrollService_getAccountAbstract2_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccountAbstract2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountAbstract2_getAccountAbstract2Response_QNAME);
            bodyBlock.setValue(myBankrollService_getAccountAbstract2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccountAbstract2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateCardInfo
     */
    private void invoke___forGenerateCardInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_RequestStruct myBankrollService___forGenerateCardInfo_RequestStruct = null;
        Object myBankrollService___forGenerateCardInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateCardInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateCardInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateCardInfo_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateCardInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_RequestStruct)myBankrollService___forGenerateCardInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.CardInfo result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateCardInfo();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_ResponseStruct myBankrollService___forGenerateCardInfo_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateCardInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateCardInfo___forGenerateCardInfoResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateCardInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateCardInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getClientAccounts
     */
    private void invoke_getClientAccounts(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_RequestStruct myBankrollService_getClientAccounts_RequestStruct = null;
        Object myBankrollService_getClientAccounts_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getClientAccounts_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getClientAccounts_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_RequestStruct)((SOAPDeserializationState)myBankrollService_getClientAccounts_RequestStructObj).getInstance();
        } else {
            myBankrollService_getClientAccounts_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_RequestStruct)myBankrollService_getClientAccounts_RequestStructObj;
        }
        
        try {
            java.util.List result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getClientAccounts(myBankrollService_getClientAccounts_RequestStruct.getClient_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_ResponseStruct myBankrollService_getClientAccounts_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getClientAccounts_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientAccounts_getClientAccountsResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getClientAccounts_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getClientAccounts_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getClientCards
     */
    private void invoke_getClientCards(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_RequestStruct myBankrollService_getClientCards_RequestStruct = null;
        Object myBankrollService_getClientCards_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getClientCards_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getClientCards_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_RequestStruct)((SOAPDeserializationState)myBankrollService_getClientCards_RequestStructObj).getInstance();
        } else {
            myBankrollService_getClientCards_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_RequestStruct)myBankrollService_getClientCards_RequestStructObj;
        }
        
        try {
            java.util.List result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getClientCards(myBankrollService_getClientCards_RequestStruct.getClient_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_ResponseStruct myBankrollService_getClientCards_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getClientCards_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientCards_getClientCardsResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getClientCards_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getClientCards_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getOwnerInfo
     */
    private void invoke_getOwnerInfo(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_RequestStruct myBankrollService_getOwnerInfo_RequestStruct = null;
        Object myBankrollService_getOwnerInfo_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getOwnerInfo_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getOwnerInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_RequestStruct)((SOAPDeserializationState)myBankrollService_getOwnerInfo_RequestStructObj).getInstance();
        } else {
            myBankrollService_getOwnerInfo_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_RequestStruct)myBankrollService_getOwnerInfo_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getOwnerInfo(myBankrollService_getOwnerInfo_RequestStruct.getArrayOfAccount_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_ResponseStruct myBankrollService_getOwnerInfo_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getOwnerInfo_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfo_getOwnerInfoResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getOwnerInfo_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getOwnerInfo_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccHistoryFullExtract
     */
    private void invoke_getAccHistoryFullExtract(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_RequestStruct myBankrollService_getAccHistoryFullExtract_RequestStruct = null;
        Object myBankrollService_getAccHistoryFullExtract_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccHistoryFullExtract_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccHistoryFullExtract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccHistoryFullExtract_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccHistoryFullExtract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_RequestStruct)myBankrollService_getAccHistoryFullExtract_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.AccountAbstract result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccHistoryFullExtract(myBankrollService_getAccHistoryFullExtract_RequestStruct.getAccount_1(), myBankrollService_getAccHistoryFullExtract_RequestStruct.getCalendar_2(), myBankrollService_getAccHistoryFullExtract_RequestStruct.getCalendar_3(), myBankrollService_getAccHistoryFullExtract_RequestStruct.getBoolean_4());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_ResponseStruct myBankrollService_getAccHistoryFullExtract_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccHistoryFullExtract_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccHistoryFullExtract_getAccHistoryFullExtractResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAccHistoryFullExtract_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccHistoryFullExtract_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateAccountTransaction
     */
    private void invoke___forGenerateAccountTransaction(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_RequestStruct myBankrollService___forGenerateAccountTransaction_RequestStruct = null;
        Object myBankrollService___forGenerateAccountTransaction_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateAccountTransaction_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateAccountTransaction_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateAccountTransaction_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateAccountTransaction_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_RequestStruct)myBankrollService___forGenerateAccountTransaction_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.AccountTransaction result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateAccountTransaction();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_ResponseStruct myBankrollService___forGenerateAccountTransaction_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateAccountTransaction_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateAccountTransaction___forGenerateAccountTransactionResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateAccountTransaction_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateAccountTransaction_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getCardPrimaryAccount
     */
    private void invoke_getCardPrimaryAccount(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_RequestStruct myBankrollService_getCardPrimaryAccount_RequestStruct = null;
        Object myBankrollService_getCardPrimaryAccount_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getCardPrimaryAccount_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getCardPrimaryAccount_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_RequestStruct)((SOAPDeserializationState)myBankrollService_getCardPrimaryAccount_RequestStructObj).getInstance();
        } else {
            myBankrollService_getCardPrimaryAccount_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_RequestStruct)myBankrollService_getCardPrimaryAccount_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getCardPrimaryAccount(myBankrollService_getCardPrimaryAccount_RequestStruct.getArrayOfCard_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_ResponseStruct myBankrollService_getCardPrimaryAccount_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getCardPrimaryAccount_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardPrimaryAccount_getCardPrimaryAccountResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getCardPrimaryAccount_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getCardPrimaryAccount_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getAccountAbstract
     */
    private void invoke_getAccountAbstract(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_RequestStruct myBankrollService_getAccountAbstract_RequestStruct = null;
        Object myBankrollService_getAccountAbstract_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getAccountAbstract_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getAccountAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_RequestStruct)((SOAPDeserializationState)myBankrollService_getAccountAbstract_RequestStructObj).getInstance();
        } else {
            myBankrollService_getAccountAbstract_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_RequestStruct)myBankrollService_getAccountAbstract_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getAccountAbstract(myBankrollService_getAccountAbstract_RequestStruct.getLong_1(), myBankrollService_getAccountAbstract_RequestStruct.getArrayOfAccount_2());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_ResponseStruct myBankrollService_getAccountAbstract_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getAccountAbstract_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountAbstract_getAccountAbstractResponse_QNAME);
            bodyBlock.setValue(myBankrollService_getAccountAbstract_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getAccountAbstract_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: __forGenerateTrustee
     */
    private void invoke___forGenerateTrustee(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_RequestStruct myBankrollService___forGenerateTrustee_RequestStruct = null;
        Object myBankrollService___forGenerateTrustee_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService___forGenerateTrustee_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService___forGenerateTrustee_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_RequestStruct)((SOAPDeserializationState)myBankrollService___forGenerateTrustee_RequestStructObj).getInstance();
        } else {
            myBankrollService___forGenerateTrustee_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_RequestStruct)myBankrollService___forGenerateTrustee_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.Trustee result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).__forGenerateTrustee();
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_ResponseStruct myBankrollService___forGenerateTrustee_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService___forGenerateTrustee_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateTrustee___forGenerateTrusteeResponse_QNAME);
            bodyBlock.setValue(myBankrollService___forGenerateTrustee_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService___forGenerateTrustee_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method does the actual method invocation for operation: getOwnerInfo2
     */
    private void invoke_getOwnerInfo2(StreamingHandlerState state) throws Exception {
        
        com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_RequestStruct myBankrollService_getOwnerInfo2_RequestStruct = null;
        Object myBankrollService_getOwnerInfo2_RequestStructObj =
            state.getRequest().getBody().getValue();
        
        if (myBankrollService_getOwnerInfo2_RequestStructObj instanceof SOAPDeserializationState) {
            myBankrollService_getOwnerInfo2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_RequestStruct)((SOAPDeserializationState)myBankrollService_getOwnerInfo2_RequestStructObj).getInstance();
        } else {
            myBankrollService_getOwnerInfo2_RequestStruct = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_RequestStruct)myBankrollService_getOwnerInfo2_RequestStructObj;
        }
        
        try {
            com.rssl.phizic.web.gate.services.bankroll.generated.GroupResult result = 
                ((com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService) getTarget()).getOwnerInfo2(myBankrollService_getOwnerInfo2_RequestStruct.getArrayOfCard_1());
            com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_ResponseStruct myBankrollService_getOwnerInfo2_ResponseStruct =
                new com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_ResponseStruct();
            SOAPHeaderBlockInfo headerInfo;
            myBankrollService_getOwnerInfo2_ResponseStruct.setResult(result);
            
            SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfo2_getOwnerInfo2Response_QNAME);
            bodyBlock.setValue(myBankrollService_getOwnerInfo2_ResponseStruct);
            bodyBlock.setSerializer(ns1_myBankrollService_getOwnerInfo2_ResponseStruct_SOAPSerializer);
            state.getResponse().setBody(bodyBlock);
        } catch (javax.xml.rpc.soap.SOAPFaultException e) {
            SOAPFaultInfo fault = new SOAPFaultInfo(e.getFaultCode(),
                e.getFaultString(), e.getFaultActor(), e.getDetail());
            SOAPBlockInfo faultBlock = new SOAPBlockInfo(com.sun.xml.rpc.encoding.soap.SOAPConstants.QNAME_SOAP_FAULT);
            faultBlock.setValue(fault);
            faultBlock.setSerializer(new SOAPFaultInfoSerializer(false, e.getDetail()==null));
            state.getResponse().setBody(faultBlock);
            state.getResponse().setFailure(true);
        }
    }
    
    /*
     * This method must determine the opcode of the operation that has been invoked.
     */
    protected void peekFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        if (bodyReader.getName().equals(ns1_getAccount_getAccount_QNAME)) {
            state.getRequest().setOperationCode(getAccount_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateCardOperation___forGenerateCardOperation_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateCardOperation_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccountByNumber_getAccountByNumber_QNAME)) {
            state.getRequest().setOperationCode(getAccountByNumber_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfo_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateOverdraftInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardAbstract_getCardAbstract_QNAME)) {
            state.getRequest().setOperationCode(getCardAbstract_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccountExtendedAbstract_getAccountExtendedAbstract_QNAME)) {
            state.getRequest().setOperationCode(getAccountExtendedAbstract_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardAbstract2_getCardAbstract2_QNAME)) {
            state.getRequest().setOperationCode(getCardAbstract2_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumber_QNAME)) {
            state.getRequest().setOperationCode(getOwnerInfoByCardNumber_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAdditionalCards_getAdditionalCards_QNAME)) {
            state.getRequest().setOperationCode(getAdditionalCards_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateIKFLException___forGenerateIKFLException_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateIKFLException_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCard_getCard_QNAME)) {
            state.getRequest().setOperationCode(getCard_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateAccountInfo___forGenerateAccountInfo_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateAccountInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateClientDocument___forGenerateClientDocument_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateClientDocument_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardByNumber_getCardByNumber_QNAME)) {
            state.getRequest().setOperationCode(getCardByNumber_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccountAbstract2_getAccountAbstract2_QNAME)) {
            state.getRequest().setOperationCode(getAccountAbstract2_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateCardInfo___forGenerateCardInfo_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateCardInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getClientAccounts_getClientAccounts_QNAME)) {
            state.getRequest().setOperationCode(getClientAccounts_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getClientCards_getClientCards_QNAME)) {
            state.getRequest().setOperationCode(getClientCards_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getOwnerInfo_getOwnerInfo_QNAME)) {
            state.getRequest().setOperationCode(getOwnerInfo_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccHistoryFullExtract_getAccHistoryFullExtract_QNAME)) {
            state.getRequest().setOperationCode(getAccHistoryFullExtract_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateAccountTransaction___forGenerateAccountTransaction_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateAccountTransaction_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getCardPrimaryAccount_getCardPrimaryAccount_QNAME)) {
            state.getRequest().setOperationCode(getCardPrimaryAccount_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getAccountAbstract_getAccountAbstract_QNAME)) {
            state.getRequest().setOperationCode(getAccountAbstract_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1___forGenerateTrustee___forGenerateTrustee_QNAME)) {
            state.getRequest().setOperationCode(__forGenerateTrustee_OPCODE);
        }
        else if (bodyReader.getName().equals(ns1_getOwnerInfo2_getOwnerInfo2_QNAME)) {
            state.getRequest().setOperationCode(getOwnerInfo2_OPCODE);
        }
        else {
            throw new SOAPProtocolViolationException("soap.operation.unrecognized", bodyReader.getName().toString());
        }
    }
    
    /*
     *  this method deserializes the request/response structure in the body
     */
    protected void readFirstBodyElement(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState  state) throws Exception {
        int opcode = state.getRequest().getOperationCode();
        switch (opcode) {
            case getAccount_OPCODE:
                deserialize_getAccount(bodyReader, deserializationContext, state);
                break;
            case __forGenerateCardOperation_OPCODE:
                deserialize___forGenerateCardOperation(bodyReader, deserializationContext, state);
                break;
            case getAccountByNumber_OPCODE:
                deserialize_getAccountByNumber(bodyReader, deserializationContext, state);
                break;
            case __forGenerateOverdraftInfo_OPCODE:
                deserialize___forGenerateOverdraftInfo(bodyReader, deserializationContext, state);
                break;
            case getCardAbstract_OPCODE:
                deserialize_getCardAbstract(bodyReader, deserializationContext, state);
                break;
            case getAccountExtendedAbstract_OPCODE:
                deserialize_getAccountExtendedAbstract(bodyReader, deserializationContext, state);
                break;
            case getCardAbstract2_OPCODE:
                deserialize_getCardAbstract2(bodyReader, deserializationContext, state);
                break;
            case getOwnerInfoByCardNumber_OPCODE:
                deserialize_getOwnerInfoByCardNumber(bodyReader, deserializationContext, state);
                break;
            case getAdditionalCards_OPCODE:
                deserialize_getAdditionalCards(bodyReader, deserializationContext, state);
                break;
            case __forGenerateIKFLException_OPCODE:
                deserialize___forGenerateIKFLException(bodyReader, deserializationContext, state);
                break;
            case getCard_OPCODE:
                deserialize_getCard(bodyReader, deserializationContext, state);
                break;
            case __forGenerateAccountInfo_OPCODE:
                deserialize___forGenerateAccountInfo(bodyReader, deserializationContext, state);
                break;
            case __forGenerateClientDocument_OPCODE:
                deserialize___forGenerateClientDocument(bodyReader, deserializationContext, state);
                break;
            case getCardByNumber_OPCODE:
                deserialize_getCardByNumber(bodyReader, deserializationContext, state);
                break;
            case getAccountAbstract2_OPCODE:
                deserialize_getAccountAbstract2(bodyReader, deserializationContext, state);
                break;
            case __forGenerateCardInfo_OPCODE:
                deserialize___forGenerateCardInfo(bodyReader, deserializationContext, state);
                break;
            case getClientAccounts_OPCODE:
                deserialize_getClientAccounts(bodyReader, deserializationContext, state);
                break;
            case getClientCards_OPCODE:
                deserialize_getClientCards(bodyReader, deserializationContext, state);
                break;
            case getOwnerInfo_OPCODE:
                deserialize_getOwnerInfo(bodyReader, deserializationContext, state);
                break;
            case getAccHistoryFullExtract_OPCODE:
                deserialize_getAccHistoryFullExtract(bodyReader, deserializationContext, state);
                break;
            case __forGenerateAccountTransaction_OPCODE:
                deserialize___forGenerateAccountTransaction(bodyReader, deserializationContext, state);
                break;
            case getCardPrimaryAccount_OPCODE:
                deserialize_getCardPrimaryAccount(bodyReader, deserializationContext, state);
                break;
            case getAccountAbstract_OPCODE:
                deserialize_getAccountAbstract(bodyReader, deserializationContext, state);
                break;
            case __forGenerateTrustee_OPCODE:
                deserialize___forGenerateTrustee(bodyReader, deserializationContext, state);
                break;
            case getOwnerInfo2_OPCODE:
                deserialize_getOwnerInfo2(bodyReader, deserializationContext, state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(opcode));
        }
    }
    
    
    
    /*
     * This method deserializes the body of the getAccount operation.
     */
    private void deserialize_getAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccount_RequestStructObj =
            ns1_myBankrollService_getAccount_RequestStruct_SOAPSerializer.deserialize(ns1_getAccount_getAccount_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccount_getAccount_QNAME);
        bodyBlock.setValue(myBankrollService_getAccount_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateCardOperation operation.
     */
    private void deserialize___forGenerateCardOperation(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateCardOperation_RequestStructObj =
            ns1_myBankrollService___forGenerateCardOperation_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateCardOperation___forGenerateCardOperation_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateCardOperation___forGenerateCardOperation_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateCardOperation_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountByNumber operation.
     */
    private void deserialize_getAccountByNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccountByNumber_RequestStructObj =
            ns1_myBankrollService_getAccountByNumber_RequestStruct_SOAPSerializer.deserialize(ns1_getAccountByNumber_getAccountByNumber_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountByNumber_getAccountByNumber_QNAME);
        bodyBlock.setValue(myBankrollService_getAccountByNumber_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateOverdraftInfo operation.
     */
    private void deserialize___forGenerateOverdraftInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateOverdraftInfo_RequestStructObj =
            ns1_myBankrollService___forGenerateOverdraftInfo_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfo_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateOverdraftInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardAbstract operation.
     */
    private void deserialize_getCardAbstract(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getCardAbstract_RequestStructObj =
            ns1_myBankrollService_getCardAbstract_RequestStruct_SOAPSerializer.deserialize(ns1_getCardAbstract_getCardAbstract_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAbstract_getCardAbstract_QNAME);
        bodyBlock.setValue(myBankrollService_getCardAbstract_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountExtendedAbstract operation.
     */
    private void deserialize_getAccountExtendedAbstract(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccountExtendedAbstract_RequestStructObj =
            ns1_myBankrollService_getAccountExtendedAbstract_RequestStruct_SOAPSerializer.deserialize(ns1_getAccountExtendedAbstract_getAccountExtendedAbstract_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountExtendedAbstract_getAccountExtendedAbstract_QNAME);
        bodyBlock.setValue(myBankrollService_getAccountExtendedAbstract_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardAbstract2 operation.
     */
    private void deserialize_getCardAbstract2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getCardAbstract2_RequestStructObj =
            ns1_myBankrollService_getCardAbstract2_RequestStruct_SOAPSerializer.deserialize(ns1_getCardAbstract2_getCardAbstract2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardAbstract2_getCardAbstract2_QNAME);
        bodyBlock.setValue(myBankrollService_getCardAbstract2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getOwnerInfoByCardNumber operation.
     */
    private void deserialize_getOwnerInfoByCardNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getOwnerInfoByCardNumber_RequestStructObj =
            ns1_myBankrollService_getOwnerInfoByCardNumber_RequestStruct_SOAPSerializer.deserialize(ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumber_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumber_QNAME);
        bodyBlock.setValue(myBankrollService_getOwnerInfoByCardNumber_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAdditionalCards operation.
     */
    private void deserialize_getAdditionalCards(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAdditionalCards_RequestStructObj =
            ns1_myBankrollService_getAdditionalCards_RequestStruct_SOAPSerializer.deserialize(ns1_getAdditionalCards_getAdditionalCards_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAdditionalCards_getAdditionalCards_QNAME);
        bodyBlock.setValue(myBankrollService_getAdditionalCards_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateIKFLException operation.
     */
    private void deserialize___forGenerateIKFLException(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateIKFLException_RequestStructObj =
            ns1_myBankrollService___forGenerateIKFLException_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateIKFLException___forGenerateIKFLException_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateIKFLException___forGenerateIKFLException_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateIKFLException_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCard operation.
     */
    private void deserialize_getCard(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getCard_RequestStructObj =
            ns1_myBankrollService_getCard_RequestStruct_SOAPSerializer.deserialize(ns1_getCard_getCard_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCard_getCard_QNAME);
        bodyBlock.setValue(myBankrollService_getCard_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateAccountInfo operation.
     */
    private void deserialize___forGenerateAccountInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateAccountInfo_RequestStructObj =
            ns1_myBankrollService___forGenerateAccountInfo_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateAccountInfo___forGenerateAccountInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateAccountInfo___forGenerateAccountInfo_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateAccountInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateClientDocument operation.
     */
    private void deserialize___forGenerateClientDocument(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateClientDocument_RequestStructObj =
            ns1_myBankrollService___forGenerateClientDocument_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateClientDocument___forGenerateClientDocument_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateClientDocument___forGenerateClientDocument_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateClientDocument_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardByNumber operation.
     */
    private void deserialize_getCardByNumber(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getCardByNumber_RequestStructObj =
            ns1_myBankrollService_getCardByNumber_RequestStruct_SOAPSerializer.deserialize(ns1_getCardByNumber_getCardByNumber_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardByNumber_getCardByNumber_QNAME);
        bodyBlock.setValue(myBankrollService_getCardByNumber_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountAbstract2 operation.
     */
    private void deserialize_getAccountAbstract2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccountAbstract2_RequestStructObj =
            ns1_myBankrollService_getAccountAbstract2_RequestStruct_SOAPSerializer.deserialize(ns1_getAccountAbstract2_getAccountAbstract2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountAbstract2_getAccountAbstract2_QNAME);
        bodyBlock.setValue(myBankrollService_getAccountAbstract2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateCardInfo operation.
     */
    private void deserialize___forGenerateCardInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateCardInfo_RequestStructObj =
            ns1_myBankrollService___forGenerateCardInfo_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateCardInfo___forGenerateCardInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateCardInfo___forGenerateCardInfo_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateCardInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getClientAccounts operation.
     */
    private void deserialize_getClientAccounts(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getClientAccounts_RequestStructObj =
            ns1_myBankrollService_getClientAccounts_RequestStruct_SOAPSerializer.deserialize(ns1_getClientAccounts_getClientAccounts_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientAccounts_getClientAccounts_QNAME);
        bodyBlock.setValue(myBankrollService_getClientAccounts_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getClientCards operation.
     */
    private void deserialize_getClientCards(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getClientCards_RequestStructObj =
            ns1_myBankrollService_getClientCards_RequestStruct_SOAPSerializer.deserialize(ns1_getClientCards_getClientCards_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getClientCards_getClientCards_QNAME);
        bodyBlock.setValue(myBankrollService_getClientCards_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getOwnerInfo operation.
     */
    private void deserialize_getOwnerInfo(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getOwnerInfo_RequestStructObj =
            ns1_myBankrollService_getOwnerInfo_RequestStruct_SOAPSerializer.deserialize(ns1_getOwnerInfo_getOwnerInfo_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfo_getOwnerInfo_QNAME);
        bodyBlock.setValue(myBankrollService_getOwnerInfo_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccHistoryFullExtract operation.
     */
    private void deserialize_getAccHistoryFullExtract(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccHistoryFullExtract_RequestStructObj =
            ns1_myBankrollService_getAccHistoryFullExtract_RequestStruct_SOAPSerializer.deserialize(ns1_getAccHistoryFullExtract_getAccHistoryFullExtract_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccHistoryFullExtract_getAccHistoryFullExtract_QNAME);
        bodyBlock.setValue(myBankrollService_getAccHistoryFullExtract_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateAccountTransaction operation.
     */
    private void deserialize___forGenerateAccountTransaction(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateAccountTransaction_RequestStructObj =
            ns1_myBankrollService___forGenerateAccountTransaction_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateAccountTransaction___forGenerateAccountTransaction_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateAccountTransaction___forGenerateAccountTransaction_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateAccountTransaction_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getCardPrimaryAccount operation.
     */
    private void deserialize_getCardPrimaryAccount(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getCardPrimaryAccount_RequestStructObj =
            ns1_myBankrollService_getCardPrimaryAccount_RequestStruct_SOAPSerializer.deserialize(ns1_getCardPrimaryAccount_getCardPrimaryAccount_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getCardPrimaryAccount_getCardPrimaryAccount_QNAME);
        bodyBlock.setValue(myBankrollService_getCardPrimaryAccount_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getAccountAbstract operation.
     */
    private void deserialize_getAccountAbstract(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getAccountAbstract_RequestStructObj =
            ns1_myBankrollService_getAccountAbstract_RequestStruct_SOAPSerializer.deserialize(ns1_getAccountAbstract_getAccountAbstract_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getAccountAbstract_getAccountAbstract_QNAME);
        bodyBlock.setValue(myBankrollService_getAccountAbstract_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the __forGenerateTrustee operation.
     */
    private void deserialize___forGenerateTrustee(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService___forGenerateTrustee_RequestStructObj =
            ns1_myBankrollService___forGenerateTrustee_RequestStruct_SOAPSerializer.deserialize(ns1___forGenerateTrustee___forGenerateTrustee_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1___forGenerateTrustee___forGenerateTrustee_QNAME);
        bodyBlock.setValue(myBankrollService___forGenerateTrustee_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    /*
     * This method deserializes the body of the getOwnerInfo2 operation.
     */
    private void deserialize_getOwnerInfo2(XMLReader bodyReader, SOAPDeserializationContext deserializationContext, StreamingHandlerState state) throws Exception {
        java.lang.Object myBankrollService_getOwnerInfo2_RequestStructObj =
            ns1_myBankrollService_getOwnerInfo2_RequestStruct_SOAPSerializer.deserialize(ns1_getOwnerInfo2_getOwnerInfo2_QNAME,
                bodyReader, deserializationContext);
        
        SOAPBlockInfo bodyBlock = new SOAPBlockInfo(ns1_getOwnerInfo2_getOwnerInfo2_QNAME);
        bodyBlock.setValue(myBankrollService_getOwnerInfo2_RequestStructObj);
        state.getRequest().setBody(bodyBlock);
    }
    
    
    /*
     * This method must invoke the correct method on the servant based on the opcode.
     */
    protected void processingHook(StreamingHandlerState state) throws Exception {
        switch (state.getRequest().getOperationCode()) {
            case getAccount_OPCODE:
                invoke_getAccount(state);
                break;
            case __forGenerateCardOperation_OPCODE:
                invoke___forGenerateCardOperation(state);
                break;
            case getAccountByNumber_OPCODE:
                invoke_getAccountByNumber(state);
                break;
            case __forGenerateOverdraftInfo_OPCODE:
                invoke___forGenerateOverdraftInfo(state);
                break;
            case getCardAbstract_OPCODE:
                invoke_getCardAbstract(state);
                break;
            case getAccountExtendedAbstract_OPCODE:
                invoke_getAccountExtendedAbstract(state);
                break;
            case getCardAbstract2_OPCODE:
                invoke_getCardAbstract2(state);
                break;
            case getOwnerInfoByCardNumber_OPCODE:
                invoke_getOwnerInfoByCardNumber(state);
                break;
            case getAdditionalCards_OPCODE:
                invoke_getAdditionalCards(state);
                break;
            case __forGenerateIKFLException_OPCODE:
                invoke___forGenerateIKFLException(state);
                break;
            case getCard_OPCODE:
                invoke_getCard(state);
                break;
            case __forGenerateAccountInfo_OPCODE:
                invoke___forGenerateAccountInfo(state);
                break;
            case __forGenerateClientDocument_OPCODE:
                invoke___forGenerateClientDocument(state);
                break;
            case getCardByNumber_OPCODE:
                invoke_getCardByNumber(state);
                break;
            case getAccountAbstract2_OPCODE:
                invoke_getAccountAbstract2(state);
                break;
            case __forGenerateCardInfo_OPCODE:
                invoke___forGenerateCardInfo(state);
                break;
            case getClientAccounts_OPCODE:
                invoke_getClientAccounts(state);
                break;
            case getClientCards_OPCODE:
                invoke_getClientCards(state);
                break;
            case getOwnerInfo_OPCODE:
                invoke_getOwnerInfo(state);
                break;
            case getAccHistoryFullExtract_OPCODE:
                invoke_getAccHistoryFullExtract(state);
                break;
            case __forGenerateAccountTransaction_OPCODE:
                invoke___forGenerateAccountTransaction(state);
                break;
            case getCardPrimaryAccount_OPCODE:
                invoke_getCardPrimaryAccount(state);
                break;
            case getAccountAbstract_OPCODE:
                invoke_getAccountAbstract(state);
                break;
            case __forGenerateTrustee_OPCODE:
                invoke___forGenerateTrustee(state);
                break;
            case getOwnerInfo2_OPCODE:
                invoke_getOwnerInfo2(state);
                break;
            default:
                throw new SOAPProtocolViolationException("soap.operation.unrecognized", java.lang.Integer.toString(state.getRequest().getOperationCode()));
        }
    }
    
    public java.lang.String getDefaultEnvelopeEncodingStyle() {
        return SOAPNamespaceConstants.ENCODING;
    }
    
    public java.lang.String getImplicitEnvelopeEncodingStyle() {
        return "";
    }
    
    
    /*
     * This method must determine the opcode of the operation given the QName of the first body element.
     */
    public int getOpcodeForFirstBodyElementName(QName name) {
        if (name == null) {
            return InternalSOAPMessage.NO_OPERATION;
        }
        if (name.equals(ns1_getAccount_getAccount_QNAME)) {
            return getAccount_OPCODE;
        }
        if (name.equals(ns1___forGenerateCardOperation___forGenerateCardOperation_QNAME)) {
            return __forGenerateCardOperation_OPCODE;
        }
        if (name.equals(ns1_getAccountByNumber_getAccountByNumber_QNAME)) {
            return getAccountByNumber_OPCODE;
        }
        if (name.equals(ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfo_QNAME)) {
            return __forGenerateOverdraftInfo_OPCODE;
        }
        if (name.equals(ns1_getCardAbstract_getCardAbstract_QNAME)) {
            return getCardAbstract_OPCODE;
        }
        if (name.equals(ns1_getAccountExtendedAbstract_getAccountExtendedAbstract_QNAME)) {
            return getAccountExtendedAbstract_OPCODE;
        }
        if (name.equals(ns1_getCardAbstract2_getCardAbstract2_QNAME)) {
            return getCardAbstract2_OPCODE;
        }
        if (name.equals(ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumber_QNAME)) {
            return getOwnerInfoByCardNumber_OPCODE;
        }
        if (name.equals(ns1_getAdditionalCards_getAdditionalCards_QNAME)) {
            return getAdditionalCards_OPCODE;
        }
        if (name.equals(ns1___forGenerateIKFLException___forGenerateIKFLException_QNAME)) {
            return __forGenerateIKFLException_OPCODE;
        }
        if (name.equals(ns1_getCard_getCard_QNAME)) {
            return getCard_OPCODE;
        }
        if (name.equals(ns1___forGenerateAccountInfo___forGenerateAccountInfo_QNAME)) {
            return __forGenerateAccountInfo_OPCODE;
        }
        if (name.equals(ns1___forGenerateClientDocument___forGenerateClientDocument_QNAME)) {
            return __forGenerateClientDocument_OPCODE;
        }
        if (name.equals(ns1_getCardByNumber_getCardByNumber_QNAME)) {
            return getCardByNumber_OPCODE;
        }
        if (name.equals(ns1_getAccountAbstract2_getAccountAbstract2_QNAME)) {
            return getAccountAbstract2_OPCODE;
        }
        if (name.equals(ns1___forGenerateCardInfo___forGenerateCardInfo_QNAME)) {
            return __forGenerateCardInfo_OPCODE;
        }
        if (name.equals(ns1_getClientAccounts_getClientAccounts_QNAME)) {
            return getClientAccounts_OPCODE;
        }
        if (name.equals(ns1_getClientCards_getClientCards_QNAME)) {
            return getClientCards_OPCODE;
        }
        if (name.equals(ns1_getOwnerInfo_getOwnerInfo_QNAME)) {
            return getOwnerInfo_OPCODE;
        }
        if (name.equals(ns1_getAccHistoryFullExtract_getAccHistoryFullExtract_QNAME)) {
            return getAccHistoryFullExtract_OPCODE;
        }
        if (name.equals(ns1___forGenerateAccountTransaction___forGenerateAccountTransaction_QNAME)) {
            return __forGenerateAccountTransaction_OPCODE;
        }
        if (name.equals(ns1_getCardPrimaryAccount_getCardPrimaryAccount_QNAME)) {
            return getCardPrimaryAccount_OPCODE;
        }
        if (name.equals(ns1_getAccountAbstract_getAccountAbstract_QNAME)) {
            return getAccountAbstract_OPCODE;
        }
        if (name.equals(ns1___forGenerateTrustee___forGenerateTrustee_QNAME)) {
            return __forGenerateTrustee_OPCODE;
        }
        if (name.equals(ns1_getOwnerInfo2_getOwnerInfo2_QNAME)) {
            return getOwnerInfo2_OPCODE;
        }
        return super.getOpcodeForFirstBodyElementName(name);
    }
    
    
    private Method internalGetMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
        
        Method theMethod = null;
        
        switch(opcode) {
            case getAccount_OPCODE:
                {
                    Class[] carray = { Class.forName("[Ljava.lang.String;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccount", carray);
                }
                break;
            
            case __forGenerateCardOperation_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateCardOperation", carray);
                }
                break;
            
            case getAccountByNumber_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Pair;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccountByNumber", carray);
                }
                break;
            
            case __forGenerateOverdraftInfo_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateOverdraftInfo", carray);
                }
                break;
            
            case getCardAbstract_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Card;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getCardAbstract", carray);
                }
                break;
            
            case getAccountExtendedAbstract_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Account.class,java.util.Calendar.class,java.util.Calendar.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccountExtendedAbstract", carray);
                }
                break;
            
            case getCardAbstract2_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Card.class,java.util.Calendar.class,java.util.Calendar.class,java.lang.Boolean.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getCardAbstract2", carray);
                }
                break;
            
            case getOwnerInfoByCardNumber_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Pair;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getOwnerInfoByCardNumber", carray);
                }
                break;
            
            case getAdditionalCards_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Card;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAdditionalCards", carray);
                }
                break;
            
            case __forGenerateIKFLException_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateIKFLException", carray);
                }
                break;
            
            case getCard_OPCODE:
                {
                    Class[] carray = { Class.forName("[Ljava.lang.String;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getCard", carray);
                }
                break;
            
            case __forGenerateAccountInfo_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateAccountInfo", carray);
                }
                break;
            
            case __forGenerateClientDocument_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateClientDocument", carray);
                }
                break;
            
            case getCardByNumber_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Client.class,Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Pair;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getCardByNumber", carray);
                }
                break;
            
            case getAccountAbstract2_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Account.class,java.util.Calendar.class,java.util.Calendar.class,java.lang.Boolean.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccountAbstract2", carray);
                }
                break;
            
            case __forGenerateCardInfo_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateCardInfo", carray);
                }
                break;
            
            case getClientAccounts_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Client.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getClientAccounts", carray);
                }
                break;
            
            case getClientCards_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Client.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getClientCards", carray);
                }
                break;
            
            case getOwnerInfo_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Account;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getOwnerInfo", carray);
                }
                break;
            
            case getAccHistoryFullExtract_OPCODE:
                {
                    Class[] carray = { com.rssl.phizic.web.gate.services.bankroll.generated.Account.class,java.util.Calendar.class,java.util.Calendar.class,java.lang.Boolean.class };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccHistoryFullExtract", carray);
                }
                break;
            
            case __forGenerateAccountTransaction_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateAccountTransaction", carray);
                }
                break;
            
            case getCardPrimaryAccount_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Card;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getCardPrimaryAccount", carray);
                }
                break;
            
            case getAccountAbstract_OPCODE:
                {
                    Class[] carray = { java.lang.Long.class,Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Account;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getAccountAbstract", carray);
                }
                break;
            
            case __forGenerateTrustee_OPCODE:
                {
                    Class[] carray = {  };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("__forGenerateTrustee", carray);
                }
                break;
            
            case getOwnerInfo2_OPCODE:
                {
                    Class[] carray = { Class.forName("[Lcom.rssl.phizic.web.gate.services.bankroll.generated.Card;") };
                    theMethod = (com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService.class).getMethod("getOwnerInfo2", carray);
                }
                break;
            
            default:
        }
        return theMethod;
    }
    
    private Method[] methodMap = new Method[25];
    
    /*
     * This method returns the Method Obj for a specified opcode.
     */
    public Method getMethodForOpcode(int opcode) throws ClassNotFoundException, NoSuchMethodException {
         
        if (opcode <= InternalSOAPMessage.NO_OPERATION ) {
            return null;
        }
         
        if (opcode >= 25 ) {
            return null;
        }
         
        if (methodMap[opcode] == null)  {
            methodMap[opcode] = internalGetMethodForOpcode(opcode);
        }
         
        return methodMap[opcode];
    }
    
    /*
     * This method returns an array containing (prefix, nsURI) pairs.
     */
    protected java.lang.String[] getNamespaceDeclarations() {
        return myNamespace_declarations;
    }
    
    /*
     * This method returns an array containing the names of the headers we understand.
     */
    public javax.xml.namespace.QName[] getUnderstoodHeaders() {
        return understoodHeaderNames;
    }
    
    private void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns1_myBankrollService_getOwnerInfo2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_RequestStruct.class, ns1_getOwnerInfo2_TYPE_QNAME);
        ns1_myBankrollService_getAccountAbstract_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_RequestStruct.class, ns1_getAccountAbstract_TYPE_QNAME);
        ns1_myBankrollService_getCardAbstract2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_ResponseStruct.class, ns1_getCardAbstract2Response_TYPE_QNAME);
        ns1_myBankrollService___forGenerateIKFLException_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_RequestStruct.class, ns1___forGenerateIKFLException_TYPE_QNAME);
        ns1_myBankrollService_getOwnerInfo2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo2_ResponseStruct.class, ns1_getOwnerInfo2Response_TYPE_QNAME);
        ns1_myBankrollService_getCardAbstract_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_RequestStruct.class, ns1_getCardAbstract_TYPE_QNAME);
        ns1_myBankrollService___forGenerateCardOperation_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_RequestStruct.class, ns1___forGenerateCardOperation_TYPE_QNAME);
        ns1_myBankrollService_getAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_ResponseStruct.class, ns1_getAccountResponse_TYPE_QNAME);
        ns1_myBankrollService_getCard_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_RequestStruct.class, ns1_getCard_TYPE_QNAME);
        ns1_myBankrollService_getAccountAbstract2_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_ResponseStruct.class, ns1_getAccountAbstract2Response_TYPE_QNAME);
        ns1_myBankrollService_getOwnerInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_RequestStruct.class, ns1_getOwnerInfo_TYPE_QNAME);
        ns1_myBankrollService_getClientAccounts_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_ResponseStruct.class, ns1_getClientAccountsResponse_TYPE_QNAME);
        ns1_myBankrollService_getClientCards_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_RequestStruct.class, ns1_getClientCards_TYPE_QNAME);
        ns1_myBankrollService_getAdditionalCards_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_ResponseStruct.class, ns1_getAdditionalCardsResponse_TYPE_QNAME);
        ns1_myBankrollService_getAccountByNumber_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_ResponseStruct.class, ns1_getAccountByNumberResponse_TYPE_QNAME);
        ns1_myBankrollService_getCardAbstract_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract_ResponseStruct.class, ns1_getCardAbstractResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateAccountInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_ResponseStruct.class, ns1___forGenerateAccountInfoResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateCardInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_ResponseStruct.class, ns1___forGenerateCardInfoResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateCardInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardInfo_RequestStruct.class, ns1___forGenerateCardInfo_TYPE_QNAME);
        ns1_myBankrollService_getOwnerInfoByCardNumber_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_ResponseStruct.class, ns1_getOwnerInfoByCardNumberResponse_TYPE_QNAME);
        ns1_myBankrollService_getAccountExtendedAbstract_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_ResponseStruct.class, ns1_getAccountExtendedAbstractResponse_TYPE_QNAME);
        ns1_myBankrollService_getOwnerInfoByCardNumber_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfoByCardNumber_RequestStruct.class, ns1_getOwnerInfoByCardNumber_TYPE_QNAME);
        ns1_myBankrollService___forGenerateAccountInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountInfo_RequestStruct.class, ns1___forGenerateAccountInfo_TYPE_QNAME);
        ns1_myBankrollService___forGenerateClientDocument_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_RequestStruct.class, ns1___forGenerateClientDocument_TYPE_QNAME);
        ns1_myBankrollService___forGenerateTrustee_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_ResponseStruct.class, ns1___forGenerateTrusteeResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateIKFLException_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateIKFLException_ResponseStruct.class, ns1___forGenerateIKFLExceptionResponse_TYPE_QNAME);
        ns1_myBankrollService_getCardPrimaryAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_RequestStruct.class, ns1_getCardPrimaryAccount_TYPE_QNAME);
        ns1_myBankrollService_getAccount_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccount_RequestStruct.class, ns1_getAccount_TYPE_QNAME);
        ns1_myBankrollService_getAccountByNumber_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountByNumber_RequestStruct.class, ns1_getAccountByNumber_TYPE_QNAME);
        ns1_myBankrollService___forGenerateAccountTransaction_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_ResponseStruct.class, ns1___forGenerateAccountTransactionResponse_TYPE_QNAME);
        ns1_myBankrollService_getCardPrimaryAccount_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardPrimaryAccount_ResponseStruct.class, ns1_getCardPrimaryAccountResponse_TYPE_QNAME);
        ns1_myBankrollService_getCard_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCard_ResponseStruct.class, ns1_getCardResponse_TYPE_QNAME);
        ns1_myBankrollService_getAdditionalCards_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAdditionalCards_RequestStruct.class, ns1_getAdditionalCards_TYPE_QNAME);
        ns1_myBankrollService_getOwnerInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getOwnerInfo_ResponseStruct.class, ns1_getOwnerInfoResponse_TYPE_QNAME);
        ns1_myBankrollService_getCardAbstract2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardAbstract2_RequestStruct.class, ns1_getCardAbstract2_TYPE_QNAME);
        ns1_myBankrollService_getAccountAbstract2_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract2_RequestStruct.class, ns1_getAccountAbstract2_TYPE_QNAME);
        ns1_myBankrollService_getAccHistoryFullExtract_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_ResponseStruct.class, ns1_getAccHistoryFullExtractResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateClientDocument_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateClientDocument_ResponseStruct.class, ns1___forGenerateClientDocumentResponse_TYPE_QNAME);
        ns1_myBankrollService_getClientAccounts_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientAccounts_RequestStruct.class, ns1_getClientAccounts_TYPE_QNAME);
        ns1_myBankrollService___forGenerateAccountTransaction_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateAccountTransaction_RequestStruct.class, ns1___forGenerateAccountTransaction_TYPE_QNAME);
        ns1_myBankrollService___forGenerateOverdraftInfo_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_RequestStruct.class, ns1___forGenerateOverdraftInfo_TYPE_QNAME);
        ns1_myBankrollService_getAccountAbstract_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountAbstract_ResponseStruct.class, ns1_getAccountAbstractResponse_TYPE_QNAME);
        ns1_myBankrollService_getAccountExtendedAbstract_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccountExtendedAbstract_RequestStruct.class, ns1_getAccountExtendedAbstract_TYPE_QNAME);
        ns1_myBankrollService___forGenerateTrustee_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateTrustee_RequestStruct.class, ns1___forGenerateTrustee_TYPE_QNAME);
        ns1_myBankrollService_getClientCards_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getClientCards_ResponseStruct.class, ns1_getClientCardsResponse_TYPE_QNAME);
        ns1_myBankrollService___forGenerateCardOperation_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateCardOperation_ResponseStruct.class, ns1___forGenerateCardOperationResponse_TYPE_QNAME);
        ns1_myBankrollService_getAccHistoryFullExtract_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getAccHistoryFullExtract_RequestStruct.class, ns1_getAccHistoryFullExtract_TYPE_QNAME);
        ns1_myBankrollService___forGenerateOverdraftInfo_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService___forGenerateOverdraftInfo_ResponseStruct.class, ns1___forGenerateOverdraftInfoResponse_TYPE_QNAME);
        ns1_myBankrollService_getCardByNumber_RequestStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_RequestStruct.class, ns1_getCardByNumber_TYPE_QNAME);
        ns1_myBankrollService_getCardByNumber_ResponseStruct_SOAPSerializer = (CombinedSerializer)registry.getSerializer(SOAPConstants.NS_SOAP_ENCODING, com.rssl.phizic.web.gate.services.bankroll.generated.BankrollService_getCardByNumber_ResponseStruct.class, ns1_getCardByNumberResponse_TYPE_QNAME);
    }
    
    private static final javax.xml.namespace.QName portName = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "BankrollServicePort");
    private static final int getAccount_OPCODE = 0;
    private static final int __forGenerateCardOperation_OPCODE = 1;
    private static final int getAccountByNumber_OPCODE = 2;
    private static final int __forGenerateOverdraftInfo_OPCODE = 3;
    private static final int getCardAbstract_OPCODE = 4;
    private static final int getAccountExtendedAbstract_OPCODE = 5;
    private static final int getCardAbstract2_OPCODE = 6;
    private static final int getOwnerInfoByCardNumber_OPCODE = 7;
    private static final int getAdditionalCards_OPCODE = 8;
    private static final int __forGenerateIKFLException_OPCODE = 9;
    private static final int getCard_OPCODE = 10;
    private static final int __forGenerateAccountInfo_OPCODE = 11;
    private static final int __forGenerateClientDocument_OPCODE = 12;
    private static final int getCardByNumber_OPCODE = 13;
    private static final int getAccountAbstract2_OPCODE = 14;
    private static final int __forGenerateCardInfo_OPCODE = 15;
    private static final int getClientAccounts_OPCODE = 16;
    private static final int getClientCards_OPCODE = 17;
    private static final int getOwnerInfo_OPCODE = 18;
    private static final int getAccHistoryFullExtract_OPCODE = 19;
    private static final int __forGenerateAccountTransaction_OPCODE = 20;
    private static final int getCardPrimaryAccount_OPCODE = 21;
    private static final int getAccountAbstract_OPCODE = 22;
    private static final int __forGenerateTrustee_OPCODE = 23;
    private static final int getOwnerInfo2_OPCODE = 24;
    private static final javax.xml.namespace.QName ns1_getAccount_getAccount_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccount");
    private static final javax.xml.namespace.QName ns1_getAccount_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccount");
    private CombinedSerializer ns1_myBankrollService_getAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccount_getAccountResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountResponse");
    private static final javax.xml.namespace.QName ns1_getAccountResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountResponse");
    private CombinedSerializer ns1_myBankrollService_getAccount_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateCardOperation___forGenerateCardOperation_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardOperation");
    private static final javax.xml.namespace.QName ns1___forGenerateCardOperation_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardOperation");
    private CombinedSerializer ns1_myBankrollService___forGenerateCardOperation_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateCardOperation___forGenerateCardOperationResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardOperationResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateCardOperationResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardOperationResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateCardOperation_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountByNumber_getAccountByNumber_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountByNumber");
    private static final javax.xml.namespace.QName ns1_getAccountByNumber_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountByNumber");
    private CombinedSerializer ns1_myBankrollService_getAccountByNumber_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountByNumber_getAccountByNumberResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountByNumberResponse");
    private static final javax.xml.namespace.QName ns1_getAccountByNumberResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountByNumberResponse");
    private CombinedSerializer ns1_myBankrollService_getAccountByNumber_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfo_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateOverdraftInfo");
    private static final javax.xml.namespace.QName ns1___forGenerateOverdraftInfo_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateOverdraftInfo");
    private CombinedSerializer ns1_myBankrollService___forGenerateOverdraftInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateOverdraftInfo___forGenerateOverdraftInfoResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateOverdraftInfoResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateOverdraftInfoResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateOverdraftInfoResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateOverdraftInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAbstract_getCardAbstract_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract");
    private static final javax.xml.namespace.QName ns1_getCardAbstract_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract");
    private CombinedSerializer ns1_myBankrollService_getCardAbstract_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAbstract_getCardAbstractResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstractResponse");
    private static final javax.xml.namespace.QName ns1_getCardAbstractResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstractResponse");
    private CombinedSerializer ns1_myBankrollService_getCardAbstract_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountExtendedAbstract_getAccountExtendedAbstract_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountExtendedAbstract");
    private static final javax.xml.namespace.QName ns1_getAccountExtendedAbstract_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountExtendedAbstract");
    private CombinedSerializer ns1_myBankrollService_getAccountExtendedAbstract_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountExtendedAbstract_getAccountExtendedAbstractResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountExtendedAbstractResponse");
    private static final javax.xml.namespace.QName ns1_getAccountExtendedAbstractResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountExtendedAbstractResponse");
    private CombinedSerializer ns1_myBankrollService_getAccountExtendedAbstract_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAbstract2_getCardAbstract2_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract2");
    private static final javax.xml.namespace.QName ns1_getCardAbstract2_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract2");
    private CombinedSerializer ns1_myBankrollService_getCardAbstract2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardAbstract2_getCardAbstract2Response_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract2Response");
    private static final javax.xml.namespace.QName ns1_getCardAbstract2Response_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardAbstract2Response");
    private CombinedSerializer ns1_myBankrollService_getCardAbstract2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumber_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoByCardNumber");
    private static final javax.xml.namespace.QName ns1_getOwnerInfoByCardNumber_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoByCardNumber");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfoByCardNumber_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfoByCardNumber_getOwnerInfoByCardNumberResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoByCardNumberResponse");
    private static final javax.xml.namespace.QName ns1_getOwnerInfoByCardNumberResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoByCardNumberResponse");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfoByCardNumber_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAdditionalCards_getAdditionalCards_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAdditionalCards");
    private static final javax.xml.namespace.QName ns1_getAdditionalCards_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAdditionalCards");
    private CombinedSerializer ns1_myBankrollService_getAdditionalCards_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAdditionalCards_getAdditionalCardsResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAdditionalCardsResponse");
    private static final javax.xml.namespace.QName ns1_getAdditionalCardsResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAdditionalCardsResponse");
    private CombinedSerializer ns1_myBankrollService_getAdditionalCards_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateIKFLException___forGenerateIKFLException_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateIKFLException");
    private static final javax.xml.namespace.QName ns1___forGenerateIKFLException_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateIKFLException");
    private CombinedSerializer ns1_myBankrollService___forGenerateIKFLException_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateIKFLException___forGenerateIKFLExceptionResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateIKFLExceptionResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateIKFLExceptionResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateIKFLExceptionResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateIKFLException_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCard_getCard_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCard");
    private static final javax.xml.namespace.QName ns1_getCard_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCard");
    private CombinedSerializer ns1_myBankrollService_getCard_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCard_getCardResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardResponse");
    private static final javax.xml.namespace.QName ns1_getCardResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardResponse");
    private CombinedSerializer ns1_myBankrollService_getCard_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateAccountInfo___forGenerateAccountInfo_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountInfo");
    private static final javax.xml.namespace.QName ns1___forGenerateAccountInfo_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountInfo");
    private CombinedSerializer ns1_myBankrollService___forGenerateAccountInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateAccountInfo___forGenerateAccountInfoResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountInfoResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateAccountInfoResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountInfoResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateAccountInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateClientDocument___forGenerateClientDocument_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateClientDocument");
    private static final javax.xml.namespace.QName ns1___forGenerateClientDocument_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateClientDocument");
    private CombinedSerializer ns1_myBankrollService___forGenerateClientDocument_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateClientDocument___forGenerateClientDocumentResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateClientDocumentResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateClientDocumentResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateClientDocumentResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateClientDocument_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardByNumber_getCardByNumber_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardByNumber");
    private static final javax.xml.namespace.QName ns1_getCardByNumber_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardByNumber");
    private CombinedSerializer ns1_myBankrollService_getCardByNumber_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardByNumber_getCardByNumberResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardByNumberResponse");
    private static final javax.xml.namespace.QName ns1_getCardByNumberResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardByNumberResponse");
    private CombinedSerializer ns1_myBankrollService_getCardByNumber_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountAbstract2_getAccountAbstract2_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract2");
    private static final javax.xml.namespace.QName ns1_getAccountAbstract2_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract2");
    private CombinedSerializer ns1_myBankrollService_getAccountAbstract2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountAbstract2_getAccountAbstract2Response_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract2Response");
    private static final javax.xml.namespace.QName ns1_getAccountAbstract2Response_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract2Response");
    private CombinedSerializer ns1_myBankrollService_getAccountAbstract2_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateCardInfo___forGenerateCardInfo_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardInfo");
    private static final javax.xml.namespace.QName ns1___forGenerateCardInfo_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardInfo");
    private CombinedSerializer ns1_myBankrollService___forGenerateCardInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateCardInfo___forGenerateCardInfoResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardInfoResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateCardInfoResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateCardInfoResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateCardInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientAccounts_getClientAccounts_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientAccounts");
    private static final javax.xml.namespace.QName ns1_getClientAccounts_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientAccounts");
    private CombinedSerializer ns1_myBankrollService_getClientAccounts_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientAccounts_getClientAccountsResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientAccountsResponse");
    private static final javax.xml.namespace.QName ns1_getClientAccountsResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientAccountsResponse");
    private CombinedSerializer ns1_myBankrollService_getClientAccounts_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientCards_getClientCards_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientCards");
    private static final javax.xml.namespace.QName ns1_getClientCards_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientCards");
    private CombinedSerializer ns1_myBankrollService_getClientCards_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getClientCards_getClientCardsResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientCardsResponse");
    private static final javax.xml.namespace.QName ns1_getClientCardsResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getClientCardsResponse");
    private CombinedSerializer ns1_myBankrollService_getClientCards_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfo_getOwnerInfo_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo");
    private static final javax.xml.namespace.QName ns1_getOwnerInfo_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfo_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfo_getOwnerInfoResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoResponse");
    private static final javax.xml.namespace.QName ns1_getOwnerInfoResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfoResponse");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfo_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccHistoryFullExtract_getAccHistoryFullExtract_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccHistoryFullExtract");
    private static final javax.xml.namespace.QName ns1_getAccHistoryFullExtract_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccHistoryFullExtract");
    private CombinedSerializer ns1_myBankrollService_getAccHistoryFullExtract_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccHistoryFullExtract_getAccHistoryFullExtractResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccHistoryFullExtractResponse");
    private static final javax.xml.namespace.QName ns1_getAccHistoryFullExtractResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccHistoryFullExtractResponse");
    private CombinedSerializer ns1_myBankrollService_getAccHistoryFullExtract_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateAccountTransaction___forGenerateAccountTransaction_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountTransaction");
    private static final javax.xml.namespace.QName ns1___forGenerateAccountTransaction_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountTransaction");
    private CombinedSerializer ns1_myBankrollService___forGenerateAccountTransaction_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateAccountTransaction___forGenerateAccountTransactionResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountTransactionResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateAccountTransactionResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateAccountTransactionResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateAccountTransaction_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardPrimaryAccount_getCardPrimaryAccount_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardPrimaryAccount");
    private static final javax.xml.namespace.QName ns1_getCardPrimaryAccount_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardPrimaryAccount");
    private CombinedSerializer ns1_myBankrollService_getCardPrimaryAccount_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getCardPrimaryAccount_getCardPrimaryAccountResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardPrimaryAccountResponse");
    private static final javax.xml.namespace.QName ns1_getCardPrimaryAccountResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getCardPrimaryAccountResponse");
    private CombinedSerializer ns1_myBankrollService_getCardPrimaryAccount_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountAbstract_getAccountAbstract_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract");
    private static final javax.xml.namespace.QName ns1_getAccountAbstract_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstract");
    private CombinedSerializer ns1_myBankrollService_getAccountAbstract_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getAccountAbstract_getAccountAbstractResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstractResponse");
    private static final javax.xml.namespace.QName ns1_getAccountAbstractResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getAccountAbstractResponse");
    private CombinedSerializer ns1_myBankrollService_getAccountAbstract_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateTrustee___forGenerateTrustee_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateTrustee");
    private static final javax.xml.namespace.QName ns1___forGenerateTrustee_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateTrustee");
    private CombinedSerializer ns1_myBankrollService___forGenerateTrustee_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1___forGenerateTrustee___forGenerateTrusteeResponse_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateTrusteeResponse");
    private static final javax.xml.namespace.QName ns1___forGenerateTrusteeResponse_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "__forGenerateTrusteeResponse");
    private CombinedSerializer ns1_myBankrollService___forGenerateTrustee_ResponseStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfo2_getOwnerInfo2_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo2");
    private static final javax.xml.namespace.QName ns1_getOwnerInfo2_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo2");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfo2_RequestStruct_SOAPSerializer;
    private static final javax.xml.namespace.QName ns1_getOwnerInfo2_getOwnerInfo2Response_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo2Response");
    private static final javax.xml.namespace.QName ns1_getOwnerInfo2Response_TYPE_QNAME = new QName("http://generated.bankroll.services.gate.web.phizic.rssl.com", "getOwnerInfo2Response");
    private CombinedSerializer ns1_myBankrollService_getOwnerInfo2_ResponseStruct_SOAPSerializer;
    private static final java.lang.String[] myNamespace_declarations =
                                        new java.lang.String[] {
                                            "ns0", "http://generated.bankroll.services.gate.web.phizic.rssl.com",
                                            "ns1", "http://java.sun.com/jax-rpc-ri/internal"
                                        };
    
    private static final QName[] understoodHeaderNames = new QName[] {  };
}
