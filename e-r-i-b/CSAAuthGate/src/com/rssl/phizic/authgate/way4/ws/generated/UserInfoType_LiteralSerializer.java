// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.authgate.way4.ws.generated;

import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.xsd.XSDConstants;
import com.sun.xml.rpc.encoding.literal.*;
import com.sun.xml.rpc.encoding.literal.DetailFragmentDeserializer;
import com.sun.xml.rpc.encoding.simpletype.*;
import com.sun.xml.rpc.encoding.soap.SOAPConstants;
import com.sun.xml.rpc.encoding.soap.SOAP12Constants;
import com.sun.xml.rpc.streaming.*;
import com.sun.xml.rpc.wsdl.document.schema.SchemaConstants;
import javax.xml.namespace.QName;
import java.util.List;
import java.util.ArrayList;

public class UserInfoType_LiteralSerializer extends LiteralObjectSerializerBase implements Initializable  {
    private static final javax.xml.namespace.QName ns1_LastName_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "LastName");
    private static final javax.xml.namespace.QName ns2_string_TYPE_QNAME = SchemaConstants.QNAME_TYPE_STRING;
    private CombinedSerializer ns2_myns2_string__java_lang_String_String_Serializer;
    private static final javax.xml.namespace.QName ns1_FirstName_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "FirstName");
    private static final javax.xml.namespace.QName ns1_MiddleName_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "MiddleName");
    private static final javax.xml.namespace.QName ns1_PassportNo_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "PassportNo");
    private static final javax.xml.namespace.QName ns1_ClientRegNum_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "ClientRegNum");
    private static final javax.xml.namespace.QName ns1_CB_CODE_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "CB_CODE");
    private static final javax.xml.namespace.QName ns1_DL_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "DL");
    private static final javax.xml.namespace.QName ns1_BirthDate_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "BirthDate");
    private static final javax.xml.namespace.QName ns1_MB_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "MB");
    private static final javax.xml.namespace.QName ns1_PasswordsLeft_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "PasswordsLeft");
    private static final javax.xml.namespace.QName ns1_CardNumber_QNAME = new QName("http://www.openwaygroup.com/iPAS/WS", "CardNumber");
    
    public UserInfoType_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle) {
        this(type, encodingStyle, false);
    }
    
    public UserInfoType_LiteralSerializer(javax.xml.namespace.QName type, java.lang.String encodingStyle, boolean encodeType) {
        super(type, true, encodingStyle, encodeType);
    }
    
    public void initialize(InternalTypeMappingRegistry registry) throws Exception {
        ns2_myns2_string__java_lang_String_String_Serializer = (CombinedSerializer)registry.getSerializer("", java.lang.String.class, ns2_string_TYPE_QNAME);
    }
    
    public java.lang.Object doDeserialize(XMLReader reader,
        SOAPDeserializationContext context) throws java.lang.Exception {
        com.rssl.phizic.authgate.way4.ws.generated.UserInfoType instance = new com.rssl.phizic.authgate.way4.ws.generated.UserInfoType();
        java.lang.Object member=null;
        javax.xml.namespace.QName elementName;
        java.util.List values;
        java.lang.Object value;
        
        reader.nextElementContent();
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_LastName_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_LastName_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setLastName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_FirstName_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_FirstName_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setFirstName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MiddleName_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MiddleName_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMiddleName((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_PassportNo_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PassportNo_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setPassportNo((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_ClientRegNum_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_ClientRegNum_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setClientRegNum((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_CB_CODE_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_CB_CODE_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setCB_CODE((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_DL_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_DL_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setDL((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_BirthDate_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_BirthDate_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setBirthDate((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_MB_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_MB_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setMB((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_PasswordsLeft_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_PasswordsLeft_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setPasswordsLeft((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        elementName = reader.getName();
        if (reader.getState() == XMLReader.START) {
            if (elementName.equals(ns1_CardNumber_QNAME)) {
                member = ns2_myns2_string__java_lang_String_String_Serializer.deserialize(ns1_CardNumber_QNAME, reader, context);
                if (member == null) {
                    throw new DeserializationException("literal.unexpectedNull");
                }
                instance.setCardNumber((java.lang.String)member);
                reader.nextElementContent();
            }
        }
        
        XMLReaderUtil.verifyReaderState(reader, XMLReader.END);
        return (java.lang.Object)instance;
    }
    
    public void doSerializeAttributes(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.authgate.way4.ws.generated.UserInfoType instance = (com.rssl.phizic.authgate.way4.ws.generated.UserInfoType)obj;
        
    }
    public void doSerialize(java.lang.Object obj, XMLWriter writer, SOAPSerializationContext context) throws java.lang.Exception {
        com.rssl.phizic.authgate.way4.ws.generated.UserInfoType instance = (com.rssl.phizic.authgate.way4.ws.generated.UserInfoType)obj;
        
        if (instance.getLastName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getLastName(), ns1_LastName_QNAME, null, writer, context);
        }
        if (instance.getFirstName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getFirstName(), ns1_FirstName_QNAME, null, writer, context);
        }
        if (instance.getMiddleName() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMiddleName(), ns1_MiddleName_QNAME, null, writer, context);
        }
        if (instance.getPassportNo() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getPassportNo(), ns1_PassportNo_QNAME, null, writer, context);
        }
        if (instance.getClientRegNum() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getClientRegNum(), ns1_ClientRegNum_QNAME, null, writer, context);
        }
        if (instance.getCB_CODE() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getCB_CODE(), ns1_CB_CODE_QNAME, null, writer, context);
        }
        if (instance.getDL() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getDL(), ns1_DL_QNAME, null, writer, context);
        }
        if (instance.getBirthDate() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getBirthDate(), ns1_BirthDate_QNAME, null, writer, context);
        }
        if (instance.getMB() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getMB(), ns1_MB_QNAME, null, writer, context);
        }
        if (instance.getPasswordsLeft() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getPasswordsLeft(), ns1_PasswordsLeft_QNAME, null, writer, context);
        }
        if (instance.getCardNumber() != null) {
            ns2_myns2_string__java_lang_String_String_Serializer.serialize(instance.getCardNumber(), ns1_CardNumber_QNAME, null, writer, context);
        }
    }
}
