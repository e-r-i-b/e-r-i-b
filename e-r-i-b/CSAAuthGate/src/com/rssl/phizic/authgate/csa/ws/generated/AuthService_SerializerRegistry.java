// This class was generated by the JAXRPC SI, do not edit.
// Contents subject to change without notice.
// JAX-RPC Standard Implementation (1.1.3, build R1)
// Generated source version: 1.1.3

package com.rssl.phizic.authgate.csa.ws.generated;

import com.sun.xml.rpc.client.BasicService;
import com.sun.xml.rpc.encoding.*;
import com.sun.xml.rpc.encoding.soap.*;

import javax.xml.rpc.encoding.*;
import javax.xml.namespace.QName;

public class AuthService_SerializerRegistry implements SerializerConstants {
    public AuthService_SerializerRegistry() {
    }
    
    public TypeMappingRegistry getRegistry() {
        
        TypeMappingRegistry registry = BasicService.createStandardTypeMappingRegistry();
        TypeMapping mapping12 = registry.getTypeMapping(SOAP12Constants.NS_SOAP_ENCODING);
        TypeMapping mapping = registry.getTypeMapping(SOAPConstants.NS_SOAP_ENCODING);
        TypeMapping mapping2 = registry.getTypeMapping("");
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "PrepareSessionRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.PrepareSessionRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.PrepareSessionRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "AuthSessionCancelRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.AuthSessionCancelRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.AuthSessionCancelRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "PrepareSessionRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.PrepareSessionRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.PrepareSessionRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "GetPutListType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.GetPutListType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.GetPutListType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckSessionRq-AuthContext-Put");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqAuthContextPut_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqAuthContextPut.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "AuthSessionCancelRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.AuthSessionCancelRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.AuthSessionCancelRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "SetAliasRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.SetAliasRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.SetAliasRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckAuthenticationRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckAuthenticationRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckAuthenticationRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckSessionRs-AuthData-Param");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRsAuthDataParam_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRsAuthDataParam.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckAuthenticationRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckAuthenticationRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckAuthenticationRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "SetAliasRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.SetAliasRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.SetAliasRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "MoveSessionRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.MoveSessionRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.MoveSessionRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "PrepareAuthenticationRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.PrepareAuthenticationRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.PrepareAuthenticationRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "PrepareAuthenticationRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.PrepareAuthenticationRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.PrepareAuthenticationRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckSessionRq-AuthContext-Get");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqAuthContextGet_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqAuthContextGet.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckSessionRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "CheckSessionRsType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRsType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.CheckSessionRsType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "StatusType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.StatusType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.StatusType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "AuthTokenType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.AuthTokenType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.AuthTokenType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "MoveSessionRqType");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.MoveSessionRqType_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.MoveSessionRqType.class, type, serializer);
        }
        {
            QName type = new QName("http://csa.sbrf.ru/AuthService", "ArrayOfParamListTypeParam");
            CombinedSerializer serializer = new com.rssl.phizic.authgate.csa.ws.generated.ArrayOfParamListTypeParam_LiteralSerializer(type, "", DONT_ENCODE_TYPE);
            registerSerializer(mapping2,com.rssl.phizic.authgate.csa.ws.generated.ArrayOfParamListTypeParam.class, type, serializer);
        }
        return registry;
    }
    
    private static void registerSerializer(TypeMapping mapping, java.lang.Class javaType, javax.xml.namespace.QName xmlType,
        Serializer ser) {
        mapping.register(javaType, xmlType, new SingletonSerializerFactory(ser),
            new SingletonDeserializerFactory((Deserializer)ser));
    }
    
}
